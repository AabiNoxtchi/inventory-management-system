{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\CustomSelect.jsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport './Filter.css';\nexport default (({\n  onChange,\n  items,\n  value,\n  className,\n  defaultMenuIsOpen,\n  disabled,\n  name,\n  log\n}) => {\n  const options = [];\n\n  const getOptions = items => {\n    if (items == null) return;\n\n    if (options.length < 1) {\n      // console.log(\"item options i = \" + JSON.stringify(items));\n      for (let i = 0; i < items.length; i++) {\n        //console.log(\"`${items[i][name].name}` = \" + `${items[i][name].name}`);\n        //console.log(\"`${items[i][name].name}` = \" + `${items[i][name].name}`);\n        options.push({\n          value: `${items[i].value || items[i].id}`,\n          label: `${items[i].name || items[i][name] && items[i][name].name || '...'}`\n        });\n      }\n    } // console.log(\"options = \"+JSON.stringify(options))\n\n\n    return options;\n  };\n\n  const defaultValue = (options, value) => {\n    //console.log('value = ' + value + ' option.value = ' + option.value);\n    //console.log('value= option.value = ' + (option.value == value));\n    // console.log(\"value = \" + value);\n    if (log) {\n      console.log(\"value = \" + value);\n      options.map(o => {\n        if (o.value == 'undefined') {\n          console.log(\"o.value = \" + o.value);\n          console.log(\"o.value == value = \" + (o.value == value));\n        }\n      });\n    }\n\n    return options ? options.find(option => option.value == value) : \"\";\n  };\n\n  return /*#__PURE__*/_jsxDEV(Select, {\n    className: className,\n    options: getOptions(items),\n    value: defaultValue(options, value),\n    onChange: value => onChange(value),\n    placeholder: \"...\",\n    autosize: true,\n    clearable: true,\n    isSearchable: true,\n    defaultMenuIsOpen: defaultMenuIsOpen,\n    isDisabled: disabled\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 17\n  }, this);\n});","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/CustomSelect.jsx"],"names":["React","Select","onChange","items","value","className","defaultMenuIsOpen","disabled","name","log","options","getOptions","length","i","push","id","label","defaultValue","console","map","o","find","option"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,OAAO,cAAP;AAEA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,KAAnB;AAA0BC,EAAAA,SAA1B;AAAqCC,EAAAA,iBAArC;AAAwDC,EAAAA,QAAxD;AAAmEC,EAAAA,IAAnE;AAA0EC,EAAAA;AAA1E,CAAD,KAAoF;AAE/F,QAAMC,OAAO,GAAG,EAAhB;;AAEA,QAAMC,UAAU,GAAIR,KAAD,IAAW;AAC1B,QAAIA,KAAK,IAAI,IAAb,EAAmB;;AACnB,QAAIO,OAAO,CAACE,MAAR,GAAiB,CAArB,EAAwB;AACrB;AACC,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGV,KAAK,CAACS,MAA1B,EAAkCC,CAAC,EAAnC,EAAuC;AAEnC;AACA;AACAH,QAAAA,OAAO,CAACI,IAAR,CACI;AAAEV,UAAAA,KAAK,EAAG,GAAED,KAAK,CAACU,CAAD,CAAL,CAAST,KAAT,IAAkBD,KAAK,CAACU,CAAD,CAAL,CAASE,EAAG,EAA1C;AAA6CC,UAAAA,KAAK,EAAG,GAAEb,KAAK,CAACU,CAAD,CAAL,CAASL,IAAT,IAAkBL,KAAK,CAACU,CAAD,CAAL,CAASL,IAAT,KAAkBL,KAAK,CAACU,CAAD,CAAL,CAASL,IAAT,EAAeA,IAAnD,IAA4D,KAAM;AAAzH,SADJ;AAEH;AAEJ,KAZyB,CAa3B;;;AACC,WAAOE,OAAP;AACH,GAfD;;AAiBA,QAAMO,YAAY,GAAG,CAACP,OAAD,EAAUN,KAAV,KAAoB;AACrC;AACA;AACD;AACC,QAAIK,GAAJ,EAAS;AACLS,MAAAA,OAAO,CAACT,GAAR,CAAY,aAAaL,KAAzB;AACAM,MAAAA,OAAO,CAACS,GAAR,CAAaC,CAAD,IAAO;AACf,YAAIA,CAAC,CAAChB,KAAF,IAAW,WAAf,EAA4B;AACxBc,UAAAA,OAAO,CAACT,GAAR,CAAY,eAAeW,CAAC,CAAChB,KAA7B;AACAc,UAAAA,OAAO,CAACT,GAAR,CAAY,yBAAyBW,CAAC,CAAChB,KAAF,IAAWA,KAApC,CAAZ;AACH;AACJ,OALD;AAMH;;AACD,WAAOM,OAAO,GAAGA,OAAO,CAACW,IAAR,CAAaC,MAAM,IAAIA,MAAM,CAAClB,KAAP,IAAgBA,KAAvC,CAAH,GAAmD,EAAjE;AACH,GAdD;;AAgBA,sBAEY,QAAC,MAAD;AACJ,IAAA,SAAS,EAAEC,SADP;AAEJ,IAAA,OAAO,EAAEM,UAAU,CAACR,KAAD,CAFf;AAGJ,IAAA,KAAK,EAAEc,YAAY,CAACP,OAAD,EAAUN,KAAV,CAHf;AAIJ,IAAA,QAAQ,EAAEA,KAAK,IAAIF,QAAQ,CAACE,KAAD,CAJvB;AAKJ,IAAA,WAAW,EAAE,KALT;AAMJ,IAAA,QAAQ,EAAE,IANN;AAOJ,IAAA,SAAS,EAAE,IAPP;AAQJ,IAAA,YAAY,EAAE,IARV;AASJ,IAAA,iBAAiB,EAAEE,iBATf;AAUJ,IAAA,UAAU,EAAEC;AAVR;AAAA;AAAA;AAAA;AAAA,UAFZ;AAkBH,CAvDD","sourcesContent":["import React from 'react'\r\nimport Select from 'react-select'\r\nimport './Filter.css'\r\n\r\nexport default ({ onChange, items, value, className, defaultMenuIsOpen, disabled , name , log}) => {\r\n\r\n    const options = []\r\n\r\n    const getOptions = (items) => {\r\n        if (items == null) return;\r\n        if (options.length < 1) {\r\n           // console.log(\"item options i = \" + JSON.stringify(items));\r\n            for (let i = 0; i < items.length; i++) {\r\n              \r\n                //console.log(\"`${items[i][name].name}` = \" + `${items[i][name].name}`);\r\n                //console.log(\"`${items[i][name].name}` = \" + `${items[i][name].name}`);\r\n                options.push(\r\n                    { value: `${items[i].value || items[i].id}`, label: `${items[i].name || (items[i][name] && items[i][name].name) || '...'}` })\r\n            }\r\n           \r\n        }\r\n       // console.log(\"options = \"+JSON.stringify(options))\r\n        return options\r\n    }\r\n    \r\n    const defaultValue = (options, value) => {\r\n        //console.log('value = ' + value + ' option.value = ' + option.value);\r\n        //console.log('value= option.value = ' + (option.value == value));\r\n       // console.log(\"value = \" + value);\r\n        if (log) {\r\n            console.log(\"value = \" + value);\r\n            options.map((o) => {\r\n                if (o.value == 'undefined') {\r\n                    console.log(\"o.value = \" + o.value);\r\n                    console.log(\"o.value == value = \" + (o.value == value))\r\n                }\r\n            })\r\n        }\r\n        return options ? options.find(option => option.value == value) : \"\"\r\n    }\r\n\r\n    return (\r\n       \r\n                <Select\r\n            className={className}\r\n            options={getOptions(items)}\r\n            value={defaultValue(options, value)}\r\n            onChange={value => onChange(value)}\r\n            placeholder={\"...\"}\r\n            autosize={true}\r\n            clearable={true}\r\n            isSearchable={true}\r\n            defaultMenuIsOpen={defaultMenuIsOpen}\r\n            isDisabled={disabled}\r\n            \r\n\r\n                />\r\n       \r\n        )\r\n}"]},"metadata":{},"sourceType":"module"}