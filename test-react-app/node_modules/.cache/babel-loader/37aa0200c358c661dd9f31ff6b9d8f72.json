{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ProductDataService from '../service/ProductDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\n\nclass ProductComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckedElement = event => {\n      console.log('in handle checked element');\n\n      if (event.target.value === this.state.productType) {} else {\n        this.setState({\n          productType: event.target.value\n        });\n      }\n    };\n\n    this.filterSubCategories = value => {\n      console.log('in filtersub categories value = ' + value.value);\n      let filteredsubs = [];\n      let subCategories2 = this.state.subCategories;\n\n      for (let i = 0; i < subCategories2; i++) {\n        if (subCategories2[i].category.id === value.value) {\n          filteredsubs.push(subCategories2[i]);\n        }\n      }\n\n      this.setState({\n        filteredSubCategories: filteredsubs\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      description: '',\n      productType: '',\n      productTypes: [],\n      subCategory: '',\n      subCategories: [],\n      filteredSubCategories: [],\n      categories: [],\n      amortizationPercent: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    ProductDataService.retrieve(this.state.id).then(response => {\n      console.log('got response in component did mount');\n\n      if (this.state.id > 0) {\n        this.setState({\n          name: response.data.name,\n          description: response.data.description,\n          productType: response.data.productType,\n          subCategory: response.data.subCategory,\n          amortizationPercent: response.data.amortizationPercent\n        });\n      }\n\n      this.setState({\n        productTypes: response.data.productTypes,\n        subCategories: response.data.subCategories,\n        categories: response.data.categories\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let item = {\n      id: this.state.id,\n      name: values.name,\n      targetDate: values.targetDate\n    };\n    console.log('item = ' + item);\n    ProductDataService.save(item).then(() => this.props.history.push('/products'));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = 'required field !!!';\n    } else if (values.name.length < 5) {\n      errors.userName = 'Enter atleast 5 Characters';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    this.props.history.push('/products');\n  }\n\n  render() {\n    console.log('rendering');\n    let {\n      id,\n      name,\n      description,\n      productType,\n      productTypes,\n      amortizationPercent,\n      categories,\n      subCategory,\n      subCategories,\n      filteredSubCategories\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Product \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          name,\n          description,\n          productType,\n          productTypes,\n          amortizationPercent,\n          subCategory,\n          categories,\n          subCategories,\n          filteredSubCategories\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: (props, setFieldValue) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control \",\n              as: \"textarea\",\n              type: \"textarea\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 37\n            }, this), productTypes.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mx-3\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-1\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value,\n                checked: type.name === this.state.productType,\n                onClick: this.handleCheckedElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 49\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"productType\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 33\n          }, this), this.state.productType === 'DMA' && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"w-50\",\n                items: categories,\n                value: subCategory !== '' ? subCategory.category.id : '',\n                onChange: this.filterSubCategories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \" selectedCategoryId\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"amortization percent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              type: \"number\",\n              name: \"amortizationPercent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"amortizationPercent\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ProductDataService","CustomSelect","ProductComponent","constructor","props","handleCheckedElement","event","console","log","target","value","state","productType","setState","filterSubCategories","filteredsubs","subCategories2","subCategories","i","category","id","push","filteredSubCategories","match","params","name","description","productTypes","subCategory","categories","amortizationPercent","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","values","item","targetDate","save","history","errors","length","userName","render","setFieldValue","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport ProductDataService from '../service/ProductDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\nclass ProductComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: '',\r\n            productType: '',\r\n            productTypes: [],           \r\n            subCategory: '',          \r\n            subCategories: [],\r\n            filteredSubCategories:[],\r\n            categories: [],           \r\n            amortizationPercent: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        ProductDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log('got response in component did mount');\r\n                if (this.state.id > 0) {\r\n                    this.setState({\r\n                        name: response.data.name,\r\n                        description: response.data.description,\r\n                        productType: response.data.productType,\r\n                        subCategory: response.data.subCategory,\r\n                        amortizationPercent: response.data.amortizationPercent,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    productTypes: response.data.productTypes,\r\n                    subCategories: response.data.subCategories,\r\n                    categories: response.data.categories,\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let item = {\r\n            id: this.state.id,\r\n            name: values.name,\r\n           \r\n            targetDate: values.targetDate\r\n        }\r\n        console.log('item = ' + item);\r\n       ProductDataService.save(item)\r\n            .then(() => this.props.history.push('/products'))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            errors.name = 'required field !!!'\r\n        } else if (values.name.length < 5) {\r\n            errors.userName = 'Enter atleast 5 Characters'\r\n        }\r\n\r\n       \r\n\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        this.props.history.push('/products')\r\n    }\r\n\r\n    handleCheckedElement = (event) => {\r\n        console.log('in handle checked element');\r\n        if (event.target.value === this.state.productType) {           \r\n        } else {\r\n            this.setState({\r\n                productType: event.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    filterSubCategories = (value) => {\r\n\r\n        console.log('in filtersub categories value = ' + value.value);\r\n\r\n        let filteredsubs = [];\r\n        let subCategories2 = this.state.subCategories;\r\n        for (let i = 0; i < subCategories2; i++) {\r\n            if (subCategories2[i].category.id === value.value) {\r\n                filteredsubs.push(subCategories2[i])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredSubCategories: filteredsubs\r\n        })\r\n    }\r\n\r\n    \r\n\r\n    render() {\r\n        console.log('rendering');\r\n        let { id, name, description, productType, productTypes, amortizationPercent, categories, subCategory, subCategories, filteredSubCategories } = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Product</h3> : <h3 className=\"mb-3\"> Add New Product </h3>}\r\n                <Formik\r\n                    initialValues={{ id, name, description, productType, productTypes, amortizationPercent, subCategory, categories, subCategories, filteredSubCategories}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        (props, setFieldValue) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>name</label>\r\n                                    <Field className=\"form-control w-25\" type=\"text\" name=\"name\" />\r\n                                    <ErrorMessage name=\"name\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>description</label>\r\n                                    <Field className=\"form-control \" as=\"textarea\" type=\"textarea\" name=\"description\" />\r\n                                    <ErrorMessage name=\"description\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>product type</label>\r\n                                    {\r\n                                        productTypes.map((type) =>\r\n                                            <label className=\"mx-3\">\r\n                                                <Field\r\n                                                    className=\"mx-1\"\r\n                                                    type=\"checkbox\" name=\"productType\" value={type.value}\r\n                                                    checked={type.name === this.state.productType}\r\n                                                    onClick={this.handleCheckedElement}/>\r\n                                                {type.name}\r\n                                    </label>)\r\n                                    }\r\n                                   \r\n                                    <ErrorMessage name=\"productType\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                {\r\n                                    this.state.productType === 'DMA' &&\r\n                                    <div>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>category</label>\r\n                                        <CustomSelect                                               \r\n                                                className={\"w-50\"}\r\n                                                items={categories}\r\n                                                value={subCategory !== '' ? subCategory.category.id : ''}\r\n                                                onChange={this.filterSubCategories}\r\n                                      \r\n                                        />\r\n                                        <ErrorMessage name=\" selectedCategoryId\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                    </div>\r\n                                }\r\n                                {\r\n                                    /*\r\n                                        \r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>sub-category</label>\r\n                                        <CustomSelect\r\n                                            name=\"subCategory\"\r\n                                            className={\"inline inline-1-5\"}\r\n                                            items={subCategories}\r\n                                            value={subCategory !== '' ? subCategory.id : ''}\r\n                                           \r\n                                        />\r\n                                        <ErrorMessage name=\" selectedCategoryId\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    */\r\n                                }\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>amortization percent</label>\r\n                                    <Field className=\"form-control w-50\" type=\"number\" name=\"amortizationPercent\" />\r\n                                    <ErrorMessage name=\"amortizationPercent\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                \r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductComponent"]},"metadata":{},"sourceType":"module"}