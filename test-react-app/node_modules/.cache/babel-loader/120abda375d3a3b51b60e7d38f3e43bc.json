{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date,\n        suppliers: response.data.suppliers,\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || [],\n        numErrors: null\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    DeliveryDataService.save(item).then(response => {\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      this.setState({\n        numErrors: error.response.data //arr\n\n      });\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n    console.log(\"values.date = \" + values.date);\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    const productNums = [...values.ddEditVM.productNums];\n    const quantity = e.target.value || 0;\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          id: '',\n          inventoryNumber: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          if (num[0].id !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].id);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n          } else {\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.id == '-' + i);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        }\n      }\n    }\n\n    setFieldValue(\"ddEditVM.productNums\", productNums);\n    setFieldValue(\"ddEditVM.quantity\", e.target.value);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.id == id);\n    if (index < 0) updatedProductNums.push({\n      id: id,\n      inventoryNumber: e.target.value\n    });else updatedProductNums[index].inventoryNumber = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = [];\n    let productNumErrors = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date) || new Date(),\n                  onChange: date => {\n                    console.log(\"date changed = \" + date);\n                    setFieldValue(\"date\", date);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top mt-3 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"product :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  className: \"d-inline-block inline-2-5\",\n                  items: products,\n                  value: values.ddEditVM.productId,\n                  onChange: selected => {\n                    setFieldValue(\"ddEditVM.productName\", selected.label);\n                    setFieldValue(\"ddEditVM.productId\", selected.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 41\n                }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 219,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1\",\n                  children: \"quantity :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control d-inline p-1 inline-100px\",\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"ddEditVM.quantity\",\n                  onChange: e => {\n                    this.onChangeQuantity(e, values, setFieldValue);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 225,\n                  columnNumber: 45\n                }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 232,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1\",\n                  children: \"unit price :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control d-inline p-1 inline-100px\",\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"ddEditVM.pricePerOne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 41\n                }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 242,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn mr-1\",\n                type: \"button\",\n                onClick: () => {\n                  let iserror = false;\n\n                  if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                    setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                    iserror = true;\n                  } else {\n                    values.deliveryDetailEditVMs.map((x, y) => {\n                      if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                        iserror = true;\n                        let ddErrorName = values.ddEditVMerror.name;\n                        ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                        setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                      }\n                    });\n                  }\n\n                  if (values.ddEditVM.pricePerOne == '') {\n                    setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  if (values.ddEditVM.quantity == '') {\n                    setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  if (values.ddEditVM.quantity > 0) {\n                    let ddErrorNums = values.productNumErrors;\n\n                    for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                      if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {\n                        ddErrorNums[i] = 'required field !!!';\n                        iserror = true;\n                      } else if (values.ddEditVM.productNums[i].inventoryNumber.length < 4) {\n                        ddErrorNums[i] = 'too short !!!';\n                        iserror = true;\n                      } else {\n                        let isSame = false;\n\n                        for (let j = 0; j < i; j++) {\n                          if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\n                            isSame = true;\n                            iserror = true;\n                          }\n                        }\n\n                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                      }\n                    }\n\n                    setFieldValue(\"productNumErrors\", ddErrorNums);\n                  }\n\n                  if (!iserror) {\n                    if (values.index === '') {\n                      let list = values.deliveryDetailEditVMs;\n                      list.push(values.ddEditVM);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    } else {\n                      let list = values.deliveryDetailEditVMs;\n                      list[values.index] = values.ddEditVM; // edited;\n\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    }\n\n                    this.resetddEditVMForm(values, setFieldValue);\n                  }\n                },\n                children: values.index !== '' ? \"Update\" : \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete\",\n                type: \"button\",\n                onClick: () => {\n                  this.resetddEditVMForm(values, setFieldValue);\n                },\n                children: \"reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"mb-1\",\n            children: values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"inventory number \", i + 1, \" :\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: `ddEditVM.productNums.${i}.inventoryNumber`,\n                type: \"text\",\n                className: 'form-control d-inline-block inline-4',\n                onChange: e => {\n                  if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-' + i, values, setFieldValue);\n                  setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 323,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                type: \"button\",\n                onClick: () => {\n                  let list = values.ddEditVM.productNums;\n                  list.splice(i, 1);\n                  setFieldValue(\"ddEditVM.productNums\", list);\n\n                  if (num.id !== '') {\n                    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                    let index = updatedProductNums.findIndex(x => x.id === num.id);\n\n                    if (index > -1) {\n                      updatedProductNums.splice(index, 1);\n                      setFieldValue(\"ddEditVM.updatedProductNums\", list);\n                    }\n\n                    let deleted = values.ddEditVM.deletedNums || [];\n                    deleted.push(num.id);\n                    setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                  }\n\n                  setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 53\n              }, this), this.state.numErrors && this.state.numErrors instanceof Array && values.index !== '' && this.state.numErrors[values.index] && this.state.numErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-inline ml-1\",\n                children: this.state.numErrors[values.index][i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 53\n              }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-inline ml-1\",\n                children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-3 pt-1\",\n                  onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 57\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 53\n              }, this)]\n            }, num.id || i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 317,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 375,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 374,\n            columnNumber: 33\n          }, this), this.state.numErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 380,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border x-Table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 386,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Unit Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '140px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 45\n              }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: values.index === index ? \"table-active\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 393,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 394,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(dd.pricePerOne)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 395,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      console.log(\"index = \" + index);\n                      setFieldValue(\"index\", index);\n                      setFieldValue(\"ddEditVM\", dd);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 400,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.deliveryDetailEditVMs;\n                      list.splice(index, 1);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n\n                      if (dd.id > 0) {\n                        let deleted = values.deleteddds;\n                        deleted.push(dd.id);\n                        setFieldValue(\"deleteddds\", deleted);\n                      }\n\n                      if (values.index == index) {\n                        this.resetddEditVMForm(values, setFieldValue);\n                      }\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 400,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 382,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5 ml-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn px-5\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 ml-3\",\n              type: \"button\",\n              onClick: this.cancelForm,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 426,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 424,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","state","id","match","params","deliveryView","number","date","supplierId","suppliers","deliveryDetailEditVMs","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","numErrors","values","item","deletedDetailsIds","deleteddds","targetDate","save","path","length","history","push","catch","error","errors","console","log","window","back","onChangeQuantity","e","setFieldValue","productNums","ddEditVM","quantity","target","value","previousQuantity","parseInt","i","inventoryNumber","num","splice","undefined","deletedNums","updatedNums","updatedProductNums","findIndex","x","onUpdateProductNums","resetddEditVMForm","VM","productId","productName","pricePerOne","render","productNumErrors","Date","selected","label","name","iserror","map","y","ddErrorName","ddErrorNums","isSame","j","list","deleted","Array","width","dd","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n            suppliers: [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},           \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeliveryDataService.retrieve(this.state.id)\r\n           .then(response => {\r\n              this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date,\r\n                    suppliers: response.data.suppliers,  \r\n                    deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || [],\r\n                    numErrors : null\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n       let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number:values.number,\r\n            supplierId: values.supplierId,\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n               let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n               this.props.history.push(path)\r\n            }).catch((error) => {\r\n                this.setState({\r\n                    numErrors: error.response.data //arr\r\n                });\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n       \r\n        let errors = {}  \r\n        console.log(\"values.date = \" + values.date);\r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n       \r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }\r\n       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        const productNums = [...values.ddEditVM.productNums];\r\n        const quantity = e.target.value || 0;\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n    if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ id: '', inventoryNumber: '' });\r\n        }\r\n    } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n            let num = productNums.splice(i, 1);\r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               if ( num[0].id !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].id);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);                   \r\n                } else {\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.id == '-' + i);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n        }}\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];        \r\n        let index = updatedProductNums.findIndex(x => x.id == id);\r\n         if (index < 0)\r\n            updatedProductNums.push({ id: id, inventoryNumber: e.target.value });\r\n        else\r\n            updatedProductNums[index].inventoryNumber = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];    \r\n        let productNumErrors = [];\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds, productNumErrors\r\n                    }}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label>date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                            className=\"form-control inline-2-5\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            selected={(values.date && new Date(values.date)) || new Date()}\r\n                                            onChange={date => {\r\n                                                console.log(\"date changed = \" + date);\r\n                                                setFieldValue(\"date\", date)\r\n                                            }} />                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                        <label>supplier</label>\r\n                                        <div>\r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}/>    \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                                {/* ********************************************************  */}\r\n                                <fieldset className=\"d-flex align-items-top mt-3 mb-3\">\r\n                                    <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label>product :&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {                                              \r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {                                                                                                 \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n                                                }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>                                   \r\n                                    <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {                                           \r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                               if (x.productName == values.ddEditVM.productName && (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {                                                        \r\n                                                         ddErrorNums[i] = 'required field !!!';                                                      \r\n                                                        iserror = true;                                                       \r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].inventoryNumber.length < 4) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                    }                                                 \r\n                                                }\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                  setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;                                              \r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }                                           \r\n                                           \r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)                                            \r\n                                        }}>reset</button>\r\n                                    </div>\r\n                                </fieldset>                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {\r\n                                        values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                            <div key={num.id || i} className=\"ml-3\">                                               \r\n                                                <label>inventory number {i + 1} :&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.inventoryNumber`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4'}\r\n                                                    onChange={e => {                                                      \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);                                                       \r\n                                                    }}/>  \r\n                                                {                                                   \r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.ddEditVM.productNums;                                                           \r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.productNums\", list)\r\n                                                            if (num.id !== '') {\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                let index = updatedProductNums.findIndex(x => x.id === num.id);\r\n                                                                if (index > -1) {                                                                \r\n                                                                    updatedProductNums.splice(index, 1)\r\n                                                                    setFieldValue(\"ddEditVM.updatedProductNums\", list)\r\n                                                                }                                                            \r\n                                                                let deleted = values.ddEditVM.deletedNums || [];\r\n                                                                deleted.push(num.id)\r\n                                                                setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                                }\r\n                                                            setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                        }}>Delete</button>\r\n                                                }\r\n                                                {\r\n                                                    this.state.numErrors && this.state.numErrors instanceof Array\r\n                                                    && values.index !== '' && this.state.numErrors[values.index]\r\n                                                    && this.state.numErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                       \r\n                                                        {this.state.numErrors[values.index][i]}\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                        \r\n                                                        {\r\n                                                            values.productNumErrors[i] \r\n                                                        }\r\n                                                        <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>                                                       \r\n                                                    </div>\r\n                                                }                                                  \r\n                                            </div>\r\n                                        )}\r\n                                </fieldset>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>\r\n                                {\r\n                                    this.state.numErrors &&\r\n                                    <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                                }                               \r\n                                    <table className=\"table border x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                                <td style={{ width: '140px' }}></td>\r\n                                             </tr>\r\n                                    {\r\n                                        deliveryDetailEditVMs.map((dd, index) =>\r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                <td><button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    console.log(\"index = \" + index);                                                  \r\n                                                        setFieldValue(\"index\", index);\r\n                                                        setFieldValue(\"ddEditVM\", dd)\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;                                                            \r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)                                                           \r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)                                                                \r\n                                                            }\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }                                                           \r\n                                                        }}>Delete</button>\r\n                                                </td>\r\n                                            </tr>\r\n                                    )}\r\n                                        </tbody>\r\n                                    </table>                                                  \r\n                                <div className=\"mt-5 ml-3\">\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-3\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}