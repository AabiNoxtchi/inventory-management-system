{"ast":null,"code":"class Function {\n  getErrorMsg(error) {\n    /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                    error.response.data.message ? error.response.data.message : error;*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                   error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n           error.response.data.message ? error.response.data.message : error;*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                    error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let msg = \"\" + error.response && typeof error.response.data == 'string' ?\r\n               error.response.data : error.response.data.errors ?\r\n                   error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                       error.response.data.message : error;*/\n    // let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\n    //\"errors occured : \" + error + \" !!!\";\n\n    /* let errormsg = error.response && error.response.data ?\r\n         error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n         error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                   error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let msg = error.response && error.response.data && typeof error.response.data == 'string' ? error.response.data :\r\n                  error.response && error.response.data && typeof error.response.data == 'object'\r\n                    && error.response.data.message != null ? error.response && error.response.data &&error.response.data.message :\r\n                    error.response && error.response.data && typeof error.response.data == 'object'\r\n                    && error.response.data.message == null ? 'errors found !!!' : error;*/\n    let msg = \"\" + error && // error.response && error.response.data && typeof error.response.data == 'string' ?\n    //error.response.data :\n    error.response && error.response.data ? error.response.data.errors ? error.response.data.errors[0].defaultMessage : error.response.data.message ? error.response.data.message : error : 'something went wrong !!!';\n    console.log(\"msg = \" + msg);\n    return msg;\n  }\n\n  getDate() {\n    // new date \n    //let g = new Date();\n\n    /*  let date = new Date();\r\n     date =  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n      //console.log(\"g after turn = \" + g);*/\n    let date = new Date();\n    date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n    console.log(\"date after turn = \" + date);\n    return date;\n  }\n\n  convertDate(date) {\n    // to string \n    if (date && date != 'undefined') {\n      // let date = \n      date = new Date(date);\n      date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n      date = date.toISOString();\n      date = date.substring(0, date.indexOf('T'));\n      return date;\n    } else return '';\n  }\n\n}\n\nexport default new Function();","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Shared/Function.js"],"names":["Function","getErrorMsg","error","msg","response","data","errors","defaultMessage","message","console","log","getDate","date","Date","setHours","getHours","getTimezoneOffset","convertDate","toISOString","substring","indexOf"],"mappings":"AACA,MAAMA,QAAN,CAAe;AAGXC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf;AACR;;AACQ;AACR;;AACQ;AACR;;AACQ;AACR;;AACQ;AACR;AACA;AACA;AACQ;AACA;;AACA;AACR;;AACQ;AACR;;AACQ;AACR;;AAEQ;AACR;AACA;AACA;AACA;AAGQ,QAAIC,GAAG,GAAG,KAAKD,KAAL,IACN;AACA;AACAA,IAAAA,KAAK,CAACE,QAHA,IAGYF,KAAK,CAACE,QAAN,CAAeC,IAH3B,GAINH,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,GACIJ,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,cADlC,GACmDL,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBG,OAApB,GAC3CN,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBG,OADuB,GAE3CN,KAPF,GAOU,0BAPpB;AAQAO,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWP,GAAvB;AACA,WAAOA,GAAP;AACH;;AAEDQ,EAAAA,OAAO,GAAG;AAAE;AACR;;AACF;AACN;AACA;AAES,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACDD,IAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAP,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBE,IAAnC;AACA,WAAOA,IAAP;AACH;;AAEDK,EAAAA,WAAW,CAACL,IAAD,EAAO;AAAE;AAChB,QAAIA,IAAI,IAAIA,IAAI,IAAI,WAApB,EAAiC;AAC7B;AACAA,MAAAA,IAAI,GAAI,IAAIC,IAAJ,CAASD,IAAT,CAAR;AACAA,MAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAJ,MAAAA,IAAI,GAAGA,IAAI,CAACM,WAAL,EAAP;AACAN,MAAAA,IAAI,GAAGA,IAAI,CAACO,SAAL,CAAe,CAAf,EAAkBP,IAAI,CAACQ,OAAL,CAAa,GAAb,CAAlB,CAAP;AACA,aAAOR,IAAP;AACH,KAPD,MAOO,OAAO,EAAP;AACV;;AAlEU;;AAqEf,eAAe,IAAIZ,QAAJ,EAAf","sourcesContent":["\r\nclass Function {\r\n\r\n\r\n    getErrorMsg(error) {\r\n\r\n        /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                        error.response.data.message ? error.response.data.message : error;*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                       error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n               error.response.data.message ? error.response.data.message : error;*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                        error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let msg = \"\" + error.response && typeof error.response.data == 'string' ?\r\n                   error.response.data : error.response.data.errors ?\r\n                       error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                           error.response.data.message : error;*/\r\n        // let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\r\n        //\"errors occured : \" + error + \" !!!\";\r\n        /* let errormsg = error.response && error.response.data ?\r\n             error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n             error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                       error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n\r\n        /* let msg = error.response && error.response.data && typeof error.response.data == 'string' ? error.response.data :\r\n\r\n                    error.response && error.response.data && typeof error.response.data == 'object'\r\n                        && error.response.data.message != null ? error.response && error.response.data &&error.response.data.message :\r\n                        error.response && error.response.data && typeof error.response.data == 'object'\r\n                        && error.response.data.message == null ? 'errors found !!!' : error;*/\r\n\r\n        let msg = \"\" + error &&\r\n            // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n            //error.response.data :\r\n            error.response && error.response.data ?\r\n            error.response.data.errors ?\r\n                error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                    error.response.data.message :\r\n                    error : 'something went wrong !!!';\r\n        console.log(\"msg = \" + msg);\r\n        return msg;\r\n    }\r\n\r\n    getDate() { // new date \r\n        //let g = new Date();\r\n      /*  let date = new Date();\r\n       date =  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n        //console.log(\"g after turn = \" + g);*/\r\n\r\n         let date = new Date();       \r\n        date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n        console.log(\"date after turn = \" + date);\r\n        return date;\r\n    }\r\n\r\n    convertDate(date) { // to string \r\n        if (date && date != 'undefined') {\r\n            // let date = \r\n            date = (new Date(date));\r\n            date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n            return date;\r\n        } else return '';\r\n    }\r\n}\r\n\r\nexport default new Function()"]},"metadata":{},"sourceType":"module"}