{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListUserProfilesComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport PaginationComponent from './PaginationComponent';\nimport UserProfileFilter from './Filters/UserProfileFilter';\nimport '../myStyles/Style.css';\nimport { CSVLink } from \"react-csv\";\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\nimport UserProfileInnerComponent from './UserProfileInnerComponent';\nimport TimelineInnerComponent from './TimelineInnerComponent';\nconst headers = [{\n  label: \"UserName\",\n  key: \"userName\"\n}, {\n  label: \"product\",\n  key: \"productName\"\n}, {\n  label: \"Inventory Number\",\n  key: \"inventoryNumber\"\n}, {\n  label: \"Given at\",\n  key: \"givenAt\"\n}, {\n  label: \"Returned at\",\n  key: \"returnedAt\"\n}];\n\nclass ListUserProfilesComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadReport = () => {\n      let newSearch = this.getSearchAll();\n      UserProfileDataService.retrieveAll(newSearch).then(response => {\n        let data = response.data.items;\n        data = data.map(row => ({ ...row,\n          givenAt: new Intl.DateTimeFormat(\"en-GB\", {\n            month: \"numeric\",\n            day: \"2-digit\",\n            year: \"numeric\"\n          }).format(new Date(row.givenAt)),\n          returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\n            month: \"numeric\",\n            day: \"2-digit\",\n            year: \"numeric\"\n          }).format(new Date(row.returnedAt))\n        }));\n        this.setState({\n          alldata: data\n        });\n        this.csvLink.current.link.click();\n      });\n    };\n\n    this.getSearchAll = () => {\n      let search = this.state.search;\n      search.replace(/\\s+/g, '');\n      let newSearch = '';\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage')) continue;else newSearch += searchItems[i] + '&';\n      }\n\n      newSearch = '?' + newSearch;\n      if (newSearch.length > 1) newSearch += '&';\n      newSearch += 'Pager.itemsPerPage=2147483647';\n      return newSearch;\n    };\n\n    this.cancelToGive = () => {\n      console.log(\"canceltogive\");\n      this.setState({\n        i: null,\n        selectedUserId: null\n      });\n    };\n\n    this.saveToGive = (item, giving) => {\n      console.log(\"save to give clicked\");\n      let g = new Date();\n      g.setHours(g.getHours() - g.getTimezoneOffset() / 60);\n      console.log(\"g after turn = \" + g);\n      let itemToSend = {\n        previousId: item.id,\n        userId: this.state.selectedUserId || null,\n        productDetailId: item.productDetailId,\n        givenAt: g\n        /*new Intl.DateTimeFormat(\"en-GB\", {\r\n            month: \"numeric\",\r\n            day: \"2-digit\",\r\n            year: \"numeric\",\r\n        }).format(new Date())*/\n\n        /* returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n             month: \"numeric\",\r\n             day: \"2-digit\",\r\n             year: \"numeric\",\r\n         }).format(new Date())*/\n\n      };\n      console.log(\"itemto send = \" + JSON.stringify(itemToSend));\n      UserProfileDataService.save(itemToSend).then(response => {\n        console.log(\"response = \" + response.data);\n        this.setState({\n          message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully '\n        });\n        this.refresh();\n      }).catch(error => {\n        console.log(\"error = \" + error);\n        console.log(\"error.response = \" + error.response);\n      });\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.state = {\n      items: [],\n      message: null,\n      pager: null,\n      filter: null,\n      search: window.location.search || '',\n      alldata: [],\n      i: null,\n      selectedUserId: null,\n      profileShow: {\n        profile: {},\n        show: false\n      },\n      timeline: {\n        show: false\n      }\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.updateClicked = this.updateClicked.bind(this); // this.addClicked = this.addClicked.bind(this)\n\n    this.csvLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    UserProfileDataService.retrieveAll(this.state.search).then(response => {\n      console.log(\"item = \" + JSON.stringify(response.data.daoitems)); //console.log(\"response data = \"+JSON.stringify(response.data));\n\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: response.data.filter || this.state.filter,\n        i: null,\n        selectedUserId: null\n      });\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\n      });\n    });\n  }\n\n  deleteClicked(id) {\n    UserProfileDataService.delete(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    }).catch(error => {\n      let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\n      this.setState({\n        errormsg: msg\n      });\n    });\n  }\n  /* updateClicked(id) {\r\n       this.props.history.push(`/userprofiles/${id}`)\r\n   }*/\n\n\n  updateTimeline(value) {\n    if (this.state.timeline.show == value) return;\n    /* if (value == true && this.state.filter&&(!this.state.filter.productDetailId || !this.state.filter.givenAfter) ) {\r\n         //let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n         this.setState({\r\n             errormsg: `to update time line search for inventory first (by selecting inventory number from above search) ,\r\n                             and at least limit the timeline given after, thank you!!!`\r\n         })\r\n         return;\r\n     }*/\n\n    let timeline = this.state.timeline;\n    timeline.show = value;\n    this.setState({\n      timeline: timeline,\n      message: null\n    });\n    /*let filter = this.state.filter;\r\n    if (filter.userId != null || filter.myProfile != null) {\r\n          let search = `userprofiles?timelineView=true&Filter.productDetailId=` + filter.productDetailId;\r\n        search += filter.givenAfter != null ? `&Filter.givenAfter=` + filter.givenAfter : ``;\r\n        search += filter.returnedBefore != null ? `&Filter.returnedBefore=` + filter.returnedBefore:``;\r\n        window.location.href = search;\r\n    }*/\n  }\n\n  updateClicked(item, x) {\n    let show = this.state.profileShow;\n    show.show = !show.show;\n\n    if (show.show == true) {\n      show.profile = JSON.parse(JSON.stringify(item));\n      show.x = x;\n    } else {\n      show.error = '';\n    }\n\n    this.setState({\n      profileShow: show,\n      message: null\n    });\n  }\n  /*addforUserClicked = () => {\r\n      let item = {\r\n        }\r\n  }*/\n\n\n  addClicked(name) {\n    //this.props.history.push(`/userprofiles/-1`)\n    console.log(\"in add clicked\");\n    console.log(\"name = \" + name);\n    let item = {\n      userId: this.state.filter.userId || null,\n      userName: name\n    };\n    this.updateClicked(item, null);\n  }\n\n  onFilterSearchChange(search) {\n    this.setState({\n      search: search\n    });\n    this.refresh();\n  }\n\n  render() {\n    const userRole = AuthenticationService.getLoggedUerRole();\n    const userName = AuthenticationService.getLoggedUerName(); //const data = this.state.items;\n\n    const data = this.state.items.map(row => ({ ...row,\n      givenAt: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.givenAt)),\n      returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.returnedAt))\n    }));\n    const dataAll = '';\n    const filteredUserTitle = userRole == 'ROLE_Employee' || this.state.filter != null && this.state.filter.myProfile != null ? 'my profile' : this.state.filter != null && this.state.filter.userId != null ? this.state.filter.userNames.find(n => n.value == this.state.filter.userId).name : null;\n    console.log(\"filteredUserTitle = \" + filteredUserTitle);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.i != null ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 17\n      }, this), this.state.profileShow.profile && this.state.profileShow.show == true && /*#__PURE__*/_jsxDEV(UserProfileInnerComponent, {\n        profileShow: this.state.profileShow,\n        items: this.state.items,\n        filter: this.state.filter,\n        message: this.state.message // suppliers={this.state.filter.suppliers}\n        ,\n        updateClicked: () => this.updateClicked(null),\n        refresh: () => this.refresh(),\n        setMessage: value => this.setState({\n          message: `update successful`\n        }) //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 21\n      }, this), this.state.filter && /*#__PURE__*/_jsxDEV(UserProfileFilter, { ...this.state.filter,\n        userRole: userRole,\n        timeline: this.state.timeline,\n        onSearch: search => {\n          this.onFilterSearchChange(search);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 299,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 d-inline-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" User Profiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 306,\n              columnNumber: 29\n            }, this), filteredUserTitle != null && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2003(\\xA0\", filteredUserTitle, \"\\xA0)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 305,\n            columnNumber: 25\n          }, this), userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pull-right mr-5\",\n            style: {\n              position: \"relative\"\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mx-1 m-2 mt-3\",\n              type: \"radio\",\n              checked: this.state.timeline.show == false,\n              onClick: () => this.state.timeline.show ? this.updateTimeline(false) : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 315,\n              columnNumber: 33\n            }, this), \"Profiles View\", /*#__PURE__*/_jsxDEV(\"input\", {\n              id: \"btnTimeLine\",\n              className: \"mx-1 m-2 mt-3 ml-5\",\n              type: \"radio\",\n              checked: this.state.timeline.show == true,\n              disabled: ''\n              /*!this.state.filter || (this.state.filter &&\r\n              !(this.state.filter.productDetailId != null && this.state.filter.givenAfter != null))*/\n              ,\n              onClick: () => !this.state.timeline.show ? this.updateTimeline(true) : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 322,\n              columnNumber: 37\n            }, this), \"Update Timeline\", /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"timelinenote \",\n              style: {\n                fontSize: \"65%\"\n              },\n              children: \" select inventory and timeline to activate this button \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 313,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 304,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [!this.state.timeline.show && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap \",\n            children: [/*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [userRole == 'ROLE_Mol' &&\n                /*#__PURE__*/\n                //this.state.filter && this.state.filter.userId &&\n                _jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn px-5  \",\n                  onClick: () => {\n                    //if (filteredUserTitle == null) this.updateClicked(null, 100)\n                    this.addClicked(filteredUserTitle);\n                  },\n                  children: \"Add New\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                  className: \"btn btn-mybtn px-3 ml-2\",\n                  data: data,\n                  headers: headers,\n                  filename: \"user-profiles-page.csv\",\n                  asyncOnClick: true,\n                  onClick: () => {\n                    console.log(\"You click the link\");\n                  },\n                  children: \"Download this page\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn px-3 ml-2\",\n                  onClick: this.downloadReport,\n                  children: \"Download All\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 359,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                  data: this.state.alldata,\n                  filename: \"user-profiles-all.csv\",\n                  className: \"hidden\",\n                  headers: headers,\n                  ref: this.csvLink,\n                  target: \"_blank\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 360,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 35\n              }, this), this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 369,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 340,\n            columnNumber: 25\n          }, this), userRole == 'ROLE_Mol' && this.state.timeline.show && /*#__PURE__*/_jsxDEV(TimelineInnerComponent, {\n            filter: this.state.filter,\n            items: JSON.parse(JSON.stringify(this.state.items)),\n            updateTimeline: value => this.updateTimeline(value),\n            setMessage: msg => {\n              console.log(\"msg = \" + msg);\n              this.setState({\n                message: msg\n              });\n            },\n            refresh: () => {\n              this.updateTimeline(false);\n              this.refresh();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 29\n          }, this), !this.state.timeline.show && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning\",\n              children: this.state.errormsg\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 383,\n              columnNumber: 53\n            }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-success d-flex\",\n              children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-close ml-auto pr-3 pt-1\",\n                onClick: this.togglemsgbox\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 385,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 384,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table border-bottom my-table\",\n              children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n                children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"user\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 389,\n                    columnNumber: 68\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 390,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"inventory number\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"given at\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 392,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"returned at\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 393,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    children: \"Update \\u2003\\xA0 Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 396,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 388,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 387,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: this.state.i == i ? \"above-row border-r\" : \"\",\n                    children: item.userName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 80\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: this.state.i == i ? \"above-row \" : \"\",\n                    children: item.productName\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: this.state.i == i ? \"above-row\" : \"\",\n                    children: item.inventoryNumber\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 406,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: this.state.i == i ? \"above-row\" : \"\",\n                    children: new Intl.DateTimeFormat(\"en-GB\", {\n                      month: \"long\",\n                      day: \"2-digit\",\n                      year: \"numeric\"\n                    }).format(new Date(item.givenAt))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 407,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    className: userRole == 'ROLE_Mol' && item.returnedAt == null ? this.state.i == i ? \"above-row border-l with-btn\" : \"with-btn\" : \"\",\n                    children: item.returnedAt != null ? new Intl.DateTimeFormat(\"en-GB\", {\n                      month: \"long\",\n                      day: \"2-digit\",\n                      year: \"numeric\"\n                    }).format(new Date(item.returnedAt)) : userRole == 'ROLE_Mol' && userName != item.userName ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn f-r\",\n                      onClick: () => this.saveToGive(item, false),\n                      children: \"return\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 427,\n                      columnNumber: 65\n                    }, this) : (this.state.i == null || this.state.i != i) && item.returnedAt == null ? /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn f-r\",\n                      onClick: () => {\n                        console.log(\"give to clicked\");\n                        this.setState({\n                          i: i\n                        });\n                      },\n                      children: \"give to\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 431,\n                      columnNumber: 71\n                    }, this) : this.state.i == i ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"inline d-flex above-label \"\n                        /*this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"*/\n                        ,\n                        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                          children: \"select\\xA0user\\xA0\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 439,\n                          columnNumber: 81\n                        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                          defaultMenuIsOpen: true,\n                          className: \"inline inline-3 above-select\",\n                          items: this.state.filter.userNames,\n                          value: '',\n                          onChange: selected => {\n                            this.setState({\n                              selectedUserId: selected.value\n                            });\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 440,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 436,\n                        columnNumber: 77\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn mr-1 above-btn\",\n                        onClick: () => this.saveToGive(item, true),\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-save\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 450,\n                          columnNumber: 81\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 449,\n                        columnNumber: 77\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn btn-delete above-btn\",\n                        onClick: () => this.cancelToGive(),\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          className: \"fa fa-close\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 452,\n                          columnNumber: 81\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 451,\n                        columnNumber: 77\n                      }, this)]\n                    }, void 0, true) : '-'\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn mr-1\",\n                      onClick: () => this.updateClicked(item, i),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 485,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn btn-delete\",\n                      disabled: item.userName == userName,\n                      onClick: () => this.deleteClicked(item.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 486,\n                      columnNumber: 57\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 485,\n                    columnNumber: 53\n                  }, this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 403,\n                  columnNumber: 49\n                }, this))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 399,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListUserProfilesComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListUserProfilesComponent.jsx"],"names":["React","Component","UserProfileDataService","PaginationComponent","UserProfileFilter","CSVLink","AuthenticationService","CustomSelect","UserProfileInnerComponent","TimelineInnerComponent","headers","label","key","ListUserProfilesComponent","constructor","props","downloadReport","newSearch","getSearchAll","retrieveAll","then","response","data","items","map","row","givenAt","Intl","DateTimeFormat","month","day","year","format","Date","returnedAt","setState","alldata","csvLink","current","link","click","search","state","replace","searchItems","split","i","length","startsWith","cancelToGive","console","log","selectedUserId","saveToGive","item","giving","g","setHours","getHours","getTimezoneOffset","itemToSend","previousId","id","userId","productDetailId","JSON","stringify","save","message","refresh","catch","error","togglemsgbox","pager","filter","window","location","profileShow","profile","show","timeline","bind","deleteClicked","updateClicked","createRef","componentDidMount","daoitems","errormsg","delete","msg","updateTimeline","value","x","parse","addClicked","name","userName","onFilterSearchChange","render","userRole","getLoggedUerRole","getLoggedUerName","dataAll","filteredUserTitle","myProfile","userNames","find","n","position","fontSize","productName","inventoryNumber","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserProfileDataService from '../service/UserProfileDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport UserProfileFilter from './Filters/UserProfileFilter';\r\nimport '../myStyles/Style.css';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport UserProfileInnerComponent from './UserProfileInnerComponent';\r\nimport TimelineInnerComponent from './TimelineInnerComponent';\r\n\r\n\r\n\r\nconst headers = [\r\n    { label: \"UserName\", key: \"userName\" },\r\n    { label: \"product\", key: \"productName\" },\r\n    { label: \"Inventory Number\", key: \"inventoryNumber\" },\r\n    { label: \"Given at\", key: \"givenAt\" },\r\n    { label: \"Returned at\", key: \"returnedAt\" },\r\n   \r\n];\r\n\r\n\r\n\r\nclass ListUserProfilesComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            message: null,\r\n            pager: null,\r\n            filter: null,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n            i: null,\r\n            selectedUserId: null,\r\n            profileShow: {\r\n                profile: {}, show: false\r\n            },\r\n            timeline: {\r\n                show:false\r\n            }\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n       // this.addClicked = this.addClicked.bind(this)\r\n        this.csvLink = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        UserProfileDataService.retrieveAll(this.state.search)\r\n            .then(\r\n            response => {\r\n                console.log(\"item = \" + JSON.stringify(response.data.daoitems))\r\n                    //console.log(\"response data = \"+JSON.stringify(response.data));\r\n                    this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: response.data.filter||this.state.filter,\r\n                         i: null,\r\n                        selectedUserId: null,\r\n                       \r\n                    });\r\n            }\r\n        ).catch((error) => {\r\n            this.setState({\r\n                errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\r\n            })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    downloadReport = () => {\r\n        let newSearch = this.getSearchAll();\r\n        UserProfileDataService.retrieveAll(newSearch)\r\n            .then(response => {\r\n                let data = response.data.items ;\r\n                data = data.map(row => ({\r\n                    ...row, givenAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                        month: \"numeric\",\r\n                        day: \"2-digit\",\r\n                        year: \"numeric\",\r\n                    }).format(new Date(row.givenAt))\r\n                    , returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                        month: \"numeric\",\r\n                        day: \"2-digit\",\r\n                        year: \"numeric\",\r\n                    }).format(new Date(row.returnedAt))\r\n                }));\r\n                this.setState({ alldata:data });\r\n                this.csvLink.current.link.click()\r\n            })\r\n    }\r\n\r\n    getSearchAll = () => {\r\n        let search = this.state.search;\r\n        search.replace(/\\s+/g, '');\r\n        let newSearch = '';\r\n        let searchItems = search.split('&');\r\n        for (let i = 0; i < searchItems.length; i++) {\r\n            if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage'))\r\n                continue\r\n            else\r\n                newSearch += searchItems[i] + '&'\r\n        }\r\n        newSearch = '?' + newSearch;\r\n        if (newSearch.length > 1) newSearch += '&'\r\n        newSearch += 'Pager.itemsPerPage=2147483647';\r\n        return newSearch;\r\n    }\r\n\r\n    deleteClicked(id) {\r\n        UserProfileDataService.delete(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n        ).catch(error => {\r\n            let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n            this.setState({\r\n                errormsg: msg\r\n            })\r\n        })\r\n    }\r\n\r\n   /* updateClicked(id) {\r\n        this.props.history.push(`/userprofiles/${id}`)\r\n    }*/\r\n    updateTimeline(value) {\r\n        if (this.state.timeline.show == value) return;\r\n       /* if (value == true && this.state.filter&&(!this.state.filter.productDetailId || !this.state.filter.givenAfter) ) {\r\n            //let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n            this.setState({\r\n                errormsg: `to update time line search for inventory first (by selecting inventory number from above search) ,\r\n                                and at least limit the timeline given after, thank you!!!`\r\n            })\r\n            return;\r\n        }*/       \r\n        let timeline = this.state.timeline;\r\n        timeline.show = value;\r\n        this.setState({\r\n            timeline: timeline,\r\n            message: null,\r\n        });\r\n\r\n        /*let filter = this.state.filter;\r\n        if (filter.userId != null || filter.myProfile != null) {\r\n\r\n            let search = `userprofiles?timelineView=true&Filter.productDetailId=` + filter.productDetailId;\r\n            search += filter.givenAfter != null ? `&Filter.givenAfter=` + filter.givenAfter : ``;\r\n            search += filter.returnedBefore != null ? `&Filter.returnedBefore=` + filter.returnedBefore:``;\r\n            window.location.href = search;\r\n        }*/\r\n    }\r\n    updateClicked(item, x) {\r\n\r\n        let show = this.state.profileShow;\r\n        show.show = !show.show;\r\n        if (show.show == true) {\r\n            show.profile = JSON.parse(JSON.stringify(item))\r\n            show.x = x;\r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            profileShow: show,\r\n            message: null,           \r\n        });\r\n\r\n    }\r\n\r\n    /*addforUserClicked = () => {\r\n        let item = {\r\n\r\n        }\r\n    }*/\r\n\r\n    addClicked (name) {\r\n        //this.props.history.push(`/userprofiles/-1`)\r\n        console.log(\"in add clicked\");\r\n        console.log(\"name = \"+name);\r\n        let item = {\r\n            userId: this.state.filter.userId || null,\r\n            userName: name\r\n        }\r\n        this.updateClicked(item,null)\r\n    }\r\n\r\n    cancelToGive = () => {\r\n        console.log(\"canceltogive\");\r\n        this.setState({\r\n            i: null,\r\n            selectedUserId: null\r\n        })\r\n    }\r\n\r\n    saveToGive = (item, giving) => {\r\n        console.log(\"save to give clicked\");\r\n\r\n        let g = new Date();       \r\n        g.setHours(g.getHours() - g.getTimezoneOffset() / 60);\r\n        console.log(\"g after turn = \" + g);\r\n\r\n        let itemToSend = {\r\n            previousId: item.id,\r\n            userId: this.state.selectedUserId || null,\r\n            productDetailId: item.productDetailId,\r\n            givenAt: g,\r\n           \r\n            /*new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date())*/\r\n           /* returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date())*/\r\n        }\r\n\r\n        console.log(\"itemto send = \" + JSON.stringify(itemToSend));\r\n\r\n        UserProfileDataService.save(itemToSend).then(\r\n            response => {\r\n                console.log(\"response = \" + response.data);\r\n                this.setState({ message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully '})\r\n               \r\n               this.refresh();\r\n            }).catch(error => {\r\n                console.log(\"error = \" + error);\r\n                console.log(\"error.response = \" + error.response)\r\n            })\r\n    }\r\n\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null })\r\n    }\r\n\r\n    onFilterSearchChange(search) {\r\n        this.setState({ search: search })\r\n        this.refresh()\r\n    }\r\n\r\n    render() {\r\n\r\n        const userRole = AuthenticationService.getLoggedUerRole();\r\n        const userName = AuthenticationService.getLoggedUerName();\r\n        //const data = this.state.items;\r\n        const data = this.state.items.map(row => ({\r\n            ...row, givenAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.givenAt))\r\n            , returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.returnedAt))\r\n        })); \r\n        const dataAll = '';\r\n\r\n        const filteredUserTitle = userRole == 'ROLE_Employee' || (this.state.filter != null && this.state.filter.myProfile != null) ? 'my profile'\r\n            : this.state.filter != null && this.state.filter.userId != null ?\r\n                this.state.filter.userNames.find(n => n.value == this.state.filter.userId).name\r\n                : null;\r\n        \r\n        console.log(\"filteredUserTitle = \" + filteredUserTitle);\r\n\r\n        return (\r\n            <div className=\"px-3\">\r\n                <div className={this.state.i != null ? \"overlay d-block\" : \"d-none\"}></div>\r\n                {\r\n                    this.state.profileShow.profile && this.state.profileShow.show == true &&\r\n                    <UserProfileInnerComponent\r\n                        profileShow={this.state.profileShow}\r\n                    items={this.state.items}\r\n                    filter={this.state.filter}\r\n                        message={this.state.message}\r\n                        // suppliers={this.state.filter.suppliers}\r\n                        updateClicked={() => this.updateClicked(null)}\r\n                        refresh={() => this.refresh()}\r\n                        setMessage={(value) => this.setState({ message: `update successful` })}\r\n                    //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \r\n                    />}\r\n\r\n\r\n                {this.state.filter && <UserProfileFilter {...this.state.filter}\r\n                    userRole={userRole}\r\n                    timeline={this.state.timeline}\r\n                    onSearch={(search) => { this.onFilterSearchChange(search) }} />}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                        <h5 className=\"panel-title p-2 d-inline-flex\">\r\n                            <strong> User Profiles</strong>\r\n                            {filteredUserTitle != null && <span> &emsp;(&nbsp;{filteredUserTitle}&nbsp;)</span>}\r\n                            \r\n                        </h5>\r\n\r\n                        {userRole == 'ROLE_Mol' &&\r\n                           \r\n                            <div className=\" pull-right mr-5\" style={{ position: \"relative\" }}>\r\n                            \r\n                                <input className=\"mx-1 m-2 mt-3\" type=\"radio\" \r\n                                    checked={this.state.timeline.show == false}\r\n                                    onClick={() => this.state.timeline.show? this.updateTimeline(false) : {}}\r\n                                />Profiles View\r\n                       \r\n                           \r\n                                \r\n                                    <input id=\"btnTimeLine\" className=\"mx-1 m-2 mt-3 ml-5\" type=\"radio\"\r\n                                        checked={this.state.timeline.show == true}\r\n                                disabled={''/*!this.state.filter || (this.state.filter &&\r\n                                    !(this.state.filter.productDetailId != null && this.state.filter.givenAfter != null))*/}\r\n                               \r\n\r\n                                        onClick={\r\n                                            () => !this.state.timeline.show ? this.updateTimeline(true) : {}} />Update Timeline\r\n                   \r\n                       \r\n                                <p className=\"timelinenote \" style={{ fontSize: \"65%\" }}> select inventory and timeline to activate this button </p>\r\n                            </div>\r\n                           \r\n                        }\r\n                       \r\n                    </div>\r\n                    <div className=\"p-1\">\r\n                        {!this.state.timeline.show &&\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap \">\r\n                            \r\n                                <><div >\r\n                                {userRole == 'ROLE_Mol' && //this.state.filter && this.state.filter.userId &&\r\n                                    <button className=\"btn btn-mybtn px-5  \" onClick={() => {\r\n                                        //if (filteredUserTitle == null) this.updateClicked(null, 100)\r\n                                        this.addClicked(filteredUserTitle)\r\n                                    }\r\n                                    }>Add New</button>}\r\n                                <CSVLink\r\n                                    className=\"btn btn-mybtn px-3 ml-2\"\r\n                                    data={data} headers={headers} filename={\"user-profiles-page.csv\"}\r\n                                    asyncOnClick={true}\r\n                                    onClick={() => {\r\n                                        console.log(\"You click the link\");\r\n                                    }}\r\n                                >\r\n                                    Download this page\r\n                                </CSVLink>\r\n                                <button className=\"btn btn-mybtn px-3 ml-2\" onClick={this.downloadReport}>Download All</button>\r\n                                <CSVLink\r\n                                    data={this.state.alldata}\r\n                                    filename={\"user-profiles-all.csv\"}\r\n                                    className=\"hidden\"\r\n                                    headers={headers}\r\n                                    ref={this.csvLink}\r\n                                    target=\"_blank\"\r\n                                />\r\n                            </div>\r\n                                {this.state.pager && <PaginationComponent {...this.state.pager} />}</> </div>\r\n                        }\r\n\r\n                        {userRole == 'ROLE_Mol' && this.state.timeline.show &&\r\n                            <TimelineInnerComponent\r\n                            filter={this.state.filter}\r\n                            items={JSON.parse(JSON.stringify(this.state.items))}\r\n                            updateTimeline={(value) => this.updateTimeline(value)}\r\n                            setMessage={(msg) => { console.log(\"msg = \"+msg);this.setState({ message: msg }) }}\r\n                            refresh={() => { this.updateTimeline(false); this.refresh() }}\r\n\r\n                    />}\r\n                        {!this.state.timeline.show &&\r\n                            <>\r\n                            {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                            {this.state.message && <div className=\"alert alert-success d-flex\">{this.state.message}\r\n                                <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={this.togglemsgbox}></i></div>}\r\n                            <table className=\"table border-bottom my-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {userRole == 'ROLE_Mol' && <th>user</th>}\r\n                                        <th>product</th>\r\n                                        <th>inventory number</th>\r\n                                        <th>given at</th>\r\n                                        <th>returned at</th>\r\n                                        {/*userRole == 'ROLE_Mol' && this.state.filter && this.state.filter.myProfile &&\r\n                                        <th className=\"with-btn\"> give to </th>*/}\r\n                                        <th>Update &emsp;&nbsp; Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.items.map(\r\n                                            (item, i) =>\r\n                                                <tr key={item.id} >\r\n                                                    {userRole == 'ROLE_Mol' && <td className={this.state.i == i ? \"above-row border-r\" : \"\"}>{item.userName}</td>}\r\n                                                    <td className={this.state.i == i ? \"above-row \" : \"\"}>{item.productName}</td>\r\n                                                    <td className={this.state.i == i ? \"above-row\" : \"\"}>{item.inventoryNumber}</td>\r\n                                                    <td className={this.state.i == i ? \"above-row\" : \"\"}>{new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                        month: \"long\",\r\n                                                        day: \"2-digit\",\r\n                                                        year: \"numeric\",\r\n                                                    }).format(new Date(item.givenAt))}</td>\r\n                                                    <td className=\r\n                                                        {userRole == 'ROLE_Mol' && item.returnedAt == null ?\r\n                                                            this.state.i == i ? \"above-row border-l with-btn\" : \"with-btn\" : \"\"}>{/*\r\n                                                    this.state.filter && this.state.filter.userId && item.returnedAt == null*/}\r\n\r\n                                                        {item.returnedAt != null\r\n                                                            ?\r\n                                                            new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                month: \"long\",\r\n                                                                day: \"2-digit\",\r\n                                                                year: \"numeric\",\r\n                                                            }).format(new Date(item.returnedAt))\r\n                                                            :\r\n                                                            userRole == 'ROLE_Mol' && userName != item.userName\r\n                                                                ?\r\n                                                                <button className=\"btn btn-mybtn f-r\"\r\n                                                                    onClick={() => this.saveToGive(item, false)}>return</button>\r\n                                                                :\r\n                                                                (this.state.i == null || this.state.i != i) && item.returnedAt == null\r\n                                                                    ? <button className=\"btn btn-mybtn f-r\"\r\n                                                                        onClick={() => { console.log(\"give to clicked\"); this.setState({ i: i }) }}>give to</button>\r\n                                                                    : this.state.i == i\r\n                                                                        ?\r\n                                                                        <>\r\n                                                                            <div className=\r\n                                                                                {\"inline d-flex above-label \"\r\n                                                        /*this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"*/}>\r\n                                                                                <label>select&nbsp;user&nbsp;</label>\r\n                                                                                <CustomSelect\r\n                                                                                    defaultMenuIsOpen={true}\r\n                                                                                    className={\"inline inline-3 above-select\"}\r\n                                                                                    items={this.state.filter.userNames}\r\n                                                                                    value={''}\r\n                                                                                    onChange={(selected) => { this.setState({ selectedUserId: selected.value }) }}\r\n                                                                                />\r\n\r\n                                                                            </div>\r\n                                                                            <button className=\"btn btn-mybtn mr-1 above-btn\" onClick={() => this.saveToGive(item, true)}>\r\n                                                                                <i className=\"fa fa-save\"></i></button>\r\n                                                                            <button className=\"btn btn-mybtn btn-delete above-btn\" onClick={() => this.cancelToGive()}>\r\n                                                                                <i className=\"fa fa-close\"></i></button>\r\n\r\n                                                                        </>\r\n                                                                        : '-'}</td>\r\n                                                    {/*userRole == 'ROLE_Mol' && this.state.filter && this.state.filter.myProfile &&\r\n                                                    <td className={this.state.i == i ? \"above-row with-btn border-l\" : \"with-btn\"}>\r\n                                                        {(this.state.i == null || this.state.i != i) && item.returnedAt == null && <button className=\"btn btn-mybtn\"\r\n                                                        onClick={() => { console.log(\"give to clicked\");this.setState({ i: i }) }}>give to</button>}\r\n                                                    {this.state.i == i &&\r\n                                                        <>\r\n                                                        \r\n                                                        <div className=\r\n                                                            {\"inline d-flex above-label \"\r\n                                                        //this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"\r\n                                                        }>\r\n                                                            <label>select&nbsp;user&nbsp;</label>                                                           \r\n                                                                <CustomSelect\r\n                                                                    defaultMenuIsOpen={true} \r\n                                                                className={\"inline inline-3 above-select\"}\r\n                                                            items={this.state.filter.userNames}\r\n                                                                value={''}\r\n                                                                onChange={(selected) => { this.setState({ selectedUserId: selected.value }) }}\r\n                                                            />\r\n                                                           \r\n                                                            </div>\r\n                                                            <button className=\"btn btn-mybtn mr-1 above-btn\" onClick={()=>this.saveToGive(item ,true)}>\r\n                                                                <i className=\"fa fa-save\"></i></button>\r\n                                                            <button className=\"btn btn-mybtn btn-delete above-btn\" onClick={()=>this.cancelToGive()}>\r\n                                                                <i className=\"fa fa-close\"></i></button>\r\n                                                        \r\n                                                       \r\n                                                        </>\r\n                                                    }</td>*/}\r\n                                                    <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item, i)}>Update</button>\r\n                                                        <button className=\"btn btn-mybtn btn-delete\"\r\n                                                            disabled={item.userName == userName} onClick={() => this.deleteClicked(item.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                                \r\n                            </table></>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListUserProfilesComponent"]},"metadata":{},"sourceType":"module"}