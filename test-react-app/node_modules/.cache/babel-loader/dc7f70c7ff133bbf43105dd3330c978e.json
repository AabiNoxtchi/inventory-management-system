{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\DeliveryFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass DeliveryFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      number: props.number,\n      numbers: props.numbers,\n      supplierId: props.supplierId,\n      suppliers: props.suppliers,\n      productId: props.productId,\n      products: props.products,\n      dateCreatedBefore: props.dateCreatedBefore,\n      dateCreatedAfter: props.dateCreatedAfter,\n      totalBillMoreThan: props.totalBillMoreThan,\n      totalBillLessThan: props.totalBillLessThan,\n      prefix: props.prefix,\n      maxmore: 100,\n      minless: 0,\n      mintotal: 0\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search; //this.props.search || window.location.search;\n\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';else if (searchItems[i].startsWith('deliveryView')) newPath += searchItems[i] + '&';\n      }\n    }\n    /* if (this.props.search == null) newPath += 'deliveryView=DeliveryDetailView&';*/\n    // console.log(\"this.props.search = \" + this.props.search);\n    // console.log(\"this.props.search == null = \" + (this.props.search == null));\n\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      // console.log('field key =' + key);\n      // console.log('field value =' + value);\n      if (!key.endsWith(\"s\") && value && value != 'undefined') {\n        if (key === 'maxmore' || key === 'minless' || key === 'maxtotal' || key === 'mintotal') {} else if (key.startsWith('date')) {\n          value = new Date(value).toISOString();\n          value = value.substring(0, value.indexOf('T'));\n          /* new Intl.DateTimeFormat(\"en-GB\", {\r\n              month: \"numeric\",\r\n              day: \"2-digit\",\r\n              year: \"numeric\",                          \r\n           }).format(new Date(value));*/\n          // console.log('value = '+value)\n\n          newPath += prefix + '.' + key + '=' + value + '&';\n        } else {\n          newPath += prefix + '.' + key + '=' + value + '&';\n        }\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = '?' + newPath;\n    newPath = this.props.onNewSearch ? newPath : path + newPath;\n    console.log('newPath =' + newPath);\n    this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath; // window.location.href = newPath;\n  }\n\n  resetForm() {\n    // console.log(\"this.props.search = \" + this.props.search);\n    //window.location.href = window.location.pathname; \n    let index = window.location.search.indexOf(\"DeliveryDetailView\");\n    if (index < 0) this.props.onNewSearch('');else this.props.onNewSearch('?deliveryView=DeliveryDetailView'); // window.location.href = index < 0 ? window.location.pathname : window.location.pathname + '?deliveryView=DeliveryDetailView';\n    // values.name = null;\n    // this.props.history.push('/products');\n\n    /* this.setState({\r\n         all: '',\r\n         name: '',\r\n         productType: '',\r\n         amortizationPercentMoreThan: '',\r\n         amortizationPercentLessThan: '',\r\n         totalCountMoreThan: '',\r\n         totalCountLessThan:''\r\n     });\r\n     console.log('in reset form ');*/\n  }\n\n  render() {\n    let {\n      all,\n      number,\n      numbers,\n      supplierId,\n      suppliers,\n      productId,\n      products,\n      dateCreatedBefore,\n      dateCreatedAfter,\n      totalBillMoreThan,\n      totalBillLessThan,\n      maxmore,\n      minless,\n      mintotal\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        number,\n        numbers,\n        supplierId,\n        suppliers,\n        productId,\n        products,\n        dateCreatedBefore,\n        dateCreatedAfter,\n        totalBillMoreThan,\n        totalBillLessThan,\n        maxmore,\n        minless,\n        mintotal\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-1-5\",\n              items: numbers,\n              value: values.number,\n              onChange: selected => setFieldValue(\"number\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"supplier\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2-5\",\n              items: suppliers,\n              value: values.supplierId,\n              onChange: selected => setFieldValue(\"supplierId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"date\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"after\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline \",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control in-inline inline-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: values.dateCreatedBefore || new Date(),\n                  selected: values.dateCreatedAfter && new Date(values.dateCreatedAfter),\n                  onChange: date => setFieldValue(\"dateCreatedAfter\", date),\n                  shouldCloseOnSelect: true,\n                  showYearDropdown: true,\n                  dropdownMode: \"select\",\n                  isClearable: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"before\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2\",\n                dateFormat: \"MMMM dd yyyy\",\n                locale: \"en-GB\",\n                minDate: values.dateCreatedAfter,\n                maxDate: values.dateCreatedBefore || new Date(),\n                selected: values.dateCreatedBefore && new Date(values.dateCreatedBefore),\n                onChange: date => setFieldValue(\"dateCreatedBefore\", date),\n                shouldCloseOnSelect: true,\n                showYearDropdown: true,\n                dropdownMode: \"select\",\n                isClearable: true,\n                highlightDates: new Date()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2-5\",\n              items: products,\n              value: values.productId,\n              onChange: selected => setFieldValue(\"productId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"total bill\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"more than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                max: values.totalBillLessThan || \"\",\n                name: \"totalBillMoreThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"less than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: values.totalBillMoreThan || 0,\n                name: \"totalBillLessThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"reset\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 29\n          }, this), this.props.ids && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-3 px-3\",\n              children: window.location.search.indexOf(\"Filter.empty=true\") > -1 ? \"empty Deliveries\" : window.location.search.indexOf(\"Filter.discarded=true\") > -1 ? \"Deliveries with all discared inventories\" : \"\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/DeliveryFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","DatePicker","DeliveryFilter","constructor","props","state","all","number","numbers","supplierId","suppliers","productId","products","dateCreatedBefore","dateCreatedAfter","totalBillMoreThan","totalBillLessThan","prefix","maxmore","minless","mintotal","onSubmit","bind","resetForm","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","Date","toISOString","indexOf","onNewSearch","console","log","history","push","href","index","render","setFieldValue","selected","borderRadius","date","ids"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css'\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass DeliveryFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            number: props.number,\r\n            numbers: props.numbers,\r\n            supplierId: props.supplierId,\r\n            suppliers: props.suppliers,\r\n            productId: props.productId,\r\n            products: props.products,\r\n            dateCreatedBefore: props.dateCreatedBefore,\r\n            dateCreatedAfter: props.dateCreatedAfter,\r\n            totalBillMoreThan: props.totalBillMoreThan,\r\n            totalBillLessThan: props.totalBillLessThan,\r\n            prefix: props.prefix,\r\n            maxmore: 100,\r\n            minless: 0,\r\n            mintotal: 0,\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search; //this.props.search || window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n                else if (searchItems[i].startsWith('deliveryView'))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n       /* if (this.props.search == null) newPath += 'deliveryView=DeliveryDetailView&';*/\r\n       // console.log(\"this.props.search = \" + this.props.search);\r\n       // console.log(\"this.props.search == null = \" + (this.props.search == null));\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n           // console.log('field key =' + key);\r\n           // console.log('field value =' + value);\r\n            if (!key.endsWith(\"s\") && value && value != 'undefined') {\r\n                if ((key === 'maxmore') ||\r\n                    (key === 'minless') ||\r\n                    (key === 'maxtotal') ||\r\n                    (key === 'mintotal')) { }\r\n                else if (key.startsWith('date')) {\r\n                    value = (new Date(value)).toISOString();\r\n                    value = value.substring(0, value.indexOf('T'))\r\n                       /* new Intl.DateTimeFormat(\"en-GB\", {\r\n                           month: \"numeric\",\r\n                           day: \"2-digit\",\r\n                           year: \"numeric\",                          \r\n                        }).format(new Date(value));*/\r\n                   // console.log('value = '+value)\r\n                    newPath += prefix + '.' + key + '=' + value + '&'\r\n                }\r\n                else { newPath += prefix + '.' + key + '=' + value + '&' }\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        newPath = '?' + newPath;\r\n        newPath = this.props.onNewSearch ? newPath : path + newPath;\r\n        console.log('newPath =' + newPath);\r\n        this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath;\r\n       // window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n       // console.log(\"this.props.search = \" + this.props.search);\r\n\r\n        //window.location.href = window.location.pathname; \r\n        let index = window.location.search.indexOf(\"DeliveryDetailView\");\r\n        if (index < 0)\r\n            this.props.onNewSearch('');\r\n        else\r\n            this.props.onNewSearch('?deliveryView=DeliveryDetailView');\r\n\r\n       // window.location.href = index < 0 ? window.location.pathname : window.location.pathname + '?deliveryView=DeliveryDetailView';\r\n        // values.name = null;\r\n\r\n        // this.props.history.push('/products');\r\n        /* this.setState({\r\n             all: '',\r\n             name: '',\r\n             productType: '',\r\n             amortizationPercentMoreThan: '',\r\n             amortizationPercentLessThan: '',\r\n             totalCountMoreThan: '',\r\n             totalCountLessThan:''\r\n         });\r\n         console.log('in reset form ');*/\r\n    }\r\n\r\n    render() {\r\n\r\n        let { all, number, numbers, supplierId, suppliers,productId, products, dateCreatedBefore, dateCreatedAfter,\r\n            totalBillMoreThan, totalBillLessThan, maxmore, minless, mintotal } = this.state\r\n\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    all, number, numbers, supplierId, suppliers, productId, products, dateCreatedBefore, dateCreatedAfter,\r\n                    totalBillMoreThan, totalBillLessThan, maxmore, minless, mintotal\r\n                }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                           \r\n                            <div className=\"inline\">\r\n                                <label>number&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-1-5\"}\r\n                                    items={numbers}\r\n                                    value={values.number}\r\n                                    onChange={(selected) => setFieldValue(\"number\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label>supplier&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2-5\"}\r\n                                    items={suppliers}\r\n                                    value={values.supplierId}\r\n                                    onChange={(selected) => setFieldValue(\"supplierId\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label className=\"mb-1\">date&nbsp;</label>\r\n                                <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                <label className=\"mb-1 fw-s\">after&nbsp;</label>\r\n                                <div className=\"inline \">\r\n                                <DatePicker className=\"form-control in-inline inline-2\"\r\n                                    dateFormat=\"dd MMMM yyyy\"\r\n                                    locale=\"en-GB\"\r\n                                    maxDate={values.dateCreatedBefore || new Date()}\r\n                                            selected={values.dateCreatedAfter && new Date(values.dateCreatedAfter)}\r\n                                            onChange={date => setFieldValue(\"dateCreatedAfter\", date)}\r\n                                            shouldCloseOnSelect={true}\r\n                                            showYearDropdown\r\n                                            dropdownMode=\"select\"\r\n                                            isClearable/>\r\n                                    </div>\r\n\r\n                                <label className=\"pl-1 mb-1 fw-s\">before&nbsp;</label>\r\n                                <DatePicker className=\"form-control in-inline inline-2\"\r\n                                    dateFormat=\"MMMM dd yyyy\"\r\n                                    locale=\"en-GB\"\r\n                                        minDate={values.dateCreatedAfter}\r\n                                        maxDate={values.dateCreatedBefore||new Date()}\r\n                                    selected={values.dateCreatedBefore && new Date(values.dateCreatedBefore)}\r\n                                        onChange={date => setFieldValue(\"dateCreatedBefore\", date)}\r\n                                        shouldCloseOnSelect={true}\r\n                                        showYearDropdown\r\n                                        dropdownMode=\"select\"\r\n                                        isClearable\r\n                                        highlightDates={new Date()} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label>product&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2-5\"}\r\n                                    items={products}\r\n                                    value={values.productId}\r\n                                    onChange={(selected) => setFieldValue(\"productId\", selected.value)}\r\n                                />\r\n                            </div>\r\n                                <div className=\"inline\">\r\n                                <label className=\"mb-1\">total bill&nbsp;</label>\r\n                                <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                    <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-100px\" type=\"number\" min=\"0\" max={values.totalBillLessThan || \"\"}\r\n                                        name=\"totalBillMoreThan\" />\r\n                                    <label className=\"pl-1 mb-1 fw-s\">less than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-100px\" type=\"number\" min={values.totalBillMoreThan || 0}\r\n                                        name=\"totalBillLessThan\" />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"reset\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n\r\n                            {this.props.ids && <div className=\"\">\r\n                                <h5 className=\"mt-3 px-3\">{window.location.search.indexOf(\"Filter.empty=true\") > -1 ? \"empty Deliveries\"\r\n                                    : window.location.search.indexOf(\"Filter.discarded=true\") > -1 ? \"Deliveries with all discared inventories\" : \"\" }</h5>\r\n                            </div>}\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryFilter"]},"metadata":{},"sourceType":"module"}