{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date || new Date(),\n        suppliers: response.data.suppliers,\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values) {\n    //console.log(\"in submit delivery\");\n    //console.log(\"in submit delivery values.date = \" + values.date);//JSON.stringify(values));\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      //.toISOString(),\n      number: values.number,\n      supplierId: values.supplierId,\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    console.log(\"in submit delivery item = \" + JSON.stringify(item));\n    DeliveryDataService.save(item).then(response => {\n      console.log(\"delivery submit response = \" + response.data);\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      // preventDefault();\n      console.log(\"delivery submit error= \" + error.data);\n      /*this.setState({\r\n          numErrors: error.response.data //arr\r\n      });*/\n\n      values.numErrors = error.response.data; //console.log(\"after error submit delivery values.supllier.id = \" + values.supplierId);//JSON.stringify(values));\n    }); //console.log(\"after submit delivery values.supllier.id = \" + values.supplierId);//JSON.stringify(values));\n  }\n\n  validate(values) {\n    console.log(\"validating : values.supplierId = \" + values.supplierId);\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    }\n\n    console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    console.log(\"in on count change \");\n    const productNums = [...values.ddEditVM.productNums];\n    const quantity = e.target.value || 0;\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          value: '',\n          name: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          if (num[0].value !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].value);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n          } else {\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.value == '-' + i);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        }\n      }\n    }\n\n    setFieldValue(\"ddEditVM.productNums\", productNums);\n    setFieldValue(\"ddEditVM.quantity\", e.target.value);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.value == id);\n    if (index < 0) updatedProductNums.push({\n      value: id,\n      name: e.target.value\n    });else updatedProductNums[index].name = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = [];\n    let productNumErrors = []; // client side validation\n\n    let numErrors = null; // from server\n\n    console.log(\"rendering\");\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors,\n          numErrors\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  onChange: date => {\n                    // console.log(\"items.x.date = \" + values.date);\n                    //console.log(\"date changed = \" + date);\n                    setFieldValue(\"date\", date); //console.log(\"values.date = \"+values.date);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"add/update products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-flex align-items-top  mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"product :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    className: \"d-inline-block inline-2-5\",\n                    items: products,\n                    value: values.ddEditVM.productId,\n                    onChange: selected => {\n                      console.log(\"selected product id = \" + selected.value);\n                      setFieldValue(\"ddEditVM.productName\", selected.label);\n                      setFieldValue(\"ddEditVM.productId\", selected.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 234,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"quantity :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 239,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.quantity\",\n                    onChange: e => {\n                      this.onChangeQuantity(e, values, setFieldValue);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 240,\n                    columnNumber: 45\n                  }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 247,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 246,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"unit price :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 252,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.pricePerOne\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 253,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn mr-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let iserror = false;\n\n                    if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                      setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                      iserror = true;\n                    } else {\n                      values.deliveryDetailEditVMs.map((x, y) => {\n                        if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                          iserror = true;\n                          let ddErrorName = values.ddEditVMerror.name;\n                          ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                          setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                        }\n                      });\n                    }\n\n                    if (values.ddEditVM.pricePerOne == '') {\n                      setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity == '') {\n                      setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity > 0) {\n                      let ddErrorNums = values.productNumErrors;\n\n                      for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                        if (values.ddEditVM.productNums[i].name.length < 1) {\n                          ddErrorNums[i] = 'required field !!!';\n                          iserror = true;\n                        } else if (values.ddEditVM.productNums[i].name.length < 4) {\n                          ddErrorNums[i] = 'too short !!!';\n                          iserror = true;\n                        } else {\n                          let isSame = false;\n\n                          for (let j = 0; j < i; j++) {\n                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\n                              isSame = true;\n                              iserror = true;\n                            }\n                          }\n\n                          ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                        }\n                      }\n\n                      setFieldValue(\"productNumErrors\", ddErrorNums);\n                    }\n\n                    if (!iserror) {\n                      if (values.index === '') {\n                        let list = values.deliveryDetailEditVMs;\n                        list.push(values.ddEditVM);\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      } else {\n                        let list = values.deliveryDetailEditVMs;\n                        list[values.index] = values.ddEditVM; // edited;\n\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      }\n\n                      this.resetddEditVMForm(values, setFieldValue);\n                    }\n                  },\n                  children: values.index !== '' ? \"Update\" : \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete\",\n                  type: \"button\",\n                  onClick: () => {\n                    this.resetddEditVMForm(values, setFieldValue);\n                  },\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 327,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"mb-1\",\n              children: values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: [\"inventory number \", i + 1, \" :\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `ddEditVM.productNums.${i}.name`,\n                  type: \"text\",\n                  className: 'form-control d-inline-block inline-4',\n                  onChange: e => {\n                    if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-' + i, values, setFieldValue);\n                    setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 338,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let list = values.ddEditVM.productNums;\n                    list.splice(i, 1);\n                    setFieldValue(\"ddEditVM.productNums\", list); // if (num.value !== '') {\n\n                    if (values.ddEditVM.id !== '') {\n                      let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                      let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\n\n                      if (index > -1) {\n                        console.log(\"index = \" + index);\n                        updatedProductNums.splice(index, 1);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n                      /* else {\r\n                         index = updatedProductNums.findIndex(x => x.value === `-${i}`)\r\n                         console.log(\"index = \" + index);\r\n                         updatedProductNums.splice(index, 1)\r\n                         setFieldValue(\"ddEditVM.updatedProductNums\", list)\r\n                      }  */\n\n\n                      let deleted = values.ddEditVM.deletedNums || [];\n                      deleted.push(num.value);\n                      setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                    }\n\n                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 347,\n                  columnNumber: 53\n                }, this), this.values.numErrors && this.values.numErrors instanceof Array && values.index !== '' && this.values.numErrors[values.index] && this.values.numErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: this.values.numErrors[values.index][i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 53\n                }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-3 pt-1\",\n                    onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 388,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 384,\n                  columnNumber: 53\n                }, this)]\n              }, num.value || i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 399,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 33\n          }, this), this.state.numErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 404,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 406,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table x-Table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 410,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 411,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 412,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '173px',\n                      padding: '.35rem .5rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 413,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 45\n                }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: values.index === index ? \"table-active\" : \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 419,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 420,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Intl.NumberFormat(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"BGN\",\n                        maximumFractionDigits: 2\n                      }).format(dd.pricePerOne)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 421,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '173px',\n                        padding: '.35rem .5rem'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn mr-1\",\n                        type: \"button\",\n                        onClick: () => {\n                          console.log(\"index = \" + index);\n                          setFieldValue(\"index\", index);\n                          setFieldValue(\"ddEditVM\", dd);\n                        },\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 427,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn btn-delete\",\n                        type: \"button\",\n                        onClick: () => {\n                          let list = values.deliveryDetailEditVMs;\n                          list.splice(index, 1);\n                          setFieldValue(\"deliveryDetailEditVMs\", list);\n\n                          if (dd.id > 0) {\n                            let deleted = values.deleteddds;\n                            deleted.push(dd.id);\n                            setFieldValue(\"deleteddds\", deleted);\n                          }\n\n                          if (values.index == index) {\n                            this.resetddEditVMForm(values, setFieldValue);\n                          }\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 432,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 426,\n                      columnNumber: 57\n                    }, this), this.state.numErrors && this.state.numErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 451,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 450,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 449,\n                      columnNumber: 61\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 418,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 408,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 407,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-5 ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5\",\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 463,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-3\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 462,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","state","id","match","params","deliveryView","number","date","supplierId","suppliers","deliveryDetailEditVMs","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","Date","values","item","deletedDetailsIds","deleteddds","targetDate","console","log","JSON","stringify","save","path","length","history","push","catch","error","numErrors","errors","window","back","onChangeQuantity","e","setFieldValue","productNums","ddEditVM","quantity","target","value","previousQuantity","parseInt","i","name","num","splice","undefined","deletedNums","updatedNums","updatedProductNums","findIndex","x","onUpdateProductNums","resetddEditVMForm","VM","productId","productName","pricePerOne","render","productNumErrors","selected","label","iserror","map","y","ddErrorName","ddErrorNums","isSame","j","list","deleted","Array","width","padding","dd","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n            suppliers: [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},           \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                 this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date || new Date(),\r\n                    suppliers: response.data.suppliers,  \r\n                    deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []                    \r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        //console.log(\"in submit delivery\");\r\n        //console.log(\"in submit delivery values.date = \" + values.date);//JSON.stringify(values));\r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,//.toISOString(),\r\n            number: values.number,\r\n            supplierId: values.supplierId,\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        };\r\n        console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n                console.log(\"delivery submit response = \" + response.data);\r\n               let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n               this.props.history.push(path)\r\n            }).catch((error) => {\r\n               // preventDefault();\r\n                console.log(\"delivery submit error= \" + error.data);\r\n                /*this.setState({\r\n                    numErrors: error.response.data //arr\r\n                });*/\r\n                values.numErrors = error.response.data;\r\n                //console.log(\"after error submit delivery values.supllier.id = \" + values.supplierId);//JSON.stringify(values));\r\n            })\r\n        //console.log(\"after submit delivery values.supllier.id = \" + values.supplierId);//JSON.stringify(values));\r\n    }\r\n\r\n    validate(values) {\r\n        console.log(\"validating : values.supplierId = \" + values.supplierId);\r\n        let errors = {}  \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        console.log(\"in on count change \");\r\n        const productNums = [...values.ddEditVM.productNums];\r\n        const quantity = e.target.value || 0;\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n     if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ value: '', name: '' });\r\n        }\r\n     } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n            let num = productNums.splice(i, 1);\r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               if ( num[0].value !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].value);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);                   \r\n                } else {\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.value == '-' + i);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n        }}\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];        \r\n        let index = updatedProductNums.findIndex(x => x.value == id);\r\n         if (index < 0)\r\n            updatedProductNums.push({ value: id, name: e.target.value });\r\n        else\r\n            updatedProductNums[index].name = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];    \r\n        let productNumErrors = []; // client side validation\r\n        let numErrors = null;// from server\r\n\r\n        console.log(\"rendering\");\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds\r\n                        , productNumErrors, numErrors\r\n                    }}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label>date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                            className=\"form-control inline-2-5\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            selected={(values.date && new Date(values.date))}\r\n                                            onChange={date => {\r\n                                               // console.log(\"items.x.date = \" + values.date);\r\n                                                //console.log(\"date changed = \" + date);\r\n                                                setFieldValue(\"date\", date);\r\n                                                //console.log(\"values.date = \"+values.date);\r\n                                            }} />                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                        <label>supplier</label>\r\n                                        <div>\r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}/>    \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                            {/* ********************************************************  */}\r\n\r\n                            <div className=\"mt-5\"><h6>add/update products</h6>\r\n                            <fieldset className=\"d-flex align-items-top  mb-3\">                               \r\n                                  <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label>product :&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {   \r\n                                                console.log(\"selected product id = \" + selected.value);\r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {                                                                                                 \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n                                                }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                  </div>                                   \r\n                                  <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {                                           \r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                               if (x.productName == values.ddEditVM.productName && (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].name.length < 1) {                                                        \r\n                                                         ddErrorNums[i] = 'required field !!!';                                                      \r\n                                                        iserror = true;                                                       \r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].name.length < 4) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                    }                                                 \r\n                                                }\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                  setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;                                              \r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }                                           \r\n                                           \r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)                                            \r\n                                        }}>reset</button>\r\n                                  </div>\r\n                                </fieldset>                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {\r\n                                        values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                            <div key={num.value || i} className=\"ml-3\">                                               \r\n                                                <label>inventory number {i + 1} :&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.name`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4'}\r\n                                                    onChange={e => {                                                      \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);                                                       \r\n                                                    }}/>  \r\n                                                {                                                   \r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.ddEditVM.productNums;                                                           \r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.productNums\", list)\r\n                                                           // if (num.value !== '') {\r\n                                                            if (values.ddEditVM.id !== '') {\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}` );\r\n                                                               \r\n                                                                if (index > -1) {\r\n                                                                    console.log(\"index = \" + index);\r\n                                                                    updatedProductNums.splice(index, 1)\r\n                                                                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n                                                                }/* else {\r\n                                                                    index = updatedProductNums.findIndex(x => x.value === `-${i}`)\r\n                                                                    console.log(\"index = \" + index);\r\n                                                                    updatedProductNums.splice(index, 1)\r\n                                                                    setFieldValue(\"ddEditVM.updatedProductNums\", list)\r\n                                                                }  */                                                        \r\n                                                                let deleted = values.ddEditVM.deletedNums || [];\r\n                                                                deleted.push(num.value)\r\n                                                                setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                                }\r\n                                                            setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                        }}>Delete</button>\r\n                                                }\r\n                                                {\r\n                                                    this.values.numErrors && this.values.numErrors instanceof Array\r\n                                                    && values.index !== '' && this.values.numErrors[values.index]\r\n                                                    && this.values.numErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                       \r\n                                                        {this.values.numErrors[values.index][i]}\r\n                                                    </div>\r\n                                                }\r\n                                                {\r\n                                                    values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                        \r\n                                                        {\r\n                                                            values.productNumErrors[i] \r\n                                                        }\r\n                                                        <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>                                                       \r\n                                                    </div>\r\n                                                }                                                  \r\n                                            </div>\r\n                                        )}\r\n                                </fieldset>\r\n                            </div>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>\r\n                                {\r\n                                    this.state.numErrors &&\r\n                                    <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                            }      \r\n                            <div className=\"mt-3\"><h6>products</h6>\r\n                                    <table className=\"table x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                            <td style={{ width: '173px' , padding: '.35rem .5rem' }}></td>\r\n                                             </tr>\r\n                                    {\r\n                                            deliveryDetailEditVMs.map((dd, index) =>\r\n                                                <>\r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                        <td style={{ width: '173px' , padding: '.35rem .5rem' }}>\r\n                                                            <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    console.log(\"index = \" + index);                                                  \r\n                                                        setFieldValue(\"index\", index);\r\n                                                        setFieldValue(\"ddEditVM\", dd)\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;                                                            \r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)                                                           \r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)                                                                \r\n                                                            }\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }                                                           \r\n                                                        }}>Delete</button>\r\n                                                        </td>\r\n                                                        {\r\n                                                            this.state.numErrors && this.state.numErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                            <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                <i class=\"fa fa-bomb \"\r\n                                                                    onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                </tr>\r\n                                                \r\n                                                    </>\r\n                                    )}\r\n                                        </tbody>\r\n                                    </table>                                                  \r\n                                <div className=\"mt-5 ml-3\">\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-3\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}