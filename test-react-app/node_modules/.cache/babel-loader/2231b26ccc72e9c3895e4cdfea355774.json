{"ast":null,"code":"class Function {\n  getErrorMsg(error) {\n    let msg = '' + error == 'Error: Request failed with status code 401' ? 'Error : Unauthorized, need to login again !!!' : error.response && error.response.data && typeof error.response.data == 'string' ? error.response.data : error.response && error.response.data && typeof error.response.data == 'object' ? error.response.data.errors ? error.response.data.errors[0].defaultMessage : error.response.data.message != null ? error.response.data.message : 'errors found !!!' : error + '';\n    if (typeof msg == 'string' && msg.startsWith('Failed to convert value')) msg = 'try again with correct values !!!';\n    msg = typeof msg == 'string' && msg.indexOf(\"ConstraintViolationException\") > -1 ? \"error !!!\" : msg;\n    msg = typeof msg == 'string' && msg.indexOf(\"Forbidden\") > -1 ? \"Error: Unauthorized !!!\" : msg;\n    return msg;\n  }\n\n  getDate() {\n    let date = new Date();\n    date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n    return date;\n  }\n\n  convertDate(date) {\n    // to string \n    if (date && date != 'undefined') {\n      // let date = \n      date = new Date(date);\n      date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n      date = date.toISOString();\n      date = date.substring(0, date.indexOf('T'));\n      return date;\n    } else return '';\n  }\n\n}\n\nexport default new Function();","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Shared/Function.js"],"names":["Function","getErrorMsg","error","msg","response","data","errors","defaultMessage","message","startsWith","indexOf","getDate","date","Date","setHours","getHours","getTimezoneOffset","convertDate","toISOString","substring"],"mappings":"AACA,MAAMA,QAAN,CAAe;AAGXC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAEf,QAAIC,GAAG,GAAG,KAAKD,KAAL,IAAc,4CAAd,GAA6D,+CAA7D,GACNA,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,IAAjC,IAAyC,OAAOH,KAAK,CAACE,QAAN,CAAeC,IAAtB,IAA8B,QAAvE,GACAH,KAAK,CAACE,QAAN,CAAeC,IADf,GACsBH,KAAK,CAACE,QAAN,IAAkBF,KAAK,CAACE,QAAN,CAAeC,IAAjC,IAAyC,OAAOH,KAAK,CAACE,QAAN,CAAeC,IAAtB,IAA8B,QAAvE,GAClBH,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,GACIJ,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,cADlC,GACmDL,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBG,OAApB,IAA+B,IAA/B,GAC3CN,KAAK,CAACE,QAAN,CAAeC,IAAf,CAAoBG,OADuB,GAE3C,kBAJU,GAIWN,KAAK,GAAG,EAN7C;AAQA,QAAI,OAAOC,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACM,UAAJ,CAAe,yBAAf,CAA9B,EACIN,GAAG,GAAG,mCAAN;AACJA,IAAAA,GAAG,GAAG,OAAOA,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACO,OAAJ,CAAY,8BAAZ,IAA8C,CAAC,CAAzE,GAA6E,WAA7E,GAA2FP,GAAjG;AACAA,IAAAA,GAAG,GAAG,OAAOA,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACO,OAAJ,CAAY,WAAZ,IAA2B,CAAC,CAAtD,GAA0D,yBAA1D,GAAsFP,GAA5F;AAEA,WAAOA,GAAP;AACH;;AAEDQ,EAAAA,OAAO,GAAG;AAEN,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACAD,IAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACA,WAAOJ,IAAP;AACH;;AAEDK,EAAAA,WAAW,CAACL,IAAD,EAAO;AAAE;AAChB,QAAIA,IAAI,IAAIA,IAAI,IAAI,WAApB,EAAiC;AAC7B;AACAA,MAAAA,IAAI,GAAI,IAAIC,IAAJ,CAASD,IAAT,CAAR;AACAA,MAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAJ,MAAAA,IAAI,GAAGA,IAAI,CAACM,WAAL,EAAP;AACAN,MAAAA,IAAI,GAAGA,IAAI,CAACO,SAAL,CAAe,CAAf,EAAkBP,IAAI,CAACF,OAAL,CAAa,GAAb,CAAlB,CAAP;AACA,aAAOE,IAAP;AACH,KAPD,MAOO,OAAO,EAAP;AACV;;AArCU;;AAyCf,eAAe,IAAIZ,QAAJ,EAAf","sourcesContent":["\r\nclass Function {\r\n\r\n\r\n    getErrorMsg(error) {\r\n\r\n        let msg = '' + error == 'Error: Request failed with status code 401' ? 'Error : Unauthorized, need to login again !!!' :\r\n            error.response && error.response.data && typeof error.response.data == 'string' ?\r\n            error.response.data : error.response && error.response.data && typeof error.response.data == 'object' ?\r\n                error.response.data.errors ?\r\n                    error.response.data.errors[0].defaultMessage : error.response.data.message != null ?\r\n                        error.response.data.message :\r\n                        'errors found !!!' : error + '';\r\n\r\n        if (typeof msg == 'string' && msg.startsWith('Failed to convert value'))\r\n            msg = 'try again with correct values !!!'\r\n        msg = typeof msg == 'string' && msg.indexOf(\"ConstraintViolationException\") > -1 ? \"error !!!\" : msg\r\n        msg = typeof msg == 'string' && msg.indexOf(\"Forbidden\") > -1 ? \"Error: Unauthorized !!!\" : msg\r\n\r\n        return msg;\r\n    }\r\n\r\n    getDate() { \r\n\r\n        let date = new Date();       \r\n        date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n        return date;\r\n    }\r\n\r\n    convertDate(date) { // to string \r\n        if (date && date != 'undefined') {\r\n            // let date = \r\n            date = (new Date(date));\r\n            date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n            return date;\r\n        } else return '';\r\n    }\r\n   \r\n}\r\n\r\nexport default new Function()"]},"metadata":{},"sourceType":"module"}