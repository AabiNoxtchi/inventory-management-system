{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserCategoryInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserCategoryDataService from '../service/UserCategoryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport Function from './Shared/Function';\n\nclass UserCategoryInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      let item = {\n        id: this.state.id,\n        categoryId: this.state.categoryId,\n        amortizationPercent: this.state.amortizationPercent\n      }; //this.state.categoryUpdateShow.category;\n\n      let productType = this.state.productType;\n      let original = this.state.categoryUpdateShow.category; // item.name = item.name ? item.name.trim() : item.name;\n\n      console.log(\"item to save = \" + JSON.stringify(item));\n\n      if (!item.categoryId || item.categoryId == \"undefined\" || productType === 'LTA' && (!item.amortizationPercent || item.amortizationPercent == \"undefined\")) {\n        let show = this.state.categoryUpdateShow;\n        show.error = \"All fields are required !!!\";\n        this.setState({\n          categoryUpdateShow: show\n        });\n      } else if (original.id && original.category.id == item.categoryId && original.amortizationPercent == item.amortizationPercent) {\n        let show = this.state.categoryUpdateShow;\n        show.error = \"item hasn't changed !!!\";\n        this.setState({\n          categoryUpdateShow: show\n        });\n      } else {\n        UserCategoryDataService.save(item).then(response => {\n          let msg = this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? `Update successful` : `Save successful`;\n          this.props.updateClickedInner(null);\n          this.props.setMessage(msg);\n          this.props.refresh();\n        }).catch(error => {\n          /* let errormsg = error.response && error.response.data ?\r\n               error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n          let msg = Function.getErrorMsg(error);\n          let show = this.state.categoryUpdateShow;\n          show.error = msg;\n          this.setState({\n            categoryUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.state = {\n      categoryUpdateShow: props.categoryUpdateShow,\n      names: [],\n      id: null,\n      categoryId: null,\n      amortizationPercent: null,\n      productType: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh(search) {\n    // console.log(\"search = \" + search);\n    UserCategoryDataService.retrieve(this.state.categoryUpdateShow.category.id || -1).then(response => {\n      console.log(\"got response = \" + JSON.stringify(response));\n      this.setState({\n        //item:response.data\n        names: response.data.names,\n        id: response.data.id,\n        categoryId: response.data.categoryId,\n        amortizationPercent: response.data.amortizationPercent,\n        productType: this.state.categoryUpdateShow.category.category && this.state.categoryUpdateShow.category.category.productType\n      }); // console.log(\"data length = \" + this.state.filteredNumbers.length);\n    }).catch(error => console.log(\"error = \" + error));\n  }\n\n  onamortizationChange(value) {\n    console.log(\" onamortizationChange value = \" + value.target.value);\n    let c = this.state.amortizationPercent; // if (c.category.productType === value.target.value) return;\n\n    c = value.target.value;\n    this.setState({\n      amortizationPercent: c\n    });\n  }\n\n  onCategoryChange(selected) {\n    let c = this.state.categoryId;\n    c = selected.value;\n    let type = this.state.productType;\n    type = this.state.names.filter(x => x.value == selected.value)[0].filterBy;\n    console.log(\"type = \" + type);\n    this.setState({\n      categoryId: c,\n      productType: type\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.categoryUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.categoryUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"40%\",\n          height: \"60%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? \"update\" : \"add\", \" category\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.categoryUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.categoryUpdateShow;\n              show.error = '';\n              this.setState({\n                categoryUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), console.log(\"state product type = \" + this.state.productType), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 ? \"ml-5 required-field\" : \"mt-5 ml-5 required-field\",\n          children: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          items: this.state.names,\n          value: this.state.categoryId,\n          onChange: selected => this.onCategoryChange(selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"ml-5 inline pl-0 pb-3 pt-3\",\n          children: \"product type\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this), this.state.productType || '...', /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: `ml-5 ${this.state.productType == 'LTA' ? \"required-field\" : \"\"}`,\n            children: \"amortization\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control inline p-2\",\n            disabled: this.state.productType != 'LTA',\n            value: this.state.productType != 'LTA' ? '' : this.state.amortizationPercent || '',\n            min: \"0\",\n            max: \"100\",\n            onChange: value => {\n              console.log(\"value on change = \" + value.target.value);\n              if (value.target.value == '--') return;\n              if (value.target.value > 0 && value.target.value <= 100) this.onamortizationChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this), \"\\xA0%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn p-x-5\",\n          onClick: this.saveUpdated,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserCategoryInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserCategoryInnerComponent.jsx"],"names":["React","Component","UserCategoryDataService","CustomSelect","Function","UserCategoryInnerComponent","constructor","props","saveUpdated","item","id","state","categoryId","amortizationPercent","productType","original","categoryUpdateShow","category","console","log","JSON","stringify","show","error","setState","save","then","response","msg","updateClickedInner","setMessage","refresh","catch","getErrorMsg","names","componentDidMount","search","retrieve","data","onamortizationChange","value","target","c","onCategoryChange","selected","type","filter","x","filterBy","render","width","height","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserCategoryDataService from '../service/UserCategoryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport Function from './Shared/Function'\r\n\r\nclass UserCategoryInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state =\r\n            {\r\n            categoryUpdateShow: props.categoryUpdateShow,\r\n            names: [],\r\n            id:null,\r\n            categoryId: null,\r\n            amortizationPercent: null,\r\n            productType:null\r\n\r\n            }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    refresh(search) {\r\n        // console.log(\"search = \" + search);\r\n        UserCategoryDataService.retrieve(this.state.categoryUpdateShow.category.id || -1)\r\n            .then(response => {\r\n                console.log(\"got response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                    //item:response.data\r\n                    names: response.data.names,\r\n                    id: response.data.id,\r\n                    categoryId: response.data.categoryId,\r\n                    amortizationPercent: response.data.amortizationPercent,\r\n                    productType: this.state.categoryUpdateShow.category.category && this.state.categoryUpdateShow.category.category.productType\r\n\r\n                })\r\n                // console.log(\"data length = \" + this.state.filteredNumbers.length);\r\n            }).catch(error =>\r\n                console.log(\"error = \" + error)\r\n            )\r\n    }\r\n\r\n    saveUpdated = () => {\r\n        let item = { id:this.state.id, categoryId: this.state.categoryId, amortizationPercent: this.state.amortizationPercent }//this.state.categoryUpdateShow.category;\r\n        let productType = this.state.productType;\r\n        let original = this.state.categoryUpdateShow.category;\r\n        // item.name = item.name ? item.name.trim() : item.name;\r\n        console.log(\"item to save = \" + JSON.stringify(item));\r\n        if (!item.categoryId || item.categoryId == \"undefined\" ||\r\n            (productType === 'LTA' && (!item.amortizationPercent || item.amortizationPercent == \"undefined\"))) {\r\n            let show = this.state.categoryUpdateShow;\r\n            show.error = \"All fields are required !!!\";\r\n            this.setState({ categoryUpdateShow: show })\r\n        } else if (original.id && original.category.id == item.categoryId && original.amortizationPercent == item.amortizationPercent) {\r\n            let show = this.state.categoryUpdateShow;\r\n            show.error = \"item hasn't changed !!!\";\r\n            this.setState({ categoryUpdateShow: show })\r\n        } else {\r\n            UserCategoryDataService.save(item)\r\n                .then(response => {\r\n                    let msg = this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? `Update successful` : `Save successful`;\r\n                    this.props.updateClickedInner(null);\r\n                    this.props.setMessage(msg);\r\n                    this.props.refresh();\r\n                }).catch(error => {\r\n                   /* let errormsg = error.response && error.response.data ?\r\n                        error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n                    let msg = Function.getErrorMsg(error);\r\n                    let show = this.state.categoryUpdateShow;\r\n                    show.error = msg;\r\n                    this.setState({ categoryUpdateShow: show })\r\n                })\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    onamortizationChange(value) {\r\n        console.log(\" onamortizationChange value = \" + value.target.value);\r\n        let c = this.state.amortizationPercent;\r\n       // if (c.category.productType === value.target.value) return;\r\n        c = value.target.value;\r\n        this.setState({\r\n            amortizationPercent: c\r\n        })\r\n    }\r\n    onCategoryChange(selected) {\r\n        let c = this.state.categoryId;\r\n        c = selected.value;\r\n        let type = this.state.productType;\r\n        type = (this.state.names.filter(x => x.value == selected.value))[0].filterBy;\r\n        console.log(\"type = \"+type)\r\n        this.setState({\r\n            categoryId: c,\r\n            productType:type\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.categoryUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.categoryUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"40%\", height: \"60%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateClickedInner(null)}>&times;</span>\r\n                    <h2>{this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? \"update\" : \"add\"} category</h2>\r\n                    {this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.categoryUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.categoryUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ categoryUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    {console.log(\"state product type = \" + this.state.productType)}\r\n                    <h6 className={this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 ?\r\n                        \"ml-5 required-field\" : \"mt-5 ml-5 required-field\"}>name</h6>\r\n                    <CustomSelect\r\n                        items={this.state.names}\r\n                        value={this.state.categoryId}\r\n                        onChange={(selected) => this.onCategoryChange(selected)}\r\n                    />\r\n                    <h6 className=\"ml-5 inline pl-0 pb-3 pt-3\">product type</h6>{this.state.productType||'...'} \r\n                  \r\n                       \r\n                    <div>\r\n                        <h6 className={`ml-5 ${this.state.productType == 'LTA' ? \"required-field\" : \"\"}`}>amortization</h6>\r\n                        <input type=\"number\" className=\"form-control inline p-2\"\r\n                            disabled={this.state.productType != 'LTA'}\r\n                            value={this.state.productType!='LTA'?'':this.state.amortizationPercent||''}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                            onChange={(value) => {\r\n                                console.log(\"value on change = \" + value.target.value);\r\n                                if (value.target.value == '--') return;\r\n                            if(value.target.value > 0 && value.target.value <= 100)\r\n                                this.onamortizationChange(value)\r\n                            }} />&nbsp;%\r\n                        </div>\r\n                    \r\n                    <button className=\"btn btn-mybtn p-x-5\" onClick={this.saveUpdated}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClickedInner(null)}>Cancel</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCategoryInnerComponent"]},"metadata":{},"sourceType":"module"}