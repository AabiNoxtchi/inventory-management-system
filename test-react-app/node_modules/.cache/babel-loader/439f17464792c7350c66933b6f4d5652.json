{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\ProductFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport Functions from './Functions';\n\nclass ProductFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      name: props.name,\n      names: props.names || [],\n      productType: props.productType,\n      productTypes: props.productTypes || [],\n      amortizationPercentMoreThan: props.amortizationPercentMoreThan,\n      amortizationPercentLessThan: props.amortizationPercentLessThan,\n      totalCountMoreThan: props.totalCountMoreThan,\n      totalCountLessThan: props.totalCountLessThan,\n      prefix: props.prefix,\n      maxmore: 100,\n      minless: 0,\n      mintotal: 0,\n      userCategories: props.userCategories || [],\n      filteredUserCategories: this.filter([], props.userCategories, props.productType),\n      userCategoryId: props.userCategoryId\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  filter(subs, names, value) {\n    subs = [];\n    if (value == null) subs = names;else {\n      for (let i = 0; i < names.length; i++) {\n        if (names[i].filterBy == value || !names[i].value || names[i].value == 'undefined') {\n          subs.push(names[i]);\n        }\n      }\n    }\n    return subs;\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch);\n    /* let path = window.location.pathname;\r\n     let search = window.location.search;\r\n     let newPath = ``;\r\n       if (search.length > 1) {\r\n         while (search.charAt(0) === '?') {\r\n             search = search.substring(1);\r\n         }\r\n         let searchItems = search.split('&');\r\n         for (let i = 0; i < searchItems.length; i++) {\r\n               if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                 newPath += searchItems[i] + '&'\r\n         }\r\n     }\r\n       let prefix = this.state.prefix;\r\n     Object.entries(values).map(([key, value]) => {\r\n         console.log('field key =' + key);\r\n         console.log('field value =' + value);\r\n         if (!key.endsWith(\"s\") && value) {\r\n             if ((values.productType === 'STA' && key === 'amortizationPercentMoreThan') ||\r\n                 (values.productType === 'STA' && key === 'amortizationPercentLessThan') ||\r\n                 (key === 'maxmore') ||\r\n                 (key === 'minless') ||\r\n                 (key === 'maxtotal') ||\r\n                 (key === 'mintotal')) { }\r\n             else { newPath += prefix + '.' + key + '=' + value + '&' }\r\n         }\r\n       })\r\n     newPath = newPath.substring(0, newPath.length - 1);\r\n     console.log(\"new path = \" + newPath);\r\n     newPath = '?' + newPath;\r\n     newPath = this.props.onNewSearch ? newPath : path + newPath;\r\n     this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath;*/\n  }\n\n  resetForm() {\n    this.props.onNewSearch ? this.props.onNewSearch('') : window.location.href = window.location.pathname; // values.name = null;\n    // this.props.history.push('/products');\n\n    /* this.setState({\r\n         all: '',\r\n         name: '',\r\n         productType: '',\r\n         amortizationPercentMoreThan: '',\r\n         amortizationPercentLessThan: '',\r\n         totalCountMoreThan: '',\r\n         totalCountLessThan:''\r\n     });\r\n     console.log('in reset form ');*/\n  }\n\n  render() {\n    let {\n      all,\n      name,\n      names,\n      productType,\n      productTypes,\n      amortizationPercentMoreThan,\n      amortizationPercentLessThan,\n      totalCountMoreThan,\n      totalCountLessThan,\n      maxmore,\n      minless,\n      mintotal,\n      userCategories,\n      userCategoryId,\n      filteredUserCategories\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        name,\n        names,\n        productType,\n        productTypes,\n        amortizationPercentMoreThan,\n        amortizationPercentLessThan,\n        totalCountMoreThan,\n        totalCountLessThan,\n        maxmore,\n        minless,\n        mintotal,\n        userCategories,\n        userCategoryId,\n        filteredUserCategories\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2-5\",\n              items: names,\n              value: name,\n              onChange: selected => setFieldValue(\"name\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"total\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"more than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                max: values.totalCountLessThan || \"\",\n                name: \"totalCountMoreThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"less than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: values.totalCountMoreThan || 0,\n                name: \"totalCountLessThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2 mx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), productTypes && productTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-2\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value,\n                checked: type.name === values.productType,\n                onChange: value => {\n                  console.log('value of checked = ' + value.target.value);\n                  setFieldValue(\"productType\", value.target.value == values.productType ? null : value.target.value);\n                  let subs = values.filteredUserCategories;\n                  subs = this.filter([], values.userCategories, value.target.value);\n                  /*  [];\r\n                  for (let i = 0; i < values.userCategories.length; i++) {\r\n                    \r\n                    if (values.userCategories[i].filterBy == value.target.value) {\r\n                        subs.push(values.userCategories[i])\r\n                    }\r\n                  }*/\n\n                  setFieldValue(\"filteredUserCategories\", subs);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 45\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"category\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2-5\",\n              items: values.filteredUserCategories,\n              value: values.userCategoryId,\n              onChange: selected => setFieldValue(\"userCategoryId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"amortization\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"more than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-50px\",\n                type: \"number\",\n                min: \"0\",\n                max: values.amortizationPercentLessThan || 100,\n                name: \"amortizationPercentMoreThan\",\n                disabled: values.productType == 'STA',\n                value: values.productType == 'STA' ? '' : values.amortizationPercentMoreThan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), \"\\xA0%\", /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-2 mb-1 fw-s\",\n                children: \"less than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-50px\",\n                type: \"number\",\n                min: values.amortizationPercentMoreThan || 0,\n                max: \"100\",\n                name: \"amortizationPercentLessThan\",\n                disabled: values.productType == 'STA',\n                value: values.productType == 'STA' ? '' : values.amortizationPercentLessThan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 41\n              }, this), \"\\xA0%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"reset\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/ProductFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","Functions","ProductFilter","constructor","props","state","all","name","names","productType","productTypes","amortizationPercentMoreThan","amortizationPercentLessThan","totalCountMoreThan","totalCountLessThan","prefix","maxmore","minless","mintotal","userCategories","filteredUserCategories","filter","userCategoryId","onSubmit","bind","resetForm","subs","value","i","length","filterBy","push","values","path","window","location","pathname","search","getSubmitPath","onNewSearch","href","render","setFieldValue","selected","borderRadius","map","type","console","log","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css';\r\nimport Functions from './Functions';\r\n\r\nclass ProductFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            name: props.name,\r\n            names: props.names ||[],\r\n            productType: props.productType,\r\n            productTypes: props.productTypes||[],\r\n            amortizationPercentMoreThan: props.amortizationPercentMoreThan,\r\n            amortizationPercentLessThan: props.amortizationPercentLessThan,\r\n            totalCountMoreThan: props.totalCountMoreThan,\r\n            totalCountLessThan: props.totalCountLessThan,\r\n            prefix: props.prefix,\r\n            maxmore: 100,\r\n            minless:0,\r\n            mintotal: 0,\r\n            userCategories: props.userCategories || [],\r\n            filteredUserCategories: this.filter([], props.userCategories, props.productType),\r\n            userCategoryId: props.userCategoryId\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    filter(subs, names, value) {\r\n        subs = [];\r\n        if (value == null) subs = names;\r\n        else {\r\n            for (let i = 0; i < names.length; i++) {\r\n\r\n                if (names[i].filterBy == value || !names[i].value || names[i].value == 'undefined') {\r\n                    subs.push(names[i])\r\n                }\r\n            }\r\n        }\r\n        return subs\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n\r\n        Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch)\r\n\r\n       /* let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            console.log('field key =' + key);\r\n            console.log('field value =' + value);\r\n            if (!key.endsWith(\"s\") && value) {\r\n                if ((values.productType === 'STA' && key === 'amortizationPercentMoreThan') ||\r\n                    (values.productType === 'STA' && key === 'amortizationPercentLessThan') ||\r\n                    (key === 'maxmore') ||\r\n                    (key === 'minless') ||\r\n                    (key === 'maxtotal') ||\r\n                    (key === 'mintotal')) { }\r\n                else { newPath += prefix + '.' + key + '=' + value + '&' }\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        console.log(\"new path = \" + newPath);\r\n        newPath = '?' + newPath;\r\n        newPath = this.props.onNewSearch ? newPath : path + newPath;\r\n        this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath;*/\r\n    }\r\n\r\n    resetForm() {\r\n\r\n        this.props.onNewSearch ?\r\n            this.props.onNewSearch('') :\r\n            window.location.href = window.location.pathname;\r\n       // values.name = null;\r\n\r\n       // this.props.history.push('/products');\r\n       /* this.setState({\r\n            all: '',\r\n            name: '',\r\n            productType: '',\r\n            amortizationPercentMoreThan: '',\r\n            amortizationPercentLessThan: '',\r\n            totalCountMoreThan: '',\r\n            totalCountLessThan:''\r\n        });\r\n        console.log('in reset form ');*/\r\n    }\r\n\r\n    render() {\r\n\r\n        let { all, name, names, productType, productTypes, amortizationPercentMoreThan, amortizationPercentLessThan,\r\n            totalCountMoreThan, totalCountLessThan, maxmore, minless, mintotal, userCategories, userCategoryId, filteredUserCategories} = this.state\r\n\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    all, name, names, productType, productTypes, amortizationPercentMoreThan,\r\n                    amortizationPercentLessThan, totalCountMoreThan, totalCountLessThan, maxmore, minless, mintotal, userCategories, userCategoryId, filteredUserCategories\r\n                }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values}) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                            <div className=\"inline\">\r\n                                <label>name&nbsp;</label>\r\n                                <CustomSelect                                    \r\n                                    className={\"inline inline-2-5\"}\r\n                                    items={names}\r\n                                    value={name}\r\n                                    onChange={(selected) => setFieldValue(\"name\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            {\r\n                                <div className=\"inline\" >\r\n                                    <label className=\"mb-1\">total&nbsp;</label>\r\n                                    <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                    <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-100px\" type=\"number\" min=\"0\" max={values.totalCountLessThan || \"\"}\r\n                                        name=\"totalCountMoreThan\" />\r\n                                    <label className=\"pl-1 mb-1 fw-s\">less than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-100px\" type=\"number\" min={values.totalCountMoreThan || 0}\r\n                                        name=\"totalCountLessThan\" />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            \r\n                            <div className=\"inline px-2 mx-2\">\r\n                                <label>product type :</label>\r\n                                {                                     \r\n                                    productTypes && productTypes.map((type) =>\r\n                                        <div className=\"inline\">                                        \r\n                                            <Field \r\n                                                className=\"mx-2\" type=\"checkbox\" name=\"productType\"\r\n                                                value={type.value} checked={type.name === values.productType}\r\n                                                onChange={(value) => {\r\n                                                    console.log('value of checked = ' + value.target.value);\r\n                                                    setFieldValue(\"productType\", value.target.value == values.productType ? null : value.target.value);\r\n                                                    let subs = values.filteredUserCategories;\r\n                                                    subs = this.filter([], values.userCategories, value.target.value)\r\n                                                      /*  [];\r\n                                                    for (let i = 0; i < values.userCategories.length; i++) {\r\n                                                        \r\n                                                        if (values.userCategories[i].filterBy == value.target.value) {\r\n                                                            subs.push(values.userCategories[i])\r\n                                                        }\r\n                                                    }*/\r\n                                                    setFieldValue(\"filteredUserCategories\", subs);\r\n                                                }} \r\n                                            />\r\n                                            {type.name}\r\n                                        </div>\r\n                                   )\r\n                                }\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label>category&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2-5\"}\r\n                                    items={values.filteredUserCategories}\r\n                                    value={values.userCategoryId}\r\n                                    onChange={(selected) => setFieldValue(\"userCategoryId\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            {/*values.productType == 'STA' ? \"inline d-none\" : \"inline\"*/} \r\n                            {\r\n                                <div className=\"inline\">\r\n                                    <label className=\"mb-1\">amortization&nbsp;</label>\r\n                                    <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                    <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-50px\" type=\"number\" min=\"0\" max={values.amortizationPercentLessThan || 100}\r\n                                            name=\"amortizationPercentMoreThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentMoreThan}/>&nbsp;%\r\n                                    <label className=\"pl-2 mb-1 fw-s\">less than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-50px\" type=\"number\" min={values.amortizationPercentMoreThan || 0} max=\"100\"\r\n                                            name=\"amortizationPercentLessThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentLessThan}/>&nbsp;%\r\n                                        </div>\r\n                            </div>\r\n                            }\r\n                           \r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"reset\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductFilter"]},"metadata":{},"sourceType":"module"}