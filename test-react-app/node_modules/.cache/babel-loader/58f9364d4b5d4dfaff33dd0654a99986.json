{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport '../myStyles/Style.css';\nimport AuthenticationService from '../service/AuthenticationService';\nconst userRole = AuthenticationService.getLoggedUerRole();\n\nclass UserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePassword = () => {\n      this.setState({\n        changingpassword: this.state.changingpassword ? false : true\n      });\n    };\n\n    this.onFocus = event => {\n      console.log(\"on focus \");\n\n      if (event.target.autocomplete) {\n        event.target.autocomplete = \"whatever\";\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      firstName: '',\n      lastName: '',\n      userName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      changingpassword: false,\n      countries: null,\n      cities: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(this.state.id);\n\n    if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\n      return;\n    }\n\n    UserDataService.retrieve(this.state.id).then(response => {\n      console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        userName: response.data.userName,\n        email: response.data.email,\n        countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\n        cities: userRole === 'ROLE_Admin' ? response.data.cities : null\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.userName,\n      email: values.email,\n      password: this.state.changingpassword ? values.password : null,\n      targetDate: values.targetDate\n    };\n    console.log(\"user to update = \" + JSON.stringify(user));\n    UserDataService.save(user).then(() => this.props.history.push('/users'));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.userName) {\n      errors.userName = 'required field !!!';\n    } else if (values.userName.length < 4) {\n      errors.userName = 'Enter at least 4 Characters';\n    }\n\n    if (!values.email) {\n      errors.email = 'required field !!!';\n    } else if (values.email.length < 4) {\n      errors.email = 'Enter at least 4 Characters';\n    }\n\n    if (this.state.id === -1 || this.state.changingpassword) {\n      if (!values.password) {\n        errors.password = 'required field !!!';\n      } else if (values.password.length < 6) {\n        errors.password = 'Enter at least 6 Characters';\n      } else if (values.password != values.confirmpassword) {\n        errors.confirmpassword = 'password and confirm password don\\'t match';\n      }\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    // this.props.history.push('/users')\n    window.history.back();\n  }\n\n  render() {\n    let {\n      id,\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      confirmpassword,\n      countries,\n      cities\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          userName,\n          email,\n          password,\n          confirmpassword,\n          countries,\n          cities\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"first name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"firstName\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"lastName\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"user name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"userName\",\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"userName\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 37\n          }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Country\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-3 foo\",\n                items: countries,\n                value: values.cityId,\n                onChange: selected => {\n                  setFieldValue(\"productId\", selected.value);\n                  let subs = values.filteredInventoryNumbers; // let sub = values.filteredInventoryNumbers.\n\n                  subs = [];\n\n                  for (let i = 0; i < values.inventoryNumbers.length; i++) {\n                    if (values.inventoryNumbers[i].filterBy == selected.value) {\n                      subs.push(values.inventoryNumbers[i]);\n                    }\n                  }\n\n                  setFieldValue(\"filteredInventoryNumbers\", subs);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 45\n            }, this), console.log(\"values.inventoryNumbers.length = \" + values.inventoryNumbers.length), console.log(\"values.filteredInventoryNumbers.length = \" + values.filteredInventoryNumbers.length), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"inventory number\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-4 foo\",\n                items: values.filteredInventoryNumbers,\n                value: values.id,\n                onChange: selected => setFieldValue(\"id\", selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 41\n          }, this), this.state.id > 0 && !this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn mt-5 mb-5 d-flex\",\n            onClick: this.changePassword,\n            children: \"change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 41\n          }, this), this.state.id > 0 && this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn mt-5 mb-5 d-flex\",\n            onClick: this.changePassword,\n            children: \"leave password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 41\n          }, this), (this.state.id < 1 || this.state.changingpassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control w-50\",\n                type: \"password\",\n                name: \"password\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"confirm password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control w-50\",\n                type: \"password\",\n                name: \"confirmpassword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmpassword\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","AuthenticationService","userRole","getLoggedUerRole","UserComponent","constructor","props","changePassword","setState","changingpassword","state","onFocus","event","console","log","target","autocomplete","id","match","params","firstName","lastName","userName","email","password","confirmpassword","countries","cities","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","JSON","stringify","data","values","user","username","targetDate","save","history","push","errors","length","window","back","render","cityId","selected","setFieldValue","value","subs","filteredInventoryNumbers","i","inventoryNumbers","filterBy"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserDataService from '../service/UserDataService';\r\nimport '../myStyles/Style.css';\r\nimport AuthenticationService from '../service/AuthenticationService'\r\n\r\nconst userRole = AuthenticationService.getLoggedUerRole();\r\nclass UserComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            changingpassword: false,\r\n            countries: null,\r\n            cities:null\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(this.state.id)\r\n        if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\r\n            return\r\n        }\r\n        UserDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log(\"response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                    firstName: response.data.firstName,\r\n                    lastName: response.data.lastName,\r\n                    userName: response.data.userName,\r\n                    email: response.data.email,\r\n                    countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\r\n                    cities: userRole === 'ROLE_Admin' ? response.data.cities : null\r\n                })\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.userName,\r\n            email: values.email,\r\n            password: this.state.changingpassword ? values.password : null,\r\n            targetDate: values.targetDate\r\n        }\r\n        console.log(\"user to update = \" + JSON.stringify(user))\r\n            UserDataService.save(user)\r\n                .then(() => this.props.history.push('/users'))       \r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'required field !!!'\r\n        } else if (values.userName.length < 4) {\r\n            errors.userName = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (!values.email) {\r\n            errors.email = 'required field !!!'\r\n        } else if (values.email.length < 4) {\r\n            errors.email = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (this.state.id === -1 || this.state.changingpassword) {\r\n            if (!values.password) {\r\n                errors.password = 'required field !!!'\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Enter at least 6 Characters'\r\n            } else if (values.password != values.confirmpassword) {\r\n                errors.confirmpassword='password and confirm password don\\'t match'\r\n            }\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n   cancelForm() {\r\n      // this.props.history.push('/users')\r\n       window.history.back();\r\n    }\r\n\r\n    changePassword = () => {\r\n        this.setState({\r\n            changingpassword: this.state.changingpassword ? false : true\r\n        })\r\n    }\r\n\r\n    onFocus = event => {\r\n        console.log(\"on focus \");\r\n\r\n        if (event.target.autocomplete) {\r\n            event.target.autocomplete = \"whatever\";\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        let { id, firstName, lastName, userName, email, password, confirmpassword, countries, cities } = this.state\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update User</h3> : <h3 className=\"mb-3\"> Add New User </h3>}\r\n                <Formik\r\n                    initialValues={{ id, firstName, lastName, userName, email, password, confirmpassword, countries, cities }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                            <Form >                                   \r\n                                   \r\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                   \r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>first name</label>\r\n                                        <Field className=\"form-control w-25\" type=\"text\" name=\"firstName\" />\r\n                                        <ErrorMessage name=\"firstName\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>last name</label>\r\n                                        <Field className=\"form-control w-25\" type=\"text\" name=\"lastName\" />\r\n                                        <ErrorMessage name=\"lastName\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>user name</label>\r\n                                       \r\n                                        <Field className=\"form-control w-25\" type=\"text\" name=\"userName\"\r\n                                            autoComplete=\"new-password\"/>\r\n                                        <ErrorMessage name=\"userName\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>email</label>\r\n                                        <Field className=\"form-control w-50\" type=\"email\" name=\"email\" />\r\n                                        <ErrorMessage name=\"email\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    {userRole === 'ROLE_Admin' &&\r\n                                        <fieldset >\r\n                                            <div className=\"inline\">\r\n                                                <label>Country&nbsp;</label>\r\n                                                <CustomSelect\r\n                                                className={\"inline inline-3 foo\"}\r\n                                                items={countries}\r\n                                                    value={values.cityId}\r\n                                                    onChange={(selected) => {\r\n                                                        setFieldValue(\"productId\", selected.value);\r\n                                                        let subs = values.filteredInventoryNumbers;\r\n                                                        // let sub = values.filteredInventoryNumbers.\r\n                                                        subs = [];\r\n                                                        for (let i = 0; i < values.inventoryNumbers.length; i++) {\r\n\r\n                                                            if (values.inventoryNumbers[i].filterBy == selected.value) {\r\n                                                                subs.push(values.inventoryNumbers[i])\r\n                                                            }\r\n                                                        }\r\n                                                        setFieldValue(\"filteredInventoryNumbers\", subs);\r\n                                                    }}\r\n                                                />\r\n                                            </div>\r\n                                            {console.log(\"values.inventoryNumbers.length = \" + values.inventoryNumbers.length)}\r\n                                            {console.log(\"values.filteredInventoryNumbers.length = \" + values.filteredInventoryNumbers.length)}\r\n                                            <div className=\"inline\">\r\n                                                <label>inventory number&nbsp;</label>\r\n                                                <CustomSelect\r\n                                                    className={\"inline inline-4 foo\"}\r\n                                                    items={values.filteredInventoryNumbers}\r\n                                                    value={values.id}\r\n                                                    onChange={(selected) => setFieldValue(\"id\", selected.value)}\r\n                                                />\r\n                                            </div>\r\n                                        </fieldset>\r\n                                    }\r\n\r\n                                    {(this.state.id > 0 && !this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-5 mb-5 d-flex\" onClick={this.changePassword}>change password</button>}\r\n                                    {(this.state.id > 0 && this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-5 mb-5 d-flex\" onClick={this.changePassword}>leave password</button>}\r\n                                    {(this.state.id < 1 || this.state.changingpassword) &&\r\n                                        <div>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>password</label>\r\n                                            <Field className=\"form-control w-50\" type=\"password\" name=\"password\"\r\n                                                autoComplete=\"new-password\"/>\r\n                                                <ErrorMessage name=\"password\" component=\"div\"\r\n                                                    className=\"alert alert-warning\" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>confirm password</label>\r\n                                            <Field className=\"form-control w-50\" type=\"password\" name=\"confirmpassword\" />\r\n                                                <ErrorMessage name=\"confirmpassword\" component=\"div\"\r\n                                                    className=\"alert alert-warning\" />\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    }\r\n\r\n                                    <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                    \r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}