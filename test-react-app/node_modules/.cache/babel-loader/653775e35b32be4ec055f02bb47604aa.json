{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthenticationService from '../service/AuthenticationService';\nimport '../myStyles/Style.css';\nimport Function from './Shared/Function';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getErrorMsg = error => {\n      // if (''+error == 'Error: Request failed with status code 401' )\n      //     return 'Invalid user name and/or password'\n      // else return '' + error\n      let msg = Function.getErrorMsg(error); //this.showError(msg, 10) \n\n      return msg;\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMsg: false,\n      errormsg: null,\n      isLoggedIn: props.isLoggedIn\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  showError(msg, time) {\n    time = time || 10;\n    this.setState({\n      errormsg: msg\n    });\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        this.setState(({\n          errormsg\n        }) => ({\n          errormsg: null\n        }));\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  loginClicked() {\n    AuthenticationService.executeAuthentication(this.state.username, this.state.password).then(response => {\n      this.setState({\n        showSuccessMsg: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n      let userRole = response.data.role;\n      AuthenticationService.registerSuccessfulLogin(this.state.username, response.data.token, userRole, response.data.id); // console.log(\"type of onLogin = \" + typeof this.props.isLoggedIn);\n      //console.log(\" onLogin != null = \" + (this.props.isLoggedIn != null));\n      //console.log(\" state onLogin != null = \" + (this.state.isLoggedIn != null));\n\n      this.props.onLogin(true); // this.setState({ isUserLoggedIn: AuthenticationService.isUserLoggedIn() })\n      // console.log(\"onlogin = \"+this.props.onLogin);\n      // let userRole = AuthenticationService.getLoggedUerRole();\n      //  console.log(\"user role = \" + userRole);\n      //  console.log(\"user role == 'ROLE_Employee'\" + (userRole == 'ROLE_Employee'));\n\n      /* switch (userRole) {\r\n           case 'ROLE_Employee':\r\n               this.props.history.push('/userprofiles');\r\n           default:\r\n                this.props.history.push('/courses');\r\n       }*/\n\n      if (userRole == \"ROLE_Employee\") this.props.history.push('/userprofiles'); // if (userRole == \"ROLE_Admin\") this.props.history.push('/users');\n      else this.props.history.push('/home');\n    }).catch(error => {\n      console.log('error = ' + error);\n      this.setState({\n        showSuccessMsg: false,\n        hasLoginFailed: true,\n        errormsg: this.getErrorMsg(error)\n      });\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.username) {\n      errors.username = 'Enter user name';\n    } else if (values.username.length < 3) {\n      errors.username = 'Enter at least 3 Characters for user name';\n    }\n\n    if (!values.password) {\n      errors.password = 'Enter password';\n    } else if (values.password.length < 6) {\n      errors.password = 'Enter at least 6 Characters for password';\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      username,\n      password\n    } = this.state; // let isUserLoggedIn = AuthenticationService.isUserLoggedIn();\n\n    console.log(\"rendering log in component\"); // console.log(\"is user logged in = \" + isUserLoggedIn);\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: this.state.errormsg\n        /*|| 'Invalid user name and/or password'*/\n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 51\n      }, this), this.state.showSuccessMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Successfull\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username,\n          password\n        },\n        onSubmit: this.loginClicked,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"username\",\n              value: this.state.username,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"password\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn p-x-5 mt-3\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/LoginComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","AuthenticationService","Function","LoginComponent","constructor","props","getErrorMsg","error","msg","state","username","password","hasLoginFailed","showSuccessMsg","errormsg","isLoggedIn","handleChange","bind","loginClicked","validate","event","setState","target","name","value","showError","time","myInterval","setInterval","clearInterval","componentWillUnmount","executeAuthentication","then","response","userRole","data","role","registerSuccessfulLogin","token","id","onLogin","history","push","catch","console","log","values","errors","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport '../myStyles/Style.css';\r\nimport Function from './Shared/Function'\r\n\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMsg: false,\r\n            errormsg: null,\r\n            isLoggedIn: props.isLoggedIn\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    getErrorMsg = (error) => {\r\n       // if (''+error == 'Error: Request failed with status code 401' )\r\n       //     return 'Invalid user name and/or password'\r\n       // else return '' + error\r\n        let msg = Function.getErrorMsg(error);\r\n        //this.showError(msg, 10) \r\n        return msg;\r\n    }\r\n\r\n    showError(msg,time) {\r\n        time = time || 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })\r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                this.setState(({ errormsg }) => ({\r\n                    errormsg: null\r\n                }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    } \r\n\r\n    loginClicked() {\r\n        AuthenticationService\r\n            .executeAuthentication(this.state.username, this.state.password)\r\n            .then((response) => {\r\n                this.setState({ showSuccessMsg: true })\r\n                this.setState({ hasLoginFailed: false })\r\n                let userRole = response.data.role;\r\n                AuthenticationService.registerSuccessfulLogin(this.state.username, response.data.token, userRole, response.data.id);\r\n               // console.log(\"type of onLogin = \" + typeof this.props.isLoggedIn);\r\n                //console.log(\" onLogin != null = \" + (this.props.isLoggedIn != null));\r\n                //console.log(\" state onLogin != null = \" + (this.state.isLoggedIn != null));\r\n                this.props.onLogin(true);\r\n               // this.setState({ isUserLoggedIn: AuthenticationService.isUserLoggedIn() })\r\n               // console.log(\"onlogin = \"+this.props.onLogin);\r\n               // let userRole = AuthenticationService.getLoggedUerRole();\r\n               \r\n              //  console.log(\"user role = \" + userRole);\r\n              //  console.log(\"user role == 'ROLE_Employee'\" + (userRole == 'ROLE_Employee'));\r\n               /* switch (userRole) {\r\n                    case 'ROLE_Employee':\r\n                        this.props.history.push('/userprofiles');\r\n                    default:\r\n                         this.props.history.push('/courses');\r\n                }*/\r\n                if (userRole == \"ROLE_Employee\") this.props.history.push('/userprofiles');\r\n               // if (userRole == \"ROLE_Admin\") this.props.history.push('/users');\r\n                else this.props.history.push('/home');\r\n                \r\n            }).catch((error) => {\r\n                console.log('error = ' + error);\r\n                this.setState({\r\n                    showSuccessMsg: false,\r\n                    hasLoginFailed: true,\r\n                    errormsg: this.getErrorMsg(error)\r\n                })\r\n                \r\n        })           \r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Enter user name'\r\n        } else if (values.username.length < 3) {\r\n            errors.username = 'Enter at least 3 Characters for user name'\r\n        }\r\n        if (!values.password) {\r\n            errors.password = 'Enter password'\r\n        } else if (values.password.length < 6) {\r\n            errors.password = 'Enter at least 6 Characters for password'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    render() {\r\n        let { username, password } = this.state;\r\n       // let isUserLoggedIn = AuthenticationService.isUserLoggedIn();\r\n        console.log(\"rendering log in component\");\r\n       // console.log(\"is user logged in = \" + isUserLoggedIn);\r\n        return (\r\n           \r\n               \r\n            <div className=\"container pt-5\">\r\n               \r\n               \r\n                <h3 className=\"mb-3\">Login</h3>\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">{this.state.errormsg /*|| 'Invalid user name and/or password'*/}</div>}\r\n                    {this.state.showSuccessMsg && <div>Login Successfull</div>}\r\n                    <Formik\r\n                        initialValues={{ username, password }}\r\n                        onSubmit={this.loginClicked}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>User Name:</label>\r\n                                        <Field className=\"form-control w-25\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                                        <ErrorMessage name=\"username\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Password:</label>\r\n                                        <Field className=\"form-control w-25\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                                        <ErrorMessage name=\"password\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <button className=\"btn btn-mybtn p-x-5 mt-3\" type=\"submit\">Login</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}