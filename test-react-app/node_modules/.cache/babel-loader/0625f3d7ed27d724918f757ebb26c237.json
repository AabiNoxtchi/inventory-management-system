{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\InventoryNumberInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport '../myStyles/Style.css';\nimport Function from './Shared/Function';\n\nclass InventoryNumberInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdatedPd = () => {\n      let x = this.state.pdUpdateShow.x;\n      let y = this.state.pdUpdateShow.y;\n      let i = this.state.pdUpdateShow.i;\n      if (i == undefined) i = this.state.pdShow[x][y].data.length;\n      let name = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.name.trim() : null;\n\n      if (this.state.pdUpdateShow.pd == null) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number is required\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.state.pdUpdateShow.pd.value && name == this.state.pdShow[x][y].data[i].name) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number hasn't changed\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (name.length == 0) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number can't be empty\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.numberExists(name, x, y, i)) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number already exist's in this delivery\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else {\n        let item = {\n          selectItem: {\n            name: this.state.pdUpdateShow.pd.name.trim(),\n            value: this.state.pdUpdateShow.pd.value\n          },\n          deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\n        };\n        ProductDetailDataService.updateNumber(item).then(response => {\n          this.props.updatePdChildClicked(null);\n          let pdshow = this.state.pdShow;\n\n          if (this.state.pdUpdateShow.i == undefined) {\n            let list = pdshow[x][y].data;\n            list.push({\n              value: response.data,\n              name: item.selectItem.name\n            });\n            pdshow[x][y].data = list;\n          } else pdshow[x][y].data[i].name = item.selectItem.name;\n\n          let pdmessages = this.state.pdmessage;\n          if (pdmessages[x] == null) pdmessages[x] = [];\n          pdmessages[x][y] = `Update successful`;\n          this.props.setpdShow(pdshow);\n          this.props.setpdMessage(pdmessages);\n          if (this.state.pdUpdateShow.i == undefined) this.props.refresh();\n        }).catch(error => {\n          let msg = Function.getErrorMsg(error);\n          let show = this.state.pdUpdateShow;\n          show.error = msg;\n          this.setState({\n            pdUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.numberExists = (name, x, y, i) => {\n      let pdshow = this.state.pdShow;\n      let productNums = pdshow[x][y].data;\n\n      for (let j = 0; j < productNums.length; j++) {\n        if (j == i) continue;\n        if (name == productNums[j].name) return true;\n      }\n\n      return false;\n    };\n\n    this.state = {\n      pdUpdateShow: props.pdUpdateShow,\n      pdShow: props.pdShow,\n      pdmessage: props.pdmessage\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"50%\",\n          height: \"48%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory number \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 17\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.name,\n          onChange: value => {\n            let show = this.state.pdUpdateShow;\n            if (show.pd == null) show.pd = {};\n            show.pd.name = value.target.value;\n            this.setState({\n              pdUpdateShow: show\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn p-x-5 \",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 \",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default InventoryNumberInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/InventoryNumberInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","Function","InventoryNumberInnerComponent","constructor","props","saveUpdatedPd","x","state","pdUpdateShow","y","i","undefined","pdShow","data","length","name","pd","trim","show","error","setState","value","numberExists","item","selectItem","deliveryDetailId","ddid","updateNumber","then","response","updatePdChildClicked","pdshow","list","push","pdmessages","pdmessage","setpdShow","setpdMessage","refresh","catch","msg","getErrorMsg","productNums","j","render","width","height","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\nimport Function from './Shared/Function'\r\n\r\nclass InventoryNumberInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n            pdUpdateShow: props.pdUpdateShow,\r\n            pdShow: props.pdShow,\r\n            pdmessage: props.pdmessage\r\n            }\r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n\r\n        let x = this.state.pdUpdateShow.x;\r\n        let y = this.state.pdUpdateShow.y;\r\n        let i = this.state.pdUpdateShow.i;\r\n        \r\n        if (i == undefined) i = this.state.pdShow[x][y].data.length;\r\n        let name = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.name.trim() : null;\r\n        if (this.state.pdUpdateShow.pd == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number is required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.value &&\r\n            name == this.state.pdShow[x][y].data[i].name) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.numberExists(name, x, y, i)){\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number already exist's in this delivery\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {\r\n\r\n            let item = {\r\n                selectItem: {\r\n                    name: this.state.pdUpdateShow.pd.name.trim(), value: this.state.pdUpdateShow.pd.value\r\n                },\r\n                deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid:null\r\n            }\r\n            ProductDetailDataService.updateNumber(item)\r\n                .then(response => {\r\n                    this.props.updatePdChildClicked(null);\r\n                    let pdshow = this.state.pdShow;\r\n\r\n                    if (this.state.pdUpdateShow.i == undefined) {\r\n                        let list = pdshow[x][y].data;\r\n                        list.push({ value: response.data, name: item.selectItem.name });\r\n                        pdshow[x][y].data = list\r\n                    }else\r\n                        pdshow[x][y].data[i].name = item.selectItem.name;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;\r\n\r\n                    this.props.setpdShow(pdshow);\r\n                    this.props.setpdMessage(pdmessages);\r\n                    if (this.state.pdUpdateShow.i == undefined) this.props.refresh()\r\n                    \r\n                }).catch(error => {                   \r\n                    let msg = Function.getErrorMsg(error);\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = msg;\r\n                    this.setState({ pdUpdateShow: show })                   \r\n                })\r\n        }\r\n    }\r\n\r\n    numberExists = (name, x, y, i) => {\r\n        let pdshow = this.state.pdShow;\r\n        let productNums = pdshow[x][y].data;\r\n        for (let j = 0; j < productNums.length; j++) {\r\n            if (j == i) continue\r\n            if (name == productNums[j].name)               \r\n                return true           \r\n        }  \r\n        return false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"50%\", height: \"48%\" }}>\r\n                <span class=\"close\" onClick={() => this.props.updatePdChildClicked(null)}>&times;</span>\r\n                <h2>update inventory number </h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.pdUpdateShow.error}\r\n                    <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                        onClick={() => {\r\n                            let show = this.state.pdUpdateShow;\r\n                            show.error = '';\r\n                            this.setState({ pdUpdateShow: show })\r\n                        }}>\r\n                    </i>\r\n                    </div>}\r\n                    <h6 className={this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number : </h6>\r\n                    <input type=\"text\" className = \"form-control\" value={this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.name} onChange={(value) => {\r\n                        let show = this.state.pdUpdateShow;\r\n                        if (show.pd == null) show.pd = {};\r\n                    show.pd.name = value.target.value;\r\n                    this.setState({ pdUpdateShow: show })\r\n                }} />\r\n                <button className=\"btn btn-mybtn p-x-5 \" onClick={this.saveUpdatedPd}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 \" onClick={() => this.props.updatePdChildClicked(null)}>Cancel</button> \r\n                </div>\r\n                </>\r\n            )\r\n    }\r\n\r\n}\r\nexport default InventoryNumberInnerComponent"]},"metadata":{},"sourceType":"module"}