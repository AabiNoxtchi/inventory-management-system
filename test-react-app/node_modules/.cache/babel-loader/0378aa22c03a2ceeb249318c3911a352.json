{"ast":null,"code":"class Function {\n  getErrorMsg(error) {\n    /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                    error.response.data.message ? error.response.data.message : error;*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                   error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n           error.response.data.message ? error.response.data.message : error;*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                    error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let msg = \"\" + error.response && typeof error.response.data == 'string' ?\r\n               error.response.data : error.response.data.errors ?\r\n                   error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                       error.response.data.message : error;*/\n    // let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\n    //\"errors occured : \" + error + \" !!!\";\n\n    /* let errormsg = error.response && error.response.data ?\r\n         error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n         error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n\n    /* let errormsg = error.response && error.response.data ?\r\n                   error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\n    console.log(\"error = \" + error);\n    console.log(\"error.response = \" + JSON.stringify(error.response));\n    let msg = '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : error.response && error.response.data && typeof error.response.data == 'string' ? error.response.data : error.response && error.response.data && typeof error.response.data == 'object' ? error.response.data.errors ? error.response.data.errors[0].defaultMessage : error.response.data.message != null ? error.response.data.message :\n    /* error.response && error.response.data && typeof error.response.data == 'object'\r\n     && error.response.data.message == null ?*/\n    'errors found !!!' : error + '';\n    if (typeof msg == 'string' && msg.startsWith('Failed to convert value')) msg = 'try again with correct values !!!';\n    msg = typeof msg == 'string' && msg.indexOf(\"ConstraintViolationException\") > -1 ? \"can't delete item with associated records !!!\" : msg;\n    /* let msg = \"\" + error &&\r\n         // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n         //error.response.data :\r\n         error.response && error.response.data ?\r\n         error.response.data.errors ?\r\n             error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                 error.response.data.message :\r\n                 error : 'something went wrong !!!';*/\n\n    console.log(\"msg = \" + msg);\n    return msg;\n  }\n\n  getDate() {\n    // new date \n    //let g = new Date();\n\n    /*  let date = new Date();\r\n     date =  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n      //console.log(\"g after turn = \" + g);*/\n    let date = new Date();\n    date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n    console.log(\"date after turn = \" + date);\n    return date;\n  }\n\n  convertDate(date) {\n    // to string \n    if (date && date != 'undefined') {\n      // let date = \n      date = new Date(date);\n      date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n      date = date.toISOString();\n      date = date.substring(0, date.indexOf('T'));\n      return date;\n    } else return '';\n  }\n  /*showError(time) {\r\n     /* let time = 10;\r\n      this.setState({\r\n          errormsg: msg,\r\n      })*/\n\n  /*    this.myInterval = setInterval(() => {\r\n          time = time - 1;\r\n          if (time == 0) {\r\n              return true;\r\n              clearInterval(this.myInterval)\r\n          }\r\n      }, 1000)\r\n  }\r\n    componentWillUnmount() {\r\n      clearInterval(this.myInterval)\r\n  }*/\n\n\n}\n\nexport default new Function();","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Shared/Function.js"],"names":["Function","getErrorMsg","error","console","log","JSON","stringify","response","msg","data","errors","defaultMessage","message","startsWith","indexOf","getDate","date","Date","setHours","getHours","getTimezoneOffset","convertDate","toISOString","substring"],"mappings":"AACA,MAAMA,QAAN,CAAe;AAGXC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AAGf;AACR;;AACQ;AACR;;AACQ;AACR;;AACQ;AACR;;AACQ;AACR;AACA;AACA;AACQ;AACA;;AACA;AACR;;AACQ;AACR;;AACQ;AACR;AAEQC,IAAAA,OAAO,CAACC,GAAR,CAAY,aAAaF,KAAzB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,sBAAsBC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,QAArB,CAAlC;AACA,QAAIC,GAAG,GAAG,KAAKN,KAAL,IAAc,4CAAd,GAA6D,yBAA7D,GACNA,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeE,IAAjC,IAAyC,OAAOP,KAAK,CAACK,QAAN,CAAeE,IAAtB,IAA8B,QAAvE,GACAP,KAAK,CAACK,QAAN,CAAeE,IADf,GACsBP,KAAK,CAACK,QAAN,IAAkBL,KAAK,CAACK,QAAN,CAAeE,IAAjC,IAAyC,OAAOP,KAAK,CAACK,QAAN,CAAeE,IAAtB,IAA8B,QAAvE,GAClBP,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBC,MAApB,GACIR,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBC,MAApB,CAA2B,CAA3B,EAA8BC,cADlC,GACmDT,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBG,OAApB,IAA+B,IAA/B,GAC3CV,KAAK,CAACK,QAAN,CAAeE,IAAf,CAAoBG,OADuB;AAE5C;AACvB;AAAmE,sBALjC,GAKsDV,KAAK,GAAG,EAPxF;AASA,QAAI,OAAOM,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACK,UAAJ,CAAe,yBAAf,CAA9B,EACIL,GAAG,GAAG,mCAAN;AACJA,IAAAA,GAAG,GAAG,OAAOA,GAAP,IAAc,QAAd,IAA0BA,GAAG,CAACM,OAAJ,CAAY,8BAAZ,IAA8C,CAAC,CAAzE,GAA6E,+CAA7E,GAA+HN,GAArI;AAED;AACP;AACA;AACA;AACA;AACA;AACA;AACA;;AACQL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAWI,GAAvB;AACA,WAAOA,GAAP;AACH;;AAEDO,EAAAA,OAAO,GAAG;AAAE;AACR;;AACF;AACN;AACA;AAES,QAAIC,IAAI,GAAG,IAAIC,IAAJ,EAAX;AACDD,IAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAjB,IAAAA,OAAO,CAACC,GAAR,CAAY,uBAAuBY,IAAnC;AACA,WAAOA,IAAP;AACH;;AAEDK,EAAAA,WAAW,CAACL,IAAD,EAAO;AAAE;AAChB,QAAIA,IAAI,IAAIA,IAAI,IAAI,WAApB,EAAiC;AAC7B;AACAA,MAAAA,IAAI,GAAI,IAAIC,IAAJ,CAASD,IAAT,CAAR;AACAA,MAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAJ,MAAAA,IAAI,GAAGA,IAAI,CAACM,WAAL,EAAP;AACAN,MAAAA,IAAI,GAAGA,IAAI,CAACO,SAAL,CAAe,CAAf,EAAkBP,IAAI,CAACF,OAAL,CAAa,GAAb,CAAlB,CAAP;AACA,aAAOE,IAAP;AACH,KAPD,MAOO,OAAO,EAAP;AACV;AAED;AACJ;AACA;AACA;AACA;;AACI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AA5Fe;;AAgGf,eAAe,IAAIhB,QAAJ,EAAf","sourcesContent":["\r\nclass Function {\r\n\r\n\r\n    getErrorMsg(error) {\r\n\r\n\r\n        /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                        error.response.data.message ? error.response.data.message : error;*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                       error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n               error.response.data.message ? error.response.data.message : error;*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                        error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let msg = \"\" + error.response && typeof error.response.data == 'string' ?\r\n                   error.response.data : error.response.data.errors ?\r\n                       error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                           error.response.data.message : error;*/\r\n        // let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\r\n        //\"errors occured : \" + error + \" !!!\";\r\n        /* let errormsg = error.response && error.response.data ?\r\n             error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n             error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n        /* let errormsg = error.response && error.response.data ?\r\n                       error.response.data.message ? error.response.data.message : error.response.data : error + '';*/\r\n\r\n        console.log(\"error = \" + error);\r\n        console.log(\"error.response = \" + JSON.stringify(error.response));\r\n        let msg = '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' :\r\n            error.response && error.response.data && typeof error.response.data == 'string' ?\r\n            error.response.data : error.response && error.response.data && typeof error.response.data == 'object' ?\r\n                error.response.data.errors ?\r\n                    error.response.data.errors[0].defaultMessage : error.response.data.message != null ?\r\n                        error.response.data.message :\r\n                       /* error.response && error.response.data && typeof error.response.data == 'object'\r\n                        && error.response.data.message == null ?*/ 'errors found !!!' : error + '';\r\n\r\n        if (typeof msg == 'string' && msg.startsWith('Failed to convert value'))\r\n            msg = 'try again with correct values !!!'\r\n        msg = typeof msg == 'string' && msg.indexOf(\"ConstraintViolationException\") > -1 ? \"can't delete item with associated records !!!\" : msg\r\n\r\n       /* let msg = \"\" + error &&\r\n            // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n            //error.response.data :\r\n            error.response && error.response.data ?\r\n            error.response.data.errors ?\r\n                error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                    error.response.data.message :\r\n                    error : 'something went wrong !!!';*/\r\n        console.log(\"msg = \" + msg);\r\n        return msg;\r\n    }\r\n\r\n    getDate() { // new date \r\n        //let g = new Date();\r\n      /*  let date = new Date();\r\n       date =  date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n        //console.log(\"g after turn = \" + g);*/\r\n\r\n         let date = new Date();       \r\n        date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n        console.log(\"date after turn = \" + date);\r\n        return date;\r\n    }\r\n\r\n    convertDate(date) { // to string \r\n        if (date && date != 'undefined') {\r\n            // let date = \r\n            date = (new Date(date));\r\n            date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n            return date;\r\n        } else return '';\r\n    }\r\n\r\n    /*showError(time) {\r\n       /* let time = 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })*/\r\n    /*    this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                return true;\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }*/\r\n}\r\n\r\nexport default new Function()"]},"metadata":{},"sourceType":"module"}