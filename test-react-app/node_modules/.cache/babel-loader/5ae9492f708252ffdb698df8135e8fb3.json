{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryDetailComponent.jsx\";\nimport React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nexport default (({\n  values\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"d-flex align-items-top mt-3 mb-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"d-flex align-items-top\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            children: \"product :\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: \"d-inline-block inline-2-5\",\n            items: values.products,\n            value: values.ddEditVM.productId,\n            onChange: selected => {\n              setFieldValue(\"ddEditVM.productName\", selected.label);\n              setFieldValue(\"ddEditVM.productId\", selected.value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 21\n          }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-1\",\n            children: \"quantity :\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control d-inline p-1 inline-100px\",\n            type: \"number\",\n            min: \"0\",\n            name: \"ddEditVM.quantity\",\n            onChange: e => {\n              this.onChangeQuantity(e, values, setFieldValue);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 21\n          }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-inline px-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mb-1\",\n            children: \"unit price :\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control d-inline p-1 inline-100px\",\n            type: \"number\",\n            min: \"0\",\n            name: \"ddEditVM.pricePerOne\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 21\n          }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn mr-1\",\n          type: \"button\",\n          onClick: () => {\n            let iserror = false;\n\n            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n              setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n              iserror = true;\n            } else {\n              values.deliveryDetailEditVMs.map((x, y) => {\n                if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                  iserror = true;\n                  let ddErrorName = values.ddEditVMerror.name;\n                  ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                  setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                }\n              });\n            }\n\n            if (values.ddEditVM.pricePerOne == '') {\n              setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n              iserror = true;\n            }\n\n            if (values.ddEditVM.quantity == '') {\n              setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n              iserror = true;\n            }\n\n            if (values.ddEditVM.quantity > 0) {\n              let ddErrorNums = values.productNumErrors;\n\n              for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {\n                  ddErrorNums[i] = 'required field !!!';\n                  iserror = true;\n                } else if (values.ddEditVM.productNums[i].inventoryNumber.length < 4) {\n                  ddErrorNums[i] = 'too short !!!';\n                  iserror = true;\n                } else {\n                  let isSame = false;\n\n                  for (let j = 0; j < i; j++) {\n                    if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\n                      isSame = true;\n                      iserror = true;\n                    }\n                  }\n\n                  ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                }\n              }\n\n              setFieldValue(\"productNumErrors\", ddErrorNums);\n            }\n\n            if (!iserror) {\n              if (values.index === '') {\n                let list = values.deliveryDetailEditVMs;\n                list.push(values.ddEditVM);\n                setFieldValue(\"deliveryDetailEditVMs\", list);\n              } else {\n                let list = values.deliveryDetailEditVMs;\n                list[values.index] = values.ddEditVM; // edited;\n\n                setFieldValue(\"deliveryDetailEditVMs\", list);\n              }\n\n              this.resetddEditVMForm(values, setFieldValue);\n            }\n          },\n          children: values.index !== '' ? \"Update\" : \"Add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete\",\n          type: \"button\",\n          onClick: () => {\n            this.resetddEditVMForm(values, setFieldValue);\n          },\n          children: \"reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n      className: \"mb-1\",\n      children: values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ml-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"inventory number \", i + 1, \" :\\xA0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(Field, {\n          name: `ddEditVM.productNums.${i}.inventoryNumber`,\n          type: \"text\",\n          className: 'form-control d-inline-block inline-4',\n          onChange: e => {\n            if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-' + i, values, setFieldValue);\n            setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n          type: \"button\",\n          onClick: () => {\n            let list = values.ddEditVM.productNums;\n            list.splice(i, 1);\n            setFieldValue(\"ddEditVM.productNums\", list);\n\n            if (num.id !== '') {\n              let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n              let index = updatedProductNums.findIndex(x => x.id === num.id);\n\n              if (index > -1) {\n                updatedProductNums.splice(index, 1);\n                setFieldValue(\"ddEditVM.updatedProductNums\", list);\n              }\n\n              let deleted = values.ddEditVM.deletedNums || [];\n              deleted.push(num.id);\n              setFieldValue(\"ddEditVM.deletedNums\", deleted);\n            }\n\n            setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n          },\n          children: \"Delete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 29\n        }, this), this.state.numErrors && this.state.numErrors instanceof Array && values.index !== '' && this.state.numErrors[values.index] && this.state.numErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-inline ml-1\",\n          children: this.state.numErrors[values.index][i]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 29\n        }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-inline ml-1\",\n          children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-3 pt-1\",\n            onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 29\n        }, this)]\n      }, num.id || i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 9\n  }, this);\n});","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryDetailComponent.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","CustomSelect","values","products","ddEditVM","productId","selected","setFieldValue","label","value","ddEditVMerror","name","e","onChangeQuantity","quantity","pricePerOne","iserror","deliveryDetailEditVMs","map","x","y","productName","index","ddErrorName","ddErrorNums","productNumErrors","i","productNums","inventoryNumber","length","isSame","j","list","push","resetddEditVMForm","num","id","onUpdateProductNums","target","splice","updatedProductNums","findIndex","deleted","deletedNums","state","numErrors","Array"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\nexport default ({ values }) => {\r\n\r\n    \r\n\r\n    return (\r\n        <div>\r\n        < fieldset className=\"d-flex align-items-top mt-3 mb-3\" >\r\n            <div className=\"d-flex align-items-top\">\r\n                <div className=\"d-inline px-3\">\r\n                    <label>product :&nbsp;</label>\r\n                    <CustomSelect\r\n                        className={\"d-inline-block inline-2-5\"}\r\n                        items={values.products}\r\n                        value={values.ddEditVM.productId}\r\n                        onChange={(selected) => {\r\n                            setFieldValue(\"ddEditVM.productName\", selected.label);\r\n                            setFieldValue(\"ddEditVM.productId\", selected.value);\r\n                        }} />\r\n                    {\r\n                        values.ddEditVMerror.name &&\r\n                        <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                    }\r\n                </div>\r\n                <div className=\"d-inline px-3\">\r\n                    <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                    <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                        onChange={e => {\r\n                            this.onChangeQuantity(e, values, setFieldValue)\r\n                        }} />\r\n                    {\r\n                        values.ddEditVMerror.quantity &&\r\n                        <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                    }\r\n                </div>\r\n                <div className=\"d-inline px-3\">\r\n                    <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                    <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                    {\r\n                        values.ddEditVMerror.pricePerOne &&\r\n                        <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                    }\r\n                </div>\r\n            </div>\r\n            <div>\r\n                <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                    let iserror = false;\r\n                    if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                        setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                        iserror = true\r\n                    }\r\n                    else {\r\n                        values.deliveryDetailEditVMs.map((x, y) => {\r\n                            if (x.productName == values.ddEditVM.productName && (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                iserror = true;\r\n                                let ddErrorName = values.ddEditVMerror.name;\r\n                                ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                            }\r\n                        });\r\n                    }\r\n                    if (values.ddEditVM.pricePerOne == '') {\r\n                        setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                        iserror = true\r\n                    }\r\n                    if (values.ddEditVM.quantity == '') {\r\n                        setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                        iserror = true\r\n                    }\r\n                    if (values.ddEditVM.quantity > 0) {\r\n                        let ddErrorNums = values.productNumErrors;\r\n                        for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                            if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {\r\n                                ddErrorNums[i] = 'required field !!!';\r\n                                iserror = true;\r\n                            }\r\n                            else if (values.ddEditVM.productNums[i].inventoryNumber.length < 4) {\r\n                                ddErrorNums[i] = 'too short !!!';\r\n                                iserror = true;\r\n                            }\r\n                            else {\r\n                                let isSame = false;\r\n                                for (let j = 0; j < i; j++) {\r\n                                    if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\r\n                                        isSame = true;\r\n                                        iserror = true;\r\n                                    }\r\n                                }\r\n                                ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                            }\r\n                        }\r\n                        setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                    }\r\n                    if (!iserror) {\r\n                        if (values.index === '') {\r\n                            let list = values.deliveryDetailEditVMs;\r\n                            list.push(values.ddEditVM);\r\n                            setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                        }\r\n                        else {\r\n                            let list = values.deliveryDetailEditVMs;\r\n                            list[values.index] = values.ddEditVM; // edited;\r\n                            setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                        }\r\n\r\n                        this.resetddEditVMForm(values, setFieldValue)\r\n                    }\r\n\r\n                }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                    this.resetddEditVMForm(values, setFieldValue)\r\n                }}>reset</button>\r\n            </div>\r\n        </fieldset >\r\n        <fieldset className=\"mb-1\">\r\n            {\r\n                values.ddEditVM.productNums &&\r\n                values.ddEditVM.productNums.map((num, i) =>\r\n                    <div key={num.id || i} className=\"ml-3\">\r\n                        <label>inventory number {i + 1} :&nbsp;</label>\r\n                        <Field\r\n                            name={`ddEditVM.productNums.${i}.inventoryNumber`}\r\n                            type=\"text\"\r\n                            className={'form-control d-inline-block inline-4'}\r\n                            onChange={e => {\r\n                                if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-' + i, values, setFieldValue)\r\n                                setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n                            }} />\r\n                        {\r\n                            <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                onClick={() => {\r\n                                    let list = values.ddEditVM.productNums;\r\n                                    list.splice(i, 1)\r\n                                    setFieldValue(\"ddEditVM.productNums\", list)\r\n                                    if (num.id !== '') {\r\n                                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                        let index = updatedProductNums.findIndex(x => x.id === num.id);\r\n                                        if (index > -1) {\r\n                                            updatedProductNums.splice(index, 1)\r\n                                            setFieldValue(\"ddEditVM.updatedProductNums\", list)\r\n                                        }\r\n                                        let deleted = values.ddEditVM.deletedNums || [];\r\n                                        deleted.push(num.id)\r\n                                        setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                    }\r\n                                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                }}>Delete</button>\r\n                        }\r\n                        {\r\n                            this.state.numErrors && this.state.numErrors instanceof Array\r\n                            && values.index !== '' && this.state.numErrors[values.index]\r\n                            && this.state.numErrors[values.index][i] &&\r\n                            <div className=\"alert alert-warning d-inline ml-1\">\r\n                                {this.state.numErrors[values.index][i]}\r\n                            </div>\r\n                        }\r\n                        {\r\n                            values.productNumErrors[i] &&\r\n                            <div className=\"alert alert-warning d-inline ml-1\">\r\n                                {\r\n                                    values.productNumErrors[i]\r\n                                }\r\n                                <i class=\"fa fa-close ml-3 pt-1\"\r\n                                    onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>\r\n                            </div>\r\n                        }\r\n                    </div>\r\n                )}\r\n            </fieldset>\r\n        </div>\r\n    \r\n)\r\n}"]},"metadata":{},"sourceType":"module"}