{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport '../myStyles/Style.css';\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\nimport Function from './Shared/Function';\n\nclass UserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePassword = () => {\n      this.setState({\n        changingpassword: this.state.changingpassword ? false : true\n      });\n    };\n\n    this.onFocus = event => {\n      console.log(\"on focus \");\n\n      if (event.target.autocomplete) {\n        event.target.autocomplete = \"whatever\";\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id || -1,\n      firstName: '',\n      lastName: '',\n      userName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      changingpassword: this.props.match.params.id > 0 ? false : true,\n      countries: null,\n      cities: null,\n      filteredcities: null,\n      countryId: null,\n      cityId: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"did mount user component\");\n    let userRole = this.getUserRole(); //let userId = AuthenticationService.getLoggedUerId();\n\n    /* console.log(\"component mount userRole  = \" + (userRole))\r\n     console.log(\"userRole !== 'ROLE_Admin'  = \" + (userRole !== 'ROLE_Admin'))\r\n     console.log(\"( this.state.id === -1)  = \" + (this.state.id === -1))\r\n     console.log(\"( this.state.id == -1)  = \" + (this.state.id == -1))\r\n    \r\n     console.log(\"this.state.id =\"+this.state.id)\r\n     console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + ((this.state.id === -1 && userRole !== 'ROLE_Admin')));*/\n    //console.log(\"(this.state.id == -1 && userRole === 'ROLE_Mol') || userRole === 'ROLE_Employee' =\" + ((this.state.id == -1 && userRole === 'ROLE_Mol') || userRole === 'ROLE_Employee'))\n\n    if (this.state.id == -1 && userRole === 'ROLE_Mol') {\n      //|| userRole === 'ROLE_Employee' ) {\n      return;\n    }\n\n    UserDataService.retrieve(this.state.id).then(response => {\n      //  console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        // userRole: userRole,\n        firstName: response.data.firstName || '',\n        lastName: response.data.lastName || '',\n        userName: response.data.userName || '',\n        email: response.data.email || '',\n        countries:\n        /*userRole === 'ROLE_Admin' */\n        response.data.countries || null,\n        cities:\n        /*userRole === 'ROLE_Admin' ?*/\n        response.data.cities || null,\n        filteredcities:\n        /*userRole === 'ROLE_Admin' ?*/\n        response.data.countryId ? this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities || null,\n        countryId:\n        /*userRole === 'ROLE_Admin' && response.data.countryId ? */\n        response.data.countryId || null,\n        cityId:\n        /*userRole === 'ROLE_Admin' && response.data.cityId ?*/\n        response.data.cityId + '' || ''\n      });\n    });\n  }\n\n  getUserRole() {\n    return AuthenticationService.getLoggedUerRole();\n  }\n\n  onSubmit(values, actions) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.userName,\n      email: values.email,\n      password: this.state.changingpassword ? values.password : null,\n      cityId:\n      /*this.getUserRole() === 'ROLE_Admin' ?*/\n      this.state.cities != null && values.newCity == null ? values.cityId : null,\n      newCity: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.newCity : null,\n      countryId: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.countryId : null,\n      targetDate: values.targetDate\n    }; // console.log(\"user to update = \" + JSON.stringify(user))\n\n    UserDataService.save(user).then(response => {\n      if (response.data.refreshToken) {\n        AuthenticationService.setRegister(response.data); //this.props.history.push('/home')\n      } //else\n      // this.props.history.push('/users')\n      //window.history.back();\n\n\n      if ((this.getUserRole() == 'ROLE_Admin' || this.getUserRole() == 'ROLE_Mol') && this.state.id != AuthenticationService.getLoggedUerId) this.props.history.push('/users');else this.props.history.push('/home');\n    }).catch(error => {\n      console.log(\"error = \" + error); //console.log(\"error.response.data = \" + JSON.stringify(error.response.data))\n      //let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\n      //  error.response.data.message ? error.response.data.message : error;\n\n      let msg = Function.getErrorMsg(error);\n      console.log(\"msg = \" + msg);\n      /*\"\" + error &&\r\n      // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n      //error.response.data :\r\n      error.response && error.response.data ?\r\n      error.response.data.errors ?\r\n          error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n              error.response.data.message : \r\n                      error : 'something went wrong !!!';*/\n\n      console.log('msg.indexOf(\"user name\") > -1 = ' + (msg.indexOf(\"user name\") > -1));\n      if (msg.indexOf(\"email\") > -1) actions.setErrors({\n        email: msg\n      });\n      if (msg.indexOf(\"user name\") > -1) actions.setErrors({\n        userName: msg\n      });\n      if (msg.indexOf(\"Password\") > -1) actions.setErrors({\n        Password: msg\n      });\n      this.showError(msg);\n    });\n  }\n\n  showError(msg) {\n    let time = 10;\n    this.setState({\n      errormsg: msg\n    });\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        this.setState(({\n          errormsg\n        }) => ({\n          errormsg: null\n        }));\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.userName) {\n      errors.userName = 'required field !!!';\n    } else if (values.userName.length < 4) {\n      errors.userName = 'Enter at least 4 Characters';\n    }\n\n    if (!values.email) {\n      errors.email = 'required field !!!';\n    } else if (values.email.length < 4) {\n      errors.email = 'Enter at least 4 Characters';\n    }\n\n    if (this.state.id === -1 || this.state.changingpassword) {\n      if (!values.password) {\n        errors.password = 'required field !!!';\n      } else if (values.password.length < 6) {\n        errors.password = 'Enter at least 6 Characters';\n      } else if (values.password != values.confirmpassword) {\n        errors.confirmpassword = 'password and confirm password don\\'t match';\n      }\n    } // if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\n\n\n    if (this.state.cities != null && this.getUserRole() != '' && (!values.cityId || values.cityId == 'undefined')) {\n      errors.cityId = 'required field !!!';\n    }\n\n    if (this.getUserRole == '' && (!values.cityId || values.cityId == 'undefined') && (!values.newCity || values.newCity == 'undefined')) {\n      let error = \"either choose city or write your city name if you can't find it !!!\";\n      errors.cityId = error;\n      errors.newCity = error;\n    }\n\n    if (values.newCity && (!!values.countryId || values.countryId == 'undefined')) {\n      errors.countryId = 'required field !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    // this.props.history.push('/users')\n    window.history.back();\n  }\n\n  filterCities(subs, cities, value) {\n    if (!cities) return null;\n    subs = [];\n\n    for (let i = 0; i < cities.length; i++) {\n      if (cities[i].filterBy == value) {\n        subs.push(cities[i]);\n      }\n    }\n\n    return subs;\n  }\n\n  render() {\n    console.log(\"rendering user\");\n    const userRole = this.getUserRole();\n    let {\n      id,\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      confirmpassword,\n\n      /* countries, cities, filteredcities, countryId,*/\n      cityId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: [\" \", userRole == '' ? \"register \" : this.state.id > 0 && this.state.id == AuthenticationService.getLoggedUerId() ? \"update profile\" : this.state.id > 0 ? \"Update User\" : \"Add New User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          userName,\n          email,\n          password,\n          confirmpassword,\n\n          /* countries, cities, filteredcities, countryId,*/\n          cityId\n        },\n        onSubmit: (values, actions) => this.onSubmit(values, actions),\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex flex-wrap\",\n          children: [this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            style: {\n              width: \"100%\"\n            },\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"id\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"first name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"firstName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"firstName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"lastName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"lastName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 269,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 265,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"user name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control \",\n                type: \"text\",\n                name: \"userName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"userName\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 278,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w100\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"email\",\n                name: \"email\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 284,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w-50 \",\n            children: [this.state.id > 0 && !this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-3 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 41\n            }, this), this.state.id > 0 && this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-3 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"leave password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 41\n            }, this), (this.state.id < 1 || this.state.changingpassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control \",\n                  type: \"password\",\n                  name: \"password\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 302,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"alert alert-warning \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"confirmpassword\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"confirmpassword\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 299,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w100\",\n            children: //userRole === 'ROLE_Admin' &&\n            this.state.countries && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"inline form-group pl-0 w50\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: values.addnewCity ? \"required-field\" : \"\",\n                children: \"Country\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"\",\n                items: this.state.countries //  value={values.countryId || ''}\n                ,\n                value: this.state.countryId || ''\n                /* onChange={(selected) => {\r\n                     setFieldValue(\"countryId\", selected.value);\r\n                       let subs = values.filteredcities;\r\n                     subs = this.filterCities(subs, values.cities, selected.value);\r\n                     // let sub = values.filteredInventoryNumbers.\r\n                     /*  subs = [];\r\n                       for (let i = 0; i < values.cities.length; i++) {\r\n                             if (values.cities[i].filterBy == selected.value) {\r\n                               subs.push(values.cities[i])\r\n                           }\r\n                       }*/\n                // setFieldValue(\"filteredcities\", subs);\n                //  }}*/\n                ,\n                onChange: selected => {\n                  let subs = this.state.filteredcities;\n                  subs = this.filterCities(subs, this.state.cities, selected.value); // let sub = values.filteredInventoryNumbers.\n\n                  /*  subs = [];\r\n                    for (let i = 0; i < values.cities.length; i++) {\r\n                              if (values.cities[i].filterBy == selected.value) {\r\n                            subs.push(values.cities[i])\r\n                        }\r\n                    }*/\n                  //setFieldValue(\"filteredcities\", subs);\n                  // setFieldValue(\"countryId\", selected.value);\n\n                  this.setState({\n                    countryId: selected.value,\n                    filteredcities: subs\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"countryId\",\n                component: \"div\",\n                className: \"alert alert-warning inline-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 368,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w100\",\n            children: [//userRole === 'ROLE_Admin' &&\n            !values.addnewCity && this.state.cities && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"inline form-group w50 \",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"city\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 383,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"\" // items={values.filteredcities || filteredcities || cities}\n                ,\n                items: this.state.filteredcities || this.state.cities // value={values.cityId || ''}\n                // onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\n                ,\n                value: values.cityId || '',\n                onChange: selected => setFieldValue(\"cityId\", selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"cityId\",\n                component: \"div\",\n                className: \"alert alert-warning inline-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 381,\n              columnNumber: 37\n            }, this), values.addnewCity && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"inline form-group w50\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"city name\", /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"60%\"\n                  },\n                  children: [\"if you can't find your city, please write it down,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 403,\n                    columnNumber: 99\n                  }, this), \"you can relate to any major city near you as long as it's in the same time zone\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 404,\n                    columnNumber: 128\n                  }, this), \"to make your calculations accurate, Thank you.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 405,\n                    columnNumber: 95\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 402,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 401,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control \",\n                type: \"text\",\n                name: \"newCity\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"newCity\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 376,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w100\",\n            children: [this.state.cities && userRole == '' && !values.addnewCity && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn\",\n              type: \"button\",\n              onClick: () => setFieldValue(\"addnewCity\", true),\n              children: \"new city\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 45\n            }, this), this.state.cities && userRole == '' && values.addnewCity && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn\",\n              type: \"button\",\n              onClick: () => {\n                setFieldValue(\"addnewCity\", false);\n                setFieldValue(\"newCity\", null);\n              },\n              children: \"back\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 421,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn p-x-5\",\n              type: \"submit\",\n              disabled: !dirty,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 428,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n              type: \"button\",\n              onClick: this.cancelForm,\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 427,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 239,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","AuthenticationService","CustomSelect","Function","UserComponent","constructor","props","changePassword","setState","changingpassword","state","onFocus","event","console","log","target","autocomplete","id","match","params","firstName","lastName","userName","email","password","confirmpassword","countries","cities","filteredcities","countryId","cityId","onSubmit","bind","validate","cancelForm","componentDidMount","userRole","getUserRole","retrieve","then","response","data","filterCities","getLoggedUerRole","values","actions","user","username","newCity","targetDate","save","refreshToken","setRegister","getLoggedUerId","history","push","catch","error","msg","getErrorMsg","indexOf","setErrors","Password","showError","time","errormsg","myInterval","setInterval","clearInterval","componentWillUnmount","errors","length","window","back","subs","value","i","filterBy","render","setFieldValue","dirty","width","addnewCity","selected","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserDataService from '../service/UserDataService';\r\nimport '../myStyles/Style.css';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport Function from './Shared/Function'\r\n\r\n\r\nclass UserComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id || -1,\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            changingpassword: this.props.match.params.id > 0 ? false : true,\r\n            countries: null,\r\n            cities: null,\r\n            filteredcities: null,\r\n            countryId: null,\r\n            cityId:''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"did mount user component\");\r\n        let userRole = this.getUserRole();\r\n        //let userId = AuthenticationService.getLoggedUerId();\r\n       /* console.log(\"component mount userRole  = \" + (userRole))\r\n        console.log(\"userRole !== 'ROLE_Admin'  = \" + (userRole !== 'ROLE_Admin'))\r\n        console.log(\"( this.state.id === -1)  = \" + (this.state.id === -1))\r\n        console.log(\"( this.state.id == -1)  = \" + (this.state.id == -1))\r\n       \r\n        console.log(\"this.state.id =\"+this.state.id)\r\n        console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + ((this.state.id === -1 && userRole !== 'ROLE_Admin')));*/\r\n        //console.log(\"(this.state.id == -1 && userRole === 'ROLE_Mol') || userRole === 'ROLE_Employee' =\" + ((this.state.id == -1 && userRole === 'ROLE_Mol') || userRole === 'ROLE_Employee'))\r\n        if ((this.state.id == -1 && userRole === 'ROLE_Mol')) { //|| userRole === 'ROLE_Employee' ) {\r\n            return\r\n        }\r\n        UserDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n              //  console.log(\"response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                   // userRole: userRole,\r\n                    firstName: response.data.firstName||'',\r\n                    lastName: response.data.lastName||'',\r\n                    userName: response.data.userName||'',\r\n                    email: response.data.email||'',\r\n                    countries: /*userRole === 'ROLE_Admin' */ response.data.countries || null,\r\n                    cities: /*userRole === 'ROLE_Admin' ?*/ response.data.cities || null,\r\n                    filteredcities: /*userRole === 'ROLE_Admin' ?*/ response.data.countryId ? \r\n                        this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities || null,\r\n                    countryId: /*userRole === 'ROLE_Admin' && response.data.countryId ? */response.data.countryId || null,\r\n                    cityId: /*userRole === 'ROLE_Admin' && response.data.cityId ?*/ response.data.cityId+'' || ''\r\n                })\r\n            })\r\n    }\r\n\r\n    getUserRole() {\r\n        return AuthenticationService.getLoggedUerRole();\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.userName,\r\n            email: values.email,\r\n            password: this.state.changingpassword ? values.password : null,\r\n            cityId: /*this.getUserRole() === 'ROLE_Admin' ?*/this.state.cities != null && values.newCity == null ? values.cityId : null,\r\n            newCity: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.newCity : null,\r\n            countryId: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.countryId : null,\r\n\r\n            targetDate: values.targetDate\r\n        }\r\n       // console.log(\"user to update = \" + JSON.stringify(user))\r\n        UserDataService.save(user)\r\n            .then((response) => {\r\n                if (response.data.refreshToken) {\r\n                    AuthenticationService.setRegister(response.data);\r\n                    //this.props.history.push('/home')\r\n                }//else\r\n                 // this.props.history.push('/users')\r\n                //window.history.back();\r\n\r\n                if ((this.getUserRole() == 'ROLE_Admin' || this.getUserRole() == 'ROLE_Mol') && this.state.id != AuthenticationService.getLoggedUerId)\r\n                    this.props.history.push('/users');\r\n                else this.props.history.push('/home')\r\n\r\n                \r\n            \r\n    })\r\n            .catch(error => {\r\n                console.log(\"error = \" + error);\r\n                //console.log(\"error.response.data = \" + JSON.stringify(error.response.data))\r\n                //let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                //  error.response.data.message ? error.response.data.message : error;\r\n                let msg = Function.getErrorMsg(error);\r\n                console.log(\"msg = \" + msg);\r\n                    /*\"\" + error &&\r\n                    // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n                    //error.response.data :\r\n                    error.response && error.response.data ?\r\n                    error.response.data.errors ?\r\n                        error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                            error.response.data.message : \r\n                                    error : 'something went wrong !!!';*/\r\n                console.log('msg.indexOf(\"user name\") > -1 = ' + (msg.indexOf(\"user name\") > -1));\r\n\r\n                if (msg.indexOf(\"email\") > -1)\r\n                    actions.setErrors({ email: msg })\r\n                if (msg.indexOf(\"user name\") > -1)\r\n                    actions.setErrors({ userName: msg })\r\n                if (msg.indexOf(\"Password\") > -1)\r\n                    actions.setErrors({ Password: msg })\r\n                this.showError(msg);\r\n                \r\n               \r\n    })\r\n    }\r\n\r\n   \r\n    showError(msg) {\r\n        let time = 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })\r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                this.setState(({ errormsg }) => ({\r\n                    errormsg: null\r\n                }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'required field !!!'\r\n        } else if (values.userName.length < 4) {\r\n            errors.userName = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (!values.email) {\r\n            errors.email = 'required field !!!'\r\n        } else if (values.email.length < 4) {\r\n            errors.email = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (this.state.id === -1 || this.state.changingpassword) {\r\n            if (!values.password) {\r\n                errors.password = 'required field !!!'\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Enter at least 6 Characters'\r\n            } else if (values.password != values.confirmpassword) {\r\n                errors.confirmpassword='password and confirm password don\\'t match'\r\n            }\r\n        }\r\n\r\n        // if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\r\n        if (this.state.cities != null && this.getUserRole() != '' && (!values.cityId || values.cityId == 'undefined')) {\r\n            errors.cityId = 'required field !!!'           \r\n        }\r\n\r\n        if (this.getUserRole == '' && (!values.cityId || values.cityId == 'undefined') && (!values.newCity || values.newCity == 'undefined')) {\r\n            let error = \"either choose city or write your city name if you can't find it !!!\";\r\n            errors.cityId = error;\r\n            errors.newCity = error;\r\n        }\r\n\r\n        if (values.newCity && (!!values.countryId || values.countryId == 'undefined')) {\r\n            errors.countryId = 'required field !!!'\r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n   cancelForm() {\r\n      // this.props.history.push('/users')\r\n       window.history.back();\r\n    }\r\n\r\n    changePassword = () => {\r\n        this.setState({\r\n            changingpassword: this.state.changingpassword ? false : true\r\n        })\r\n    }\r\n\r\n    onFocus = event => {\r\n        console.log(\"on focus \");\r\n\r\n        if (event.target.autocomplete) {\r\n            event.target.autocomplete = \"whatever\";\r\n        }\r\n\r\n    }\r\n\r\n    filterCities(subs, cities, value) {\r\n\r\n        if (!cities) return null;\r\n        subs = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n\r\n            if (cities[i].filterBy == value) {\r\n                subs.push(cities[i])\r\n            }\r\n        }\r\n\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n        console.log(\"rendering user\")\r\n        const userRole = this.getUserRole();\r\n        let { id, firstName, lastName, userName, email, password, confirmpassword,/* countries, cities, filteredcities, countryId,*/ cityId } = this.state\r\n       \r\n        return (\r\n            <div className=\"container pt-5\">\r\n                <h3 className=\"mb-3\"> {\r\n                    userRole == '' ? \"register \" :\r\n                    this.state.id > 0 && this.state.id == AuthenticationService.getLoggedUerId() ?  \"update profile\" :\r\n                    this.state.id > 0 ? \"Update User\" : \"Add New User\" }</h3>\r\n                <Formik\r\n                    initialValues={{ id, firstName, lastName, userName, email, password, confirmpassword,/* countries, cities, filteredcities, countryId,*/ cityId }}\r\n                    onSubmit={(values, actions) => this.onSubmit(values, actions)}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                        ({ setFieldValue, values, dirty }) => (\r\n                            <Form className=\"d-flex flex-wrap\">\r\n                                {this.state.errormsg && <div className=\"alert alert-warning\" style={{ width: \"100%\" }}>{this.state.errormsg}</div>}\r\n                                {//console.log(\"values = \" + JSON.stringify(values))\r\n                                }\r\n\r\n                                <div className=\"inline w50\">\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                   \r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label>first name</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"firstName\"\r\n                                        autoComplete=\"new-password\"/>\r\n                                        <ErrorMessage name=\"firstName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label>last name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"lastName\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"lastName\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label className=\"required-field\">user name</label>\r\n\r\n                                        <Field className=\"form-control \" type=\"text\" name=\"userName\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"userName\" component=\"div\"\r\n                                            className=\"alert alert-warning \" />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className=\"form-group w100\">\r\n                                        <label className=\"required-field\">email</label>\r\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"email\" component=\"div\"\r\n                                            className=\"alert alert-warning \" />\r\n                                    </fieldset>\r\n                                   \r\n                                </div>\r\n                                <div className=\"inline w-50 \">\r\n                                    \r\n                                   \r\n                                    {(this.state.id > 0 && !this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-3 mb-3  d-flex\" onClick={this.changePassword}>change password</button>}\r\n                                    {(this.state.id > 0 && this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-3 mb-3  d-flex\" onClick={this.changePassword}>leave password</button>}\r\n                                    {(this.state.id < 1 || this.state.changingpassword) &&\r\n                                        <div>\r\n                                            <fieldset className=\"form-group w90\">\r\n                                                <label className=\"required-field\">password</label>\r\n                                                <Field className=\"form-control \" type=\"password\" name=\"password\"\r\n                                                    autoComplete=\"new-password\" />\r\n                                                <ErrorMessage name=\"password\" component=\"div\"\r\n                                                    className=\"alert alert-warning \" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group w90\">\r\n                                                <label className=\"required-field\">confirm password</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"confirmpassword\"\r\n                                                    autoComplete=\"new-password\" />\r\n                                                <ErrorMessage name=\"confirmpassword\" component=\"div\"\r\n                                                    className=\"alert alert-warning\" />\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    }\r\n                                   \r\n                               \r\n                                </div>\r\n                                <div className=\"w100\">\r\n                                {//userRole === 'ROLE_Admin' &&\r\n                                    this.state.countries &&\r\n\r\n                                    <fieldset className=\"inline form-group pl-0 w50\">\r\n\r\n                                            <label className={values.addnewCity ? \"required-field\" : \"\"}>Country&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"\"}\r\n                                            items={this.state.countries}\r\n                                            //  value={values.countryId || ''}\r\n                                            value={this.state.countryId || ''}\r\n                                            /* onChange={(selected) => {\r\n                                                 setFieldValue(\"countryId\", selected.value);\r\n\r\n                                                 let subs = values.filteredcities;\r\n                                                 subs = this.filterCities(subs, values.cities, selected.value);\r\n                                                 // let sub = values.filteredInventoryNumbers.\r\n                                                 /*  subs = [];\r\n                                                   for (let i = 0; i < values.cities.length; i++) {\r\n\r\n                                                       if (values.cities[i].filterBy == selected.value) {\r\n                                                           subs.push(values.cities[i])\r\n                                                       }\r\n                                                   }*/\r\n                                            // setFieldValue(\"filteredcities\", subs);\r\n                                            //  }}*/\r\n                                            onChange={(selected) => {\r\n\r\n\r\n                                                let subs = this.state.filteredcities;\r\n                                                subs = this.filterCities(subs, this.state.cities, selected.value);\r\n                                                // let sub = values.filteredInventoryNumbers.\r\n                                                /*  subs = [];\r\n                                                  for (let i = 0; i < values.cities.length; i++) {\r\n    \r\n                                                      if (values.cities[i].filterBy == selected.value) {\r\n                                                          subs.push(values.cities[i])\r\n                                                      }\r\n                                                  }*/\r\n                                                //setFieldValue(\"filteredcities\", subs);\r\n                                                // setFieldValue(\"countryId\", selected.value);\r\n                                                this.setState({\r\n                                                    countryId: selected.value,\r\n                                                    filteredcities: subs\r\n\r\n                                                })\r\n                                            }}\r\n                                            />\r\n                                            <ErrorMessage name=\"countryId\" component=\"div\"\r\n                                                className=\"alert alert-warning inline-4\" />\r\n\r\n                                    </fieldset>\r\n\r\n                                }\r\n\r\n                                </div>\r\n                                <div className=\"w100\">\r\n                                        {//userRole === 'ROLE_Admin' &&\r\n                                           ! values.addnewCity &&\r\n                                    this.state.cities &&\r\n\r\n                                    <fieldset className=\"inline form-group w50 \">\r\n\r\n                                        <label className=\"required-field\">city&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"\"}\r\n                                            // items={values.filteredcities || filteredcities || cities}\r\n                                            items={this.state.filteredcities || this.state.cities}\r\n                                            // value={values.cityId || ''}\r\n                                            // onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                            value={values.cityId || ''}\r\n                                            onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                        />\r\n                                        <ErrorMessage name=\"cityId\" component=\"div\"\r\n                                            className=\"alert alert-warning inline-4\" />\r\n\r\n                                    </fieldset>\r\n\r\n                                        }\r\n                                        {values.addnewCity &&\r\n                                            <fieldset className=\"inline form-group w50\">\r\n                                        <label>city name\r\n                                                <p style={{ fontSize: \"60%\" }}>\r\n                                                if you can't find your city, please write it down,<br />\r\n                                                you can relate to any major city near you as long as it's in the same time zone<br />\r\n                                                to make your calculations accurate, Thank you.<br />\r\n                                                 \r\n                                                    </p></label>\r\n\r\n                                                <Field className=\"form-control \" type=\"text\" name=\"newCity\"\r\n                                                    autoComplete=\"new-password\" />\r\n                                                <ErrorMessage name=\"newCity\" component=\"div\"\r\n                                                    className=\"alert alert-warning \" />\r\n                                            </fieldset>\r\n                                    }\r\n                                </div>\r\n                                <div className=\"w100\">\r\n\r\n                                        {this.state.cities && userRole == '' && !values.addnewCity &&\r\n                                            <button className=\"btn btn-mybtn\" type=\"button\" onClick={() => setFieldValue(\"addnewCity\", true)}>new city</button>}\r\n                                        {this.state.cities && userRole == '' && values.addnewCity &&\r\n                                        <button className=\"btn btn-mybtn\" type=\"button\"\r\n                                        onClick={() => { setFieldValue(\"addnewCity\", false); setFieldValue(\"newCity\", null)}}>back</button>}\r\n                               \r\n                                    </div>\r\n                               \r\n\r\n                                <fieldset className=\"form-group mt-5\">\r\n                                    <button className=\"btn btn-mybtn p-x-5\" type=\"submit\" disabled={!dirty}>Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                </fieldset>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}