{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\UserCategoryFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\n\nclass UserCategoryFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoryId: props.categoryId,\n      names: props.names,\n      filteredNames: this.filter([], props.names, props.productType),\n      productType: props.productType,\n      productTypes: props.productTypes,\n      amortizationPercentMoreThan: props.amortizationPercentMoreThan,\n      amortizationPercentLessThan: props.amortizationPercentLessThan,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  onSubmit(values) {\n    console.log(\"values = \" + JSON.stringify(values));\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      if (!key.endsWith(\"s\") && value && value != 'undefined') {\n        newPath += prefix + '.' + key + '=' + value + '&';\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    console.log(\"new path = \" + newPath);\n    newPath = path + '?' + newPath;\n    window.location.href = newPath;\n  }\n\n  resetForm() {\n    window.location.href = window.location.pathname;\n  }\n\n  filter(subs, names, value) {\n    subs = [];\n    if (value == null) subs = names;else {\n      for (let i = 0; i < names.length; i++) {\n        if (names[i].filterBy == value) {\n          subs.push(names[i]);\n        }\n      }\n    }\n    return subs;\n  }\n\n  render() {\n    //console.log(\"rendering filter props.timeline = \" + this.props.timeline.show);\n    let {\n      categoryId,\n      names,\n      productType,\n      productTypes,\n      filteredNames,\n      amortizationPercentMoreThan,\n      amortizationPercentLessThan\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        categoryId,\n        names,\n        productType,\n        productTypes,\n        filteredNames,\n        amortizationPercentMoreThan,\n        amortizationPercentLessThan\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2 mx-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this), productTypes && productTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-2\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value,\n                checked: type.name === values.productType,\n                onChange: value => {\n                  // console.log('value of checked = ' + value.target.value);\n                  let subs = values.filteredNames;\n                  subs = this.filter(subs, values.names, value.target.value);\n                  setFieldValue(\"productType\", value);\n                  setFieldValue(\"filteredNames\", subs);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 45\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"category\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: values.filteredNames || filteredNames || names,\n              value: values.categoryId || '',\n              onChange: selected => setFieldValue(\"categoryId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"amortization\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"more than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-50px\",\n                type: \"number\",\n                min: \"0\",\n                max: values.amortizationPercentLessThan || 100,\n                name: \"amortizationPercentMoreThan\",\n                disabled: values.productType == 'STA',\n                value: values.productType == 'STA' ? '' : values.amortizationPercentMoreThan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this), \"\\xA0%\", /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-2 mb-1 fw-s\",\n                children: \"less than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-50px\",\n                type: \"number\",\n                min: values.amortizationPercentMoreThan || 0,\n                max: \"100\",\n                name: \"amortizationPercentLessThan\",\n                disabled: values.productType == 'STA',\n                value: values.productType == 'STA' ? '' : values.amortizationPercentLessThan\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this), \"\\xA0%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserCategoryFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/UserCategoryFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","UserCategoryFilter","constructor","props","state","categoryId","names","filteredNames","filter","productType","productTypes","amortizationPercentMoreThan","amortizationPercentLessThan","prefix","onSubmit","bind","resetForm","values","console","log","JSON","stringify","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","href","subs","filterBy","push","render","setFieldValue","type","name","target","selected","borderRadius"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css';\r\n\r\nclass UserCategoryFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            categoryId: props.categoryId,\r\n            names: props.names,\r\n            filteredNames: this.filter([], props.names, props.productType),\r\n            productType: props.productType,\r\n            productTypes: props.productTypes,\r\n            amortizationPercentMoreThan: props.amortizationPercentMoreThan,\r\n            amortizationPercentLessThan: props.amortizationPercentLessThan,\r\n            prefix: props.prefix,\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log(\"values = \" + JSON.stringify(values));\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n\r\n            if (!key.endsWith(\"s\") && value && value != 'undefined') {\r\n                newPath += prefix + '.' + key + '=' + value + '&'\r\n            }\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        console.log(\"new path = \" + newPath);\r\n        newPath = path + '?' + newPath;\r\n        window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n        window.location.href = window.location.pathname;\r\n\r\n    }\r\n\r\n    filter(subs, names, value) {\r\n        subs = [];\r\n        if (value == null) subs = names;\r\n        else {\r\n            for (let i = 0; i < names.length; i++) {\r\n\r\n                if (names[i].filterBy == value) {\r\n                    subs.push(names[i])\r\n                }\r\n            }\r\n        }\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"rendering filter props.timeline = \" + this.props.timeline.show);\r\n\r\n        let { categoryId, names, productType, productTypes, filteredNames, amortizationPercentMoreThan, amortizationPercentLessThan } = this.state\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{ categoryId, names, productType, productTypes, filteredNames, amortizationPercentMoreThan, amortizationPercentLessThan }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n\r\n                            <div className=\"inline px-2 mx-2\">\r\n                                <label>product type :</label>\r\n                                {\r\n                                    productTypes && productTypes.map((type) =>\r\n                                        <div className=\"inline\">\r\n                                            <Field\r\n                                                className=\"mx-2\" type=\"checkbox\" name=\"productType\"\r\n                                                value={type.value} checked={type.name === values.productType}\r\n                                                onChange={(value) => {\r\n                                                    // console.log('value of checked = ' + value.target.value);\r\n\r\n                                                    let subs = values.filteredNames;\r\n                                                    subs = this.filter(subs, values.names, value.target.value);\r\n\r\n                                                    setFieldValue(\"productType\", value);\r\n                                                    setFieldValue(\"filteredNames\", subs);\r\n                                                }}\r\n                                            />\r\n                                            {type.name}\r\n                                        </div>\r\n                                    )\r\n                                }\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >category&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={values.filteredNames || filteredNames || names}\r\n                                    value={values.categoryId || ''}\r\n                                    onChange={(selected) => setFieldValue(\"categoryId\", selected.value)}\r\n                                />\r\n                            </div>\r\n\r\n                           \r\n                                <div className=\"inline\">\r\n                                    <label className=\"mb-1\">amortization&nbsp;</label>\r\n                                    <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                        <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-50px\" type=\"number\" min=\"0\" max={values.amortizationPercentLessThan || 100}\r\n                                            name=\"amortizationPercentMoreThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentMoreThan} />&nbsp;%\r\n                                    <label className=\"pl-2 mb-1 fw-s\">less than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-50px\" type=\"number\" min={values.amortizationPercentMoreThan || 0} max=\"100\"\r\n                                            name=\"amortizationPercentLessThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentLessThan} />&nbsp;%\r\n                                        </div>\r\n                                </div>\r\n                           \r\n\r\n\r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"button\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCategoryFilter"]},"metadata":{},"sourceType":"module"}