{"ast":null,"code":"class Functions {\n  convertDate(date) {\n    // to string \n    if (!date || date == 'undefined') return null;\n    date = new Date(date);\n    date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n    date = date.toISOString();\n    date = date.substring(0, date.indexOf('T'));\n    return date;\n  }\n\n  getRandom() {\n    let uuid = ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c => (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16));\n    return uuid;\n  }\n\n}\n\nexport default new Functions();","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/Functions.js"],"names":["Functions","convertDate","date","Date","setHours","getHours","getTimezoneOffset","toISOString","substring","indexOf","getRandom","uuid","replace","c","crypto","getRandomValues","Uint8Array","toString"],"mappings":"AACA,MAAMA,SAAN,CAAgB;AAEZC,EAAAA,WAAW,CAACC,IAAD,EAAO;AAAE;AAEhB,QAAI,CAACA,IAAD,IAASA,IAAI,IAAI,WAArB,EAAkC,OAAO,IAAP;AAE9BA,IAAAA,IAAI,GAAI,IAAIC,IAAJ,CAASD,IAAT,CAAR;AACAA,IAAAA,IAAI,CAACE,QAAL,CAAcF,IAAI,CAACG,QAAL,KAAkBH,IAAI,CAACI,iBAAL,KAA2B,EAA3D;AACAJ,IAAAA,IAAI,GAAGA,IAAI,CAACK,WAAL,EAAP;AACAL,IAAAA,IAAI,GAAGA,IAAI,CAACM,SAAL,CAAe,CAAf,EAAkBN,IAAI,CAACO,OAAL,CAAa,GAAb,CAAlB,CAAP;AAEA,WAAOP,IAAP;AACP;;AAEDQ,EAAAA,SAAS,GAAG;AACL,QAAIC,IAAI,GAAG,CAAC,CAAC,GAAD,IAAQ,CAAC,GAAT,GAAe,CAAC,GAAhB,GAAsB,CAAC,GAAvB,GAA6B,CAAC,IAA/B,EAAqCC,OAArC,CAA6C,QAA7C,EAAuDC,CAAC,IAC9D,CAACA,CAAC,GAAGC,MAAM,CAACC,eAAP,CAAuB,IAAIC,UAAJ,CAAe,CAAf,CAAvB,EAA0C,CAA1C,IAA+C,MAAMH,CAAC,GAAG,CAA9D,EAAiEI,QAAjE,CAA0E,EAA1E,CADM,CAAX;AAIH,WAAON,IAAP;AACH;;AApBW;;AAyBhB,eAAe,IAAIX,SAAJ,EAAf","sourcesContent":["\r\nclass Functions {\r\n\r\n    convertDate(date) { // to string \r\n\r\n        if (!date || date == 'undefined') return null;\r\n\r\n            date = (new Date(date));\r\n            date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n\r\n            return date;       \r\n    }\r\n\r\n    getRandom() {       \r\n           let uuid = ([1e7] + -1e3 + -4e3 + -8e3 + -1e11).replace(/[018]/g, c =>\r\n                (c ^ crypto.getRandomValues(new Uint8Array(1))[0] & 15 >> c / 4).toString(16)\r\n        );\r\n\r\n        return uuid;\r\n    }\r\n                   \r\n\r\n}\r\n\r\nexport default new Functions()"]},"metadata":{},"sourceType":"module"}