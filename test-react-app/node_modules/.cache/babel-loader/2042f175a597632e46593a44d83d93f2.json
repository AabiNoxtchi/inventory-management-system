{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date,\n        suppliers: response.data.suppliers,\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values) {\n    console.log('in onsubmitn');\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      //(values.supplierId.length > 1 ? values.supplierId : null),\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    DeliveryDataService.save(item).then(response => {\n      console.log('response = ' + JSON.stringify(response.data));\n      this.props.history.push('/deliveries');\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id > 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    this.props.history.push('/deliveries');\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: ''\n    };\n    let deleteddds = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  onChange: date => setFieldValue(\"date\", date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"product :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"d-inline-block inline-2\",\n                items: products,\n                value: values.ddEditVM.productId,\n                onChange: selected => {\n                  // let ddVM = values.ddEditVM;\n                  // ddVM.productId = selected.value;\n                  // ddVM.productName = selected.label;\n                  // setFieldValue(\"ddEditVM\", ddVM);\n                  setFieldValue(\"ddEditVM.productName\".selected.label);\n                  setFieldValue(\"ddEditVM.productId\".selected.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-flex\",\n                children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto pr-3 pt-1\",\n                  onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline px-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"quantity :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control d-inline p-1 inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                name: \"ddEditVM.quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 41\n              }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-flex\",\n                children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto pr-3 pt-1\",\n                  onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline px-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"pricePerOne :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control d-inline p-1 inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                name: \"ddEditVM.pricePerOne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 41\n              }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-flex\",\n                children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto pr-3 pt-1\",\n                  onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn mr-1\",\n                type: \"button\",\n                onClick: () => {\n                  console.log(\"values.index = \" + values.index);\n                  console.log(\"values.index !== '' = \" + (values.index !== ''));\n                  console.log(\"values.index === '' = \" + (values.index === ''));\n                  let iserror = false;\n\n                  if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                    setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                    iserror = true;\n                  } else {\n                    //if (values.index != ''){\n                    values.deliveryDetailEditVMs.map((x, y) => {\n                      // console.log(\"x.productName = \" + x.productName);\n                      //console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\n                      console.log(\"y = \" + y);\n\n                      if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                        iserror = true;\n                        let ddErrorName = values.ddEditVMerror.name;\n                        ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                        setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                      }\n                    });\n                  }\n\n                  if (values.ddEditVM.pricePerOne == '') {\n                    setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  if (values.ddEditVM.quantity == '') {\n                    setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  console.log(\"iserror = \" + iserror);\n\n                  if (!iserror) {\n                    if (values.index === '') {\n                      let list = values.deliveryDetailEditVMs;\n                      list.push(values.ddEditVM);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    } else {\n                      let list = values.deliveryDetailEditVMs;\n                      list[values.index] = values.ddEditVM;\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    }\n                  }\n                },\n                children: values.index !== '' ? \"Update\" : \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete\",\n                type: \"button\",\n                onClick: () => {\n                  let VM = values.ddEditVM;\n                  VM = {\n                    id: '',\n                    productId: 'undefined',\n                    productName: '',\n                    quantity: '',\n                    pricePerOne: ''\n                  };\n                  setFieldValue(\"ddEditVM\", VM);\n                  setFieldValue(\"index\", '');\n                  setFieldValue(\"ddEditVMerror\", {});\n                },\n                children: \"reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border x-Table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 268,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Unit Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '140px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 45\n              }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(dd.pricePerOne)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 277,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      console.log(\"index = \" + index); // let vm = dd;\n\n                      setFieldValue(\"index\", index);\n                      setFieldValue(\"ddEditVM\", dd);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.deliveryDetailEditVMs;\n                      /*list.push(values.ddEditVM);*/\n\n                      list.splice(index, 1);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                      console.log(\"dd.id = \" + dd.id);\n\n                      if (dd.id > 0) {\n                        let deleted = values.deleteddds;\n                        deleted.push(dd.id);\n                        setFieldValue(\"deleteddds\", deleted);\n                        console.log(\"values.deleteddds = \" + deleteddds);\n                      }\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 310,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 311,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","state","id","match","params","number","date","supplierId","suppliers","deliveryDetailEditVMs","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","values","console","log","item","deletedDetailsIds","deleteddds","targetDate","save","JSON","stringify","history","push","errors","length","render","ddEditVM","productId","productName","quantity","pricePerOne","setFieldValue","Date","value","selected","label","name","iserror","map","x","y","ddErrorName","list","VM","width","dd","Intl","NumberFormat","style","currency","maximumFractionDigits","format","splice","deleted"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAOC,mBAAP,MAAgC,gCAAhC;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;;AAEA,MAAMC,iBAAN,SAAgCR,SAAhC,CAA0C;AACtCS,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SA2EnBC,YA3EmB,GA2EJ,MAAM;AACjB,WAAKC,QAAL,CAAc;AAAEC,QAAAA,aAAa,EAAE;AAAjB,OAAd;AACH,KA7EkB;;AAEf,SAAKC,KAAL,GAAa;AACTC,MAAAA,EAAE,EAAE,KAAKL,KAAL,CAAWM,KAAX,CAAiBC,MAAjB,CAAwBF,EADnB;AAETG,MAAAA,MAAM,EAAE,EAFC;AAGTC,MAAAA,IAAI,EAAE,EAHG;AAITC,MAAAA,UAAU,EAAE,EAJH;AAKTC,MAAAA,SAAS,EAAE,EALF;AAMTC,MAAAA,qBAAqB,EAAE,EANd;AAOTC,MAAAA,QAAQ,EAAE,EAPD;AAQTC,MAAAA,KAAK,EAAE,EARE;AASTX,MAAAA,aAAa,EAAE;AATN,KAAb;AAWA,SAAKY,QAAL,GAAgB,KAAKA,QAAL,CAAcC,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKC,QAAL,GAAgB,KAAKA,QAAL,CAAcD,IAAd,CAAmB,IAAnB,CAAhB;AACA,SAAKE,UAAL,GAAkB,KAAKA,UAAL,CAAgBF,IAAhB,CAAqB,IAArB,CAAlB;AACH;;AAEDG,EAAAA,iBAAiB,GAAG;AAEjBxB,IAAAA,mBAAmB,CAACyB,QAApB,CAA6B,KAAKhB,KAAL,CAAWC,EAAxC,EACMgB,IADN,CACWC,QAAQ,IAAI;AAEd,WAAKpB,QAAL,CAAc;AACVQ,QAAAA,UAAU,EAAEY,QAAQ,CAACC,IAAT,CAAcb,UAAd,IAA4B,EAD9B;AAEVF,QAAAA,MAAM,EAAEc,QAAQ,CAACC,IAAT,CAAcf,MAFZ;AAGVC,QAAAA,IAAI,EAAEa,QAAQ,CAACC,IAAT,CAAcd,IAHV;AAIVE,QAAAA,SAAS,EAAEW,QAAQ,CAACC,IAAT,CAAcZ,SAJf;AAKVC,QAAAA,qBAAqB,EAAEU,QAAQ,CAACC,IAAT,CAAcX,qBAAd,IAAuC,EALpD;AAMVC,QAAAA,QAAQ,EAAES,QAAQ,CAACC,IAAT,CAAcV,QAAd,IAA0B;AAN1B,OAAd;AAQH,KAXN;AAYF;;AAEDE,EAAAA,QAAQ,CAACS,MAAD,EAAS;AACbC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,QAAIC,IAAI,GAAG;AACPtB,MAAAA,EAAE,EAAE,KAAKD,KAAL,CAAWC,EADR;AAEPI,MAAAA,IAAI,EAAEe,MAAM,CAACf,IAFN;AAGPD,MAAAA,MAAM,EAACgB,MAAM,CAAChB,MAHP;AAIPE,MAAAA,UAAU,EAAEc,MAAM,CAACd,UAJZ;AAIuB;AAC9BE,MAAAA,qBAAqB,EAAEY,MAAM,CAACZ,qBALvB;AAMPgB,MAAAA,iBAAiB,EAAEJ,MAAM,CAACK,UANnB;AAOPC,MAAAA,UAAU,EAAEN,MAAM,CAACM;AAPZ,KAAX;AAUAnC,IAAAA,mBAAmB,CAACoC,IAApB,CAAyBJ,IAAzB,EACKN,IADL,CACWC,QAAD,IAAc;AAChBG,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBM,IAAI,CAACC,SAAL,CAAeX,QAAQ,CAACC,IAAxB,CAA5B;AACA,WAAKvB,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACX,KAJG;AAKH;;AAEDlB,EAAAA,QAAQ,CAACO,MAAD,EAAS;AAEb,QAAIY,MAAM,GAAG,EAAb;;AACA,QAAI,CAACZ,MAAM,CAACf,IAAZ,EAAkB;AACd2B,MAAAA,MAAM,CAAC3B,IAAP,GAAc,yBAAd;AACH;;AAED,QAAI,KAAKL,KAAL,CAAWC,EAAX,GAAgB,CAAhB,KAAsB,CAACmB,MAAM,CAACd,UAAR,IAAsBc,MAAM,CAACd,UAAP,IAAqB,WAAjE,CAAJ,EAAmF;AAC/E0B,MAAAA,MAAM,CAAC1B,UAAP,GAAoB,oBAApB;AACH;;AAED,QAAIc,MAAM,CAACZ,qBAAP,CAA6ByB,MAA7B,GAAsC,CAA1C,EAA6C;AACzCD,MAAAA,MAAM,CAACxB,qBAAP,GAA+B,iCAA/B;AACH;;AAED,WAAOwB,MAAP;AACH;;AAEDlB,EAAAA,UAAU,GAAG;AACT,SAAKlB,KAAL,CAAWkC,OAAX,CAAmBC,IAAnB,CAAwB,aAAxB;AACH;;AAMDG,EAAAA,MAAM,GAAG;AAEL,QAAI;AAAEjC,MAAAA,EAAF;AAAMG,MAAAA,MAAN;AAAcC,MAAAA,IAAd;AAAoBC,MAAAA,UAApB;AAAgCC,MAAAA,SAAhC;AAA2CC,MAAAA,qBAA3C;AAAkEC,MAAAA,QAAlE;AAA4EC,MAAAA,KAA5E;AAAmFX,MAAAA;AAAnF,QAAoG,KAAKC,KAA7G;AACA,QAAImC,QAAQ,GAAG;AAAElC,MAAAA,EAAE,EAAE,EAAN;AAAUmC,MAAAA,SAAS,EAAE,EAArB;AAAyBC,MAAAA,WAAW,EAAE,EAAtC;AAA0CC,MAAAA,QAAQ,EAAE,EAApD;AAAwDC,MAAAA,WAAW,EAAE;AAArE,KAAf;AACA,QAAId,UAAU,GAAG,EAAjB;AACA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,iBACK,KAAKzB,KAAL,CAAWC,EAAX,GAAgB,CAAhB,gBAAoB;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAApB,gBAAiE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADtE,eAEI,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AACXA,UAAAA,EADW;AACPG,UAAAA,MADO;AACCC,UAAAA,IADD;AACOC,UAAAA,UADP;AACmBC,UAAAA,SADnB;AAC8BC,UAAAA,qBAD9B;AACqDC,UAAAA,QADrD;AAC+DC,UAAAA,KAD/D;AACsEX,UAAAA,aADtE;AACqFoC,UAAAA,QADrF;AAC+FV,UAAAA;AAD/F,SADnB;AAII,QAAA,QAAQ,EAAE,KAAKd,QAJnB;AAKI,QAAA,gBAAgB,EAAE,KALtB;AAMI,QAAA,cAAc,EAAE,KANpB;AAOI,QAAA,QAAQ,EAAE,KAAKE,QAPnB;AAQI,QAAA,kBAAkB,EAAE,IARxB;AAAA,kBAWQ,CAAC;AAAE2B,UAAAA,aAAF;AAAiBpB,UAAAA;AAAjB,SAAD,kBACI,QAAC,IAAD;AAAA,kCACI,QAAC,KAAD;AAAO,YAAA,SAAS,EAAC,cAAjB;AAAgC,YAAA,IAAI,EAAC,MAArC;AAA4C,YAAA,IAAI,EAAC,IAAjD;AAAsD,YAAA,MAAM;AAA5D;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAU,YAAA,SAAS,EAAC,YAApB;AAAA,oCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI,QAAC,KAAD;AAAO,cAAA,SAAS,EAAC,mBAAjB;AAAqC,cAAA,IAAI,EAAC,MAA1C;AAAiD,cAAA,IAAI,EAAC,QAAtD;AAA+D,cAAA,QAAQ;AAAvE;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAOI;AAAU,YAAA,SAAS,EAAC,wBAApB;AAAA,oCAEA;AAAU,cAAA,SAAS,EAAC,2BAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,uCACA,QAAC,UAAD;AACI,kBAAA,SAAS,EAAC,yBADd;AAEI,kBAAA,UAAU,EAAC,cAFf;AAGI,kBAAA,MAAM,EAAC,OAHX;AAII,kBAAA,QAAQ,EAAEA,MAAM,CAACf,IAAP,IAAe,IAAIoC,IAAJ,CAASrB,MAAM,CAACf,IAAhB,CAJ7B;AAKI,kBAAA,QAAQ,EAAEA,IAAI,IAAImC,aAAa,CAAC,MAAD,EAASnC,IAAT;AALnC;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAWQ,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC,MAAnB;AAA0B,gBAAA,SAAS,EAAC,KAApC;AACI,gBAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA,sBAXR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA,eAgBI;AAAU,cAAA,SAAS,EAAC,gCAApB;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI;AAAA,uCACJ,QAAC,YAAD;AACY,kBAAA,EAAE,EAAC,YADf;AAEY,kBAAA,IAAI,EAAC,YAFjB;AAGY,kBAAA,SAAS,EAAE,yBAHvB;AAIY,kBAAA,KAAK,EAAEE,SAJnB;AAKY,kBAAA,KAAK,EAAEa,MAAM,CAACd,UAL1B;AAMY,kBAAA,QAAQ,EAAGoC,KAAD,IAAW;AACjBF,oBAAAA,aAAa,CAAC,YAAD,EAAeE,KAAK,CAACA,KAArB,CAAb;AACH;AARb;AAAA;AAAA;AAAA;AAAA;AADI;AAAA;AAAA;AAAA;AAAA,sBAFJ,eAeI,QAAC,YAAD;AAAc,gBAAA,IAAI,EAAC,YAAnB;AAAgC,gBAAA,SAAS,EAAC,KAA1C;AACI,gBAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA,sBAfJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPJ,eA8CI;AAAU,YAAA,SAAS,EAAC,mCAApB;AAAA,oCAEI;AAAK,cAAA,SAAS,EAAC,UAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,YAAD;AACI,gBAAA,SAAS,EAAE,yBADf;AAEI,gBAAA,KAAK,EAAEjC,QAFX;AAGI,gBAAA,KAAK,EAAEW,MAAM,CAACe,QAAP,CAAgBC,SAH3B;AAII,gBAAA,QAAQ,EAAGO,QAAD,IAAc;AACrB;AACA;AACA;AACC;AACAH,kBAAAA,aAAa,CAAC,uBAAuBG,QAAvB,CAAgCC,KAAjC,CAAb;AACAJ,kBAAAA,aAAa,CAAC,qBAAqBG,QAArB,CAA8BD,KAA/B,CAAb;AACH;AAXL;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAgBQtB,MAAM,CAACrB,aAAP,CAAqB8C,IAArB,iBACA;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,2BAA6CzB,MAAM,CAACrB,aAAP,CAAqB8C,IAAlE,eACI;AAAG,kBAAA,KAAK,EAAC,+BAAT;AACI,kBAAA,OAAO,EAAE,MAAML,aAAa,CAAC,oBAAD,EAAuB,IAAvB;AADhC;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAjBR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAyBI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,wCAAjB;AAA0D,gBAAA,IAAI,EAAC,QAA/D;AAAwE,gBAAA,GAAG,EAAC,GAA5E;AAAgF,gBAAA,IAAI,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAIQpB,MAAM,CAACrB,aAAP,CAAqBuC,QAArB,iBACA;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,2BAA6ClB,MAAM,CAACrB,aAAP,CAAqBuC,QAAlE,eACI;AAAG,kBAAA,KAAK,EAAC,+BAAT;AACI,kBAAA,OAAO,EAAE,MAAME,aAAa,CAAC,wBAAD,EAA2B,IAA3B;AADhC;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA,oBAzBJ,eAoCI;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,KAAD;AAAO,gBAAA,SAAS,EAAC,wCAAjB;AAA0D,gBAAA,IAAI,EAAC,QAA/D;AAAwE,gBAAA,GAAG,EAAC,GAA5E;AAAgF,gBAAA,IAAI,EAAC;AAArF;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAIQpB,MAAM,CAACrB,aAAP,CAAqBwC,WAArB,iBACA;AAAK,gBAAA,SAAS,EAAC,4BAAf;AAAA,2BAA6CnB,MAAM,CAACrB,aAAP,CAAqBwC,WAAlE,eACI;AAAG,kBAAA,KAAK,EAAC,+BAAT;AACI,kBAAA,OAAO,EAAE,MAAMC,aAAa,CAAC,2BAAD,EAA8B,IAA9B;AADhC;AAAA;AAAA;AAAA;AAAA,wBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBALR;AAAA;AAAA;AAAA;AAAA;AAAA,oBApCJ,eA+CI;AAAA,sCACA;AAAQ,gBAAA,SAAS,EAAC,oBAAlB;AAAuC,gBAAA,IAAI,EAAC,QAA5C;AAAqD,gBAAA,OAAO,EAAE,MAAM;AAC5DnB,kBAAAA,OAAO,CAACC,GAAR,CAAY,oBAAoBF,MAAM,CAACV,KAAvC;AACAW,kBAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,MAAM,CAACV,KAAP,KAAiB,EAA7C,CAAZ;AACAW,kBAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BF,MAAM,CAACV,KAAP,KAAiB,EAA7C,CAAZ;AACJ,sBAAIoC,OAAO,GAAG,KAAd;;AACI,sBAAI1B,MAAM,CAACe,QAAP,CAAgBC,SAAhB,IAA6B,WAA7B,IAA4ChB,MAAM,CAACe,QAAP,CAAgBC,SAAhB,IAA6B,EAA7E,EAAiF;AAC7EI,oBAAAA,aAAa,CAAC,oBAAD,EAAuB,oBAAvB,CAAb;AACAM,oBAAAA,OAAO,GAAG,IAAV;AACH,mBAHD,MAIK;AAAC;AACN1B,oBAAAA,MAAM,CAACZ,qBAAP,CAA6BuC,GAA7B,CAAiC,CAACC,CAAD,EAAIC,CAAJ,KAAU;AACxC;AACC;AACA5B,sBAAAA,OAAO,CAACC,GAAR,CAAY,SAAS2B,CAArB;;AACA,0BAAID,CAAC,CAACX,WAAF,IAAiBjB,MAAM,CAACe,QAAP,CAAgBE,WAAjC,KAAiDjB,MAAM,CAACV,KAAP,KAAiB,EAAjB,IAAwBU,MAAM,CAACV,KAAP,KAAiB,EAAjB,IAAuBU,MAAM,CAACV,KAAP,KAAiBuC,CAAjH,CAAJ,EAA0H;AACtHH,wBAAAA,OAAO,GAAG,IAAV;AACA,4BAAII,WAAW,GAAG9B,MAAM,CAACrB,aAAP,CAAqB8C,IAAvC;AACAK,wBAAAA,WAAW,GAAG9B,MAAM,CAACe,QAAP,CAAgBE,WAAhB,GAA8B,kCAA5C;AACAG,wBAAAA,aAAa,CAAC,oBAAD,EAAuBU,WAAvB,CAAb;AAEH;AACJ,qBAXD;AAYC;;AACD,sBAAI9B,MAAM,CAACe,QAAP,CAAgBI,WAAhB,IAA+B,EAAnC,EAAuC;AACnCC,oBAAAA,aAAa,CAAC,2BAAD,EAA8B,oBAA9B,CAAb;AACAM,oBAAAA,OAAO,GAAG,IAAV;AACH;;AACD,sBAAI1B,MAAM,CAACe,QAAP,CAAgBG,QAAhB,IAA4B,EAAhC,EAAoC;AAChCE,oBAAAA,aAAa,CAAC,wBAAD,EAA2B,oBAA3B,CAAb;AACAM,oBAAAA,OAAO,GAAG,IAAV;AACH;;AACDzB,kBAAAA,OAAO,CAACC,GAAR,CAAY,eAAewB,OAA3B;;AACJ,sBAAG,CAACA,OAAJ,EAAa;AACT,wBAAI1B,MAAM,CAACV,KAAP,KAAiB,EAArB,EAAyB;AACrB,0BAAIyC,IAAI,GAAG/B,MAAM,CAACZ,qBAAlB;AACA2C,sBAAAA,IAAI,CAACpB,IAAL,CAAUX,MAAM,CAACe,QAAjB;AACEK,sBAAAA,aAAa,CAAC,uBAAD,EAA0BW,IAA1B,CAAb;AACL,qBAJD,MAKK;AACD,0BAAIA,IAAI,GAAG/B,MAAM,CAACZ,qBAAlB;AACA2C,sBAAAA,IAAI,CAAC/B,MAAM,CAACV,KAAR,CAAJ,GAAqBU,MAAM,CAACe,QAA5B;AACAK,sBAAAA,aAAa,CAAC,uBAAD,EAA0BW,IAA1B,CAAb;AACH;AACJ;AAEJ,iBA7CD;AAAA,0BA6CI/B,MAAM,CAACV,KAAP,KAAiB,EAAjB,GAAsB,QAAtB,GAAiC;AA7CrC;AAAA;AAAA;AAAA;AAAA,sBADA,eAgDA;AAAQ,gBAAA,SAAS,EAAC,0BAAlB;AAA6C,gBAAA,IAAI,EAAC,QAAlD;AAA2D,gBAAA,OAAO,EAAE,MAAM;AACtE,sBAAI0C,EAAE,GAAGhC,MAAM,CAACe,QAAhB;AACAiB,kBAAAA,EAAE,GAAG;AAAEnD,oBAAAA,EAAE,EAAE,EAAN;AAAUmC,oBAAAA,SAAS,EAAE,WAArB;AAAkCC,oBAAAA,WAAW,EAAE,EAA/C;AAAmDC,oBAAAA,QAAQ,EAAE,EAA7D;AAAiEC,oBAAAA,WAAW,EAAE;AAA9E,mBAAL;AACAC,kBAAAA,aAAa,CAAC,UAAD,EAAaY,EAAb,CAAb;AACAZ,kBAAAA,aAAa,CAAC,OAAD,EAAU,EAAV,CAAb;AACAA,kBAAAA,aAAa,CAAC,eAAD,EAAkB,EAAlB,CAAb;AACC,iBANL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAhDA;AAAA;AAAA;AAAA;AAAA;AAAA,oBA/CJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBA9CJ,eAuJI;AAAA,mCACI,QAAC,YAAD;AAAc,cAAA,IAAI,EAAC,uBAAnB;AAA2C,cAAA,SAAS,EAAC,KAArD;AACI,cAAA,SAAS,EAAC;AADd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBAvJJ,eA6JQ;AAAO,YAAA,SAAS,EAAC,sBAAjB;AAAA,mCACI;AAAA,sCACI;AAAA,wCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAI,kBAAA,KAAK,EAAE;AAAEa,oBAAAA,KAAK,EAAE;AAAT;AAAX;AAAA;AAAA;AAAA;AAAA,wBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAOH7C,qBAAqB,CAACuC,GAAtB,CAA0B,CAACO,EAAD,EAAI5C,KAAJ,kBACf;AAAA,wCACI;AAAA,4BAAK4C,EAAE,CAACjB;AAAR;AAAA;AAAA;AAAA;AAAA,wBADJ,eAEI;AAAA,4BAAKiB,EAAE,CAAChB;AAAR;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAK,IAAIiB,IAAI,CAACC,YAAT,CAAsB,OAAtB,EAA+B;AAChCC,oBAAAA,KAAK,EAAE,UADyB;AAEhCC,oBAAAA,QAAQ,EAAE,KAFsB;AAGhCC,oBAAAA,qBAAqB,EAAE;AAHS,mBAA/B,EAIFC,MAJE,CAIKN,EAAE,CAACf,WAJR;AAAL;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAQA;AAAA,0CAAI;AAAQ,oBAAA,SAAS,EAAC,oBAAlB;AAAuC,oBAAA,IAAI,EAAC,QAA5C;AAAqD,oBAAA,OAAO,EAAE,MAAM;AACpElB,sBAAAA,OAAO,CAACC,GAAR,CAAY,aAAaZ,KAAzB,EADoE,CAErE;;AACK8B,sBAAAA,aAAa,CAAC,OAAD,EAAU9B,KAAV,CAAb;AACA8B,sBAAAA,aAAa,CAAC,UAAD,EAAac,EAAb,CAAb;AACH,qBALD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAJ,eAMI;AAAQ,oBAAA,SAAS,EAAC,0BAAlB;AAA6C,oBAAA,IAAI,EAAC,QAAlD;AACI,oBAAA,OAAO,EAAE,MAAM;AACX,0BAAIH,IAAI,GAAG/B,MAAM,CAACZ,qBAAlB;AACA;;AACA2C,sBAAAA,IAAI,CAACU,MAAL,CAAYnD,KAAZ,EAAmB,CAAnB;AACA8B,sBAAAA,aAAa,CAAC,uBAAD,EAA0BW,IAA1B,CAAb;AACA9B,sBAAAA,OAAO,CAACC,GAAR,CAAY,aAAWgC,EAAE,CAACrD,EAA1B;;AACA,0BAAIqD,EAAE,CAACrD,EAAH,GAAQ,CAAZ,EAAe;AACX,4BAAI6D,OAAO,GAAG1C,MAAM,CAACK,UAArB;AACAqC,wBAAAA,OAAO,CAAC/B,IAAR,CAAauB,EAAE,CAACrD,EAAhB;AACAuC,wBAAAA,aAAa,CAAC,YAAD,EAAesB,OAAf,CAAb;AACAzC,wBAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBG,UAArC;AACH;AAGJ,qBAfL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BANJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBARA;AAAA,iBAASf,KAAT;AAAA;AAAA;AAAA;AAAA,sBADX,CAPG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBA7JR,eA0MI;AAAQ,YAAA,SAAS,EAAC,oBAAlB;AAAuC,YAAA,IAAI,EAAC,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA1MJ,eA2MI;AAAQ,YAAA,SAAS,EAAC,oCAAlB;AAAuD,YAAA,IAAI,EAAC,QAA5D;AAAqE,YAAA,OAAO,EAAE,KAAKI,UAAnF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBA3MJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAZZ;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAiOH;;AAtTqC;;AAyT1C,eAAepB,iBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n            suppliers: [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {}\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n       DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n               \r\n                this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date,\r\n                    suppliers: response.data.suppliers,  \r\n                    deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        console.log('in onsubmitn');\r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number:values.number,\r\n            supplierId: values.supplierId,//(values.supplierId.length > 1 ? values.supplierId : null),\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        }\r\n       \r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n                console.log('response = ' + JSON.stringify(response.data));\r\n                this.props.history.push('/deliveries')\r\n    })\r\n    }\r\n\r\n    validate(values) {\r\n       \r\n        let errors = {}       \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n       \r\n        if (this.state.id > 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }\r\n       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        \r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        this.props.history.push('/deliveries')\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '' };  \r\n        let deleteddds = [];\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds\r\n                    }}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        ({ setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control w-25\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n\r\n                                <fieldset className=\"form-group d-inline-block\">\r\n                                    <label>date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                        className=\"form-control inline-2-5\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"                                       \r\n                                        selected={values.date && new Date(values.date)}\r\n                                        onChange={date => setFieldValue(\"date\", date)} />\r\n                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"form-group d-inline-block px-5\">\r\n                                        <label>supplier</label>\r\n                                        <div>\r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}\r\n                                            />      \r\n                                            \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n\r\n                                \r\n                                   \r\n                                {/* ********************************************************  */}\r\n                                <fieldset className=\"form-group d-flex align-items-top\">\r\n\r\n                                    <div className=\"d-inline\">\r\n                                        <label>product :&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                               // let ddVM = values.ddEditVM;\r\n                                               // ddVM.productId = selected.value;\r\n                                               // ddVM.productName = selected.label;\r\n                                                // setFieldValue(\"ddEditVM\", ddVM);\r\n                                                setFieldValue(\"ddEditVM.productName\".selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\".selected.value);\r\n                                            }}\r\n                                        />\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\" />\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                            <div className=\"alert alert-warning d-flex\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">pricePerOne :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                            <div className=\"alert alert-warning d-flex\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                                            console.log(\"values.index = \" + values.index);\r\n                                            console.log(\"values.index !== '' = \" + (values.index !== ''));\r\n                                            console.log(\"values.index === '' = \" + (values.index === ''));\r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {//if (values.index != ''){\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                               // console.log(\"x.productName = \" + x.productName);\r\n                                                //console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\r\n                                                console.log(\"y = \" + y);\r\n                                                if (x.productName == values.ddEditVM.productName && (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            console.log(\"iserror = \" + iserror);\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                  setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list[values.index] = values.ddEditVM;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n\r\n                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                        let VM = values.ddEditVM;\r\n                                        VM = { id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '' };\r\n                                        setFieldValue(\"ddEditVM\", VM);\r\n                                        setFieldValue(\"index\", '');\r\n                                        setFieldValue(\"ddEditVMerror\", {});\r\n                                        }}>reset</button>\r\n                                    </div>\r\n\r\n                                </fieldset>\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>            \r\n                                {/*************************************************************************/}\r\n                               \r\n                                    <table className=\"table border x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                                <td style={{ width: '140px' }}></td>\r\n                                             </tr>\r\n                                    {deliveryDetailEditVMs.map((dd,index) =>\r\n                                                <tr key={index}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                <td><button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    console.log(\"index = \" + index);\r\n                                                   // let vm = dd;\r\n                                                        setFieldValue(\"index\", index);\r\n                                                        setFieldValue(\"ddEditVM\", dd)\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;\r\n                                                            /*list.push(values.ddEditVM);*/\r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                                            console.log(\"dd.id = \"+dd.id)\r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)\r\n                                                                console.log(\"values.deleteddds = \" + deleteddds)\r\n                                                            }\r\n                                                            \r\n                                                           \r\n                                                        }}>Delete</button></td>\r\n                                                </tr>\r\n                                    )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>                                                    \r\n\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}