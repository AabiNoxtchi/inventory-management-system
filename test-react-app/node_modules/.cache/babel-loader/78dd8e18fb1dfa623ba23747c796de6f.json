{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport '../myStyles/Style.css';\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\n\nclass UserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePassword = () => {\n      this.setState({\n        changingpassword: this.state.changingpassword ? false : true\n      });\n    };\n\n    this.onFocus = event => {\n      console.log(\"on focus \");\n\n      if (event.target.autocomplete) {\n        event.target.autocomplete = \"whatever\";\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id || -1,\n      firstName: '',\n      lastName: '',\n      userName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      changingpassword: this.props.match.params.id > 0 ? false : true,\n      countries: null,\n      cities: null,\n      filteredcities: null,\n      countryId: null,\n      cityId: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    let userRole = this.getUserRole();\n    console.log(\"component mount userRole  = \" + userRole);\n    console.log(this.state.id);\n    console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + (this.state.id === -1 && userRole !== 'ROLE_Admin'));\n\n    if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\n      return;\n    }\n\n    UserDataService.retrieve(this.state.id).then(response => {\n      console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        // userRole: userRole,\n        firstName: response.data.firstName || '',\n        lastName: response.data.lastName || '',\n        userName: response.data.userName || '',\n        email: response.data.email || '',\n        countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\n        cities: userRole === 'ROLE_Admin' ? response.data.cities : null,\n        filteredcities: userRole === 'ROLE_Admin' ? response.data.countryId ? this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities : null,\n        countryId: userRole === 'ROLE_Admin' && response.data.countryId ? response.data.countryId : null,\n        cityId: userRole === 'ROLE_Admin' && response.data.cityId ? response.data.cityId + '' : ''\n      });\n    });\n  }\n\n  getUserRole() {\n    return AuthenticationService.getLoggedUerRole();\n  }\n\n  onSubmit(values, actions) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.userName,\n      email: values.email,\n      password: this.state.changingpassword ? values.password : null,\n      cityId: this.getUserRole() === 'ROLE_Admin' ? values.cityId : null,\n      targetDate: values.targetDate\n    };\n    console.log(\"user to update = \" + JSON.stringify(user));\n    UserDataService.save(user).then(() => this.props.history.push('/users')).catch(error => {\n      console.log(\"error = \" + error); //console.log(\"error.response.data = \" + JSON.stringify(error.response.data))\n      //let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\n      //  error.response.data.message ? error.response.data.message : error;\n\n      let msg = \"\" + error && // error.response && error.response.data && typeof error.response.data == 'string' ?\n      //error.response.data :\n      error.response && error.response.data ? error.response.data.errors ? error.response.data.errors[0].defaultMessage : error.response.data.message ? error.response.data.message : error : 'something went wrong !!!';\n      if (msg.indexOf(\"Email\") > -1) actions.setErrors({\n        email: msg\n      });\n      if (msg.indexOf(\"User name\") > -1) actions.setErrors({\n        username: msg\n      });\n      if (msg.indexOf(\"Password\") > -1) actions.setErrors({\n        Password: msg\n      });\n      setTimeout(() => {\n        this.setState({\n          errormsg: msg\n        });\n      }, 250);\n      /* this.setState({\r\n           errormsg: msg\r\n       })*/\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.userName) {\n      errors.userName = 'required field !!!';\n    } else if (values.userName.length < 4) {\n      errors.userName = 'Enter at least 4 Characters';\n    }\n\n    if (!values.email) {\n      errors.email = 'required field !!!';\n    } else if (values.email.length < 4) {\n      errors.email = 'Enter at least 4 Characters';\n    }\n\n    if (this.state.id === -1 || this.state.changingpassword) {\n      if (!values.password) {\n        errors.password = 'required field !!!';\n      } else if (values.password.length < 6) {\n        errors.password = 'Enter at least 6 Characters';\n      } else if (values.password != values.confirmpassword) {\n        errors.confirmpassword = 'password and confirm password don\\'t match';\n      }\n    }\n\n    if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\n      errors.cityId = 'required field !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    // this.props.history.push('/users')\n    window.history.back();\n  }\n\n  filterCities(subs, cities, value) {\n    subs = [];\n\n    for (let i = 0; i < cities.length; i++) {\n      if (cities[i].filterBy == value) {\n        subs.push(cities[i]);\n      }\n    }\n\n    return subs;\n  }\n\n  render() {\n    const userRole = this.getUserRole();\n    let {\n      id,\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      confirmpassword,\n\n      /* countries, cities, filteredcities, countryId,*/\n      cityId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          userName,\n          email,\n          password,\n          confirmpassword,\n\n          /* countries, cities, filteredcities, countryId,*/\n          cityId\n        },\n        onSubmit: (values, actions) => this.onSubmit(values, actions),\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex flex-wrap\",\n          children: [this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 57\n          }, this), console.log(\"values = \" + JSON.stringify(values)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"id\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"first name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"firstName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"firstName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 196,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"lastName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"lastName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"user name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control \",\n                type: \"text\",\n                name: \"userName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"userName\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 37\n            }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"inline form-group pl-0 w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Country\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 245,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"\",\n                items: this.state.countries //  value={values.countryId || ''}\n                ,\n                value: this.state.countryId || ''\n                /* onChange={(selected) => {\r\n                     setFieldValue(\"countryId\", selected.value);\r\n                       let subs = values.filteredcities;\r\n                     subs = this.filterCities(subs, values.cities, selected.value);\r\n                     // let sub = values.filteredInventoryNumbers.\r\n                     /*  subs = [];\r\n                       for (let i = 0; i < values.cities.length; i++) {\r\n                             if (values.cities[i].filterBy == selected.value) {\r\n                               subs.push(values.cities[i])\r\n                           }\r\n                       }*/\n                // setFieldValue(\"filteredcities\", subs);\n                //  }}*/\n                ,\n                onChange: selected => {\n                  let subs = this.state.filteredcities;\n                  subs = this.filterCities(subs, this.state.cities, selected.value); // let sub = values.filteredInventoryNumbers.\n\n                  /*  subs = [];\r\n                    for (let i = 0; i < values.cities.length; i++) {\r\n                          if (values.cities[i].filterBy == selected.value) {\r\n                            subs.push(values.cities[i])\r\n                        }\r\n                    }*/\n                  //setFieldValue(\"filteredcities\", subs);\n                  // setFieldValue(\"countryId\", selected.value);\n\n                  this.setState({\n                    countryId: selected.value,\n                    filteredcities: subs\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 243,\n              columnNumber: 41\n            }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"city\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"\" // items={values.filteredcities || filteredcities || cities}\n                ,\n                items: this.state.filteredcities || this.state.cities // value={values.cityId || ''}\n                // onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\n                ,\n                value: values.cityId || '',\n                onChange: selected => setFieldValue(\"cityId\", selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"cityId\",\n                component: \"div\",\n                className: \"alert alert-warning inline-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 307,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w100\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"email\",\n                name: \"email\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 317,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group mt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn p-x-5\",\n                type: \"submit\",\n                disabled: !dirty,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w-50 \",\n            children: [this.state.id > 0 && !this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-3 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 41\n            }, this), this.state.id > 0 && this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-3 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"leave password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 332,\n              columnNumber: 41\n            }, this), (this.state.id < 1 || this.state.changingpassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control \",\n                  type: \"password\",\n                  name: \"password\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"alert alert-warning \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 343,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"confirmpassword\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"confirmpassword\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 342,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 334,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","AuthenticationService","CustomSelect","UserComponent","constructor","props","changePassword","setState","changingpassword","state","onFocus","event","console","log","target","autocomplete","id","match","params","firstName","lastName","userName","email","password","confirmpassword","countries","cities","filteredcities","countryId","cityId","onSubmit","bind","validate","cancelForm","componentDidMount","userRole","getUserRole","retrieve","then","response","JSON","stringify","data","filterCities","getLoggedUerRole","values","actions","user","username","targetDate","save","history","push","catch","error","msg","errors","defaultMessage","message","indexOf","setErrors","Password","setTimeout","errormsg","length","window","back","subs","value","i","filterBy","render","setFieldValue","dirty","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserDataService from '../service/UserDataService';\r\nimport '../myStyles/Style.css';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\n\r\nclass UserComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id || -1,\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            changingpassword: this.props.match.params.id > 0 ? false : true,\r\n            countries: null,\r\n            cities: null,\r\n            filteredcities: null,\r\n            countryId: null,\r\n            cityId:''\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userRole = this.getUserRole();\r\n        console.log(\"component mount userRole  = \" + (userRole))\r\n       \r\n        console.log(this.state.id)\r\n        console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + ((this.state.id === -1 && userRole !== 'ROLE_Admin')));\r\n        if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\r\n            return\r\n        }\r\n        UserDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log(\"response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                   // userRole: userRole,\r\n                    firstName: response.data.firstName||'',\r\n                    lastName: response.data.lastName||'',\r\n                    userName: response.data.userName||'',\r\n                    email: response.data.email||'',\r\n                    countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\r\n                    cities: userRole === 'ROLE_Admin' ? response.data.cities : null,\r\n                    filteredcities: userRole === 'ROLE_Admin' ? response.data.countryId ? \r\n                        this.filterCities([], response.data.cities, response.data.countryId): response.data.cities : null,\r\n                    countryId: userRole === 'ROLE_Admin' && response.data.countryId ? response.data.countryId : null,\r\n                    cityId: userRole === 'ROLE_Admin' && response.data.cityId ? response.data.cityId+'' : ''\r\n                })\r\n            })\r\n    }\r\n\r\n    getUserRole() {\r\n        return AuthenticationService.getLoggedUerRole();\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.userName,\r\n            email: values.email,\r\n            password: this.state.changingpassword ? values.password : null,\r\n            cityId: this.getUserRole() === 'ROLE_Admin' ? values.cityId : null,\r\n            targetDate: values.targetDate\r\n        }\r\n        console.log(\"user to update = \" + JSON.stringify(user))\r\n        UserDataService.save(user)\r\n            .then(() => this.props.history.push('/users'))\r\n            .catch(error => {\r\n                console.log(\"error = \" + error);\r\n                //console.log(\"error.response.data = \" + JSON.stringify(error.response.data))\r\n                //let msg = error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                  //  error.response.data.message ? error.response.data.message : error;\r\n                let msg = \"\" + error &&\r\n                   // error.response && error.response.data && typeof error.response.data == 'string' ?\r\n                    //error.response.data :\r\n                    error.response && error.response.data ?\r\n                    error.response.data.errors ?\r\n                        error.response.data.errors[0].defaultMessage : error.response.data.message ?\r\n                            error.response.data.message : error : 'something went wrong !!!';\r\n                           \r\n\r\n                if (msg.indexOf(\"Email\") > -1)\r\n                    actions.setErrors({ email: msg })\r\n                if (msg.indexOf(\"User name\") > -1)\r\n                    actions.setErrors({ username: msg })\r\n                if (msg.indexOf(\"Password\") > -1)\r\n                    actions.setErrors({ Password: msg })\r\n                setTimeout(() => {\r\n                    this.setState({ errormsg: msg })\r\n                }, 250);\r\n               /* this.setState({\r\n                    errormsg: msg\r\n                })*/\r\n               \r\n    })\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'required field !!!'\r\n        } else if (values.userName.length < 4) {\r\n            errors.userName = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (!values.email) {\r\n            errors.email = 'required field !!!'\r\n        } else if (values.email.length < 4) {\r\n            errors.email = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (this.state.id === -1 || this.state.changingpassword) {\r\n            if (!values.password) {\r\n                errors.password = 'required field !!!'\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Enter at least 6 Characters'\r\n            } else if (values.password != values.confirmpassword) {\r\n                errors.confirmpassword='password and confirm password don\\'t match'\r\n            }\r\n        }\r\n\r\n        if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\r\n            errors.cityId = 'required field !!!'           \r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n   cancelForm() {\r\n      // this.props.history.push('/users')\r\n       window.history.back();\r\n    }\r\n\r\n    changePassword = () => {\r\n        this.setState({\r\n            changingpassword: this.state.changingpassword ? false : true\r\n        })\r\n    }\r\n\r\n    onFocus = event => {\r\n        console.log(\"on focus \");\r\n\r\n        if (event.target.autocomplete) {\r\n            event.target.autocomplete = \"whatever\";\r\n        }\r\n\r\n    }\r\n\r\n    filterCities(subs, cities, value) {\r\n       \r\n        subs = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n\r\n            if (cities[i].filterBy == value) {\r\n                subs.push(cities[i])\r\n            }\r\n        }\r\n\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n        const userRole = this.getUserRole();\r\n        let { id, firstName, lastName, userName, email, password, confirmpassword,/* countries, cities, filteredcities, countryId,*/ cityId } = this.state\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update User</h3> : <h3 className=\"mb-3\"> Add New User </h3>}\r\n                <Formik\r\n                    initialValues={{ id, firstName, lastName, userName, email, password, confirmpassword,/* countries, cities, filteredcities, countryId,*/ cityId }}\r\n                    onSubmit={(values, actions) => this.onSubmit(values, actions)}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                        ({ setFieldValue, values, dirty }) => (\r\n                            <Form className=\"d-flex flex-wrap\">\r\n                                {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                                {console.log(\"values = \" + JSON.stringify(values))}\r\n\r\n                                <div className=\"inline w50\">\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                   \r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label>first name</label>\r\n                                    <Field className=\"form-control\" type=\"text\" name=\"firstName\"\r\n                                        autoComplete=\"new-password\"/>\r\n                                        <ErrorMessage name=\"firstName\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label>last name</label>\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"lastName\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"lastName\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <fieldset className=\"form-group w90\">\r\n                                        <label className=\"required-field\">user name</label>\r\n\r\n                                        <Field className=\"form-control \" type=\"text\" name=\"userName\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"userName\" component=\"div\"\r\n                                            className=\"alert alert-warning \" />\r\n                                    </fieldset>\r\n\r\n                                    \r\n\r\n                                   \r\n                                    \r\n                               \r\n                                   \r\n                                {//console.log(\"userRole  = \" + (userRole))\r\n                                }\r\n                                {//console.log(\"userRole === 'ROLE_Admin' = \" + (userRole === 'ROLE_Admin'))\r\n                                }\r\n                                {//console.log(\"countries = \" + JSON.stringify(countries))\r\n                                }\r\n                                    {//console.log(\"filteredcities = \" + JSON.stringify(filteredcities))\r\n                                    }\r\n                                {//console.log(\"values.filteredcities = \" + JSON.stringify(values.filteredcities))\r\n                                }\r\n                               \r\n\r\n                               \r\n\r\n                                {userRole === 'ROLE_Admin' &&\r\n                                   \r\n                                        <fieldset className=\"inline form-group pl-0 w90\">\r\n\r\n                                            <label>Country&nbsp;</label>\r\n                                            <CustomSelect\r\n                                                className={\"\"}\r\n                                                items={this.state.countries}\r\n                                              //  value={values.countryId || ''}\r\n                                            value={this.state.countryId || ''}\r\n                                               /* onChange={(selected) => {\r\n                                                    setFieldValue(\"countryId\", selected.value);\r\n\r\n                                                    let subs = values.filteredcities;\r\n                                                    subs = this.filterCities(subs, values.cities, selected.value);\r\n                                                    // let sub = values.filteredInventoryNumbers.\r\n                                                    /*  subs = [];\r\n                                                      for (let i = 0; i < values.cities.length; i++) {\r\n\r\n                                                          if (values.cities[i].filterBy == selected.value) {\r\n                                                              subs.push(values.cities[i])\r\n                                                          }\r\n                                                      }*/\r\n                                                   // setFieldValue(\"filteredcities\", subs);\r\n                                  //  }}*/\r\n                                        onChange={(selected) => {\r\n                                            \r\n\r\n                                            let subs = this.state.filteredcities;\r\n                                            subs = this.filterCities(subs, this.state.cities, selected.value);\r\n                                            // let sub = values.filteredInventoryNumbers.\r\n                                            /*  subs = [];\r\n                                              for (let i = 0; i < values.cities.length; i++) {\r\n\r\n                                                  if (values.cities[i].filterBy == selected.value) {\r\n                                                      subs.push(values.cities[i])\r\n                                                  }\r\n                                              }*/\r\n                                            //setFieldValue(\"filteredcities\", subs);\r\n                                            // setFieldValue(\"countryId\", selected.value);\r\n                                            this.setState({\r\n                                                countryId: selected.value,\r\n                                                filteredcities:subs\r\n\r\n                                            })\r\n                                        }}\r\n                                            />\r\n                                        </fieldset>\r\n                                      \r\n                                    }\r\n\r\n                                   \r\n                                    {userRole === 'ROLE_Admin' &&\r\n\r\n                                        <fieldset className=\"form-group w90\">\r\n\r\n                                            <label className=\"required-field\">city&nbsp;</label>\r\n                                            <CustomSelect\r\n                                                className={\"\"}\r\n                                                // items={values.filteredcities || filteredcities || cities}\r\n                                                items={this.state.filteredcities || this.state.cities}\r\n                                                // value={values.cityId || ''}\r\n                                                // onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                                value={values.cityId || ''}\r\n                                                onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                            />\r\n                                            <ErrorMessage name=\"cityId\" component=\"div\"\r\n                                                className=\"alert alert-warning inline-4\" />\r\n\r\n                                        </fieldset>\r\n\r\n                                    }\r\n                                    <fieldset className=\"form-group w100\">\r\n                                        <label className=\"required-field\">email</label>\r\n                                        <Field className=\"form-control\" type=\"email\" name=\"email\"\r\n                                            autoComplete=\"new-password\" />\r\n                                        <ErrorMessage name=\"email\" component=\"div\"\r\n                                            className=\"alert alert-warning \" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group mt-5\">\r\n                                        <button className=\"btn btn-mybtn p-x-5\" type=\"submit\" disabled={!dirty}>Save</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                    </fieldset>\r\n                                   \r\n                                </div>\r\n                                <div className=\"inline w-50 \">\r\n                                    \r\n                                   \r\n                                    {(this.state.id > 0 && !this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-3 mb-3  d-flex\" onClick={this.changePassword}>change password</button>}\r\n                                    {(this.state.id > 0 && this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-3 mb-3  d-flex\" onClick={this.changePassword}>leave password</button>}\r\n                                    {(this.state.id < 1 || this.state.changingpassword) &&\r\n                                        <div>\r\n                                            <fieldset className=\"form-group w90\">\r\n                                                <label className=\"required-field\">password</label>\r\n                                                <Field className=\"form-control \" type=\"password\" name=\"password\"\r\n                                                    autoComplete=\"new-password\" />\r\n                                                <ErrorMessage name=\"password\" component=\"div\"\r\n                                                    className=\"alert alert-warning \" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group w90\">\r\n                                                <label className=\"required-field\">confirm password</label>\r\n                                                <Field className=\"form-control\" type=\"password\" name=\"confirmpassword\"\r\n                                                    autoComplete=\"new-password\" />\r\n                                                <ErrorMessage name=\"confirmpassword\" component=\"div\"\r\n                                                    className=\"alert alert-warning\" />\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    }\r\n                                   \r\n                               \r\n                                </div>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}