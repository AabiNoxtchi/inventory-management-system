{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\TimelineInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\n\nclass TimelineInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      filter: props.filter,\n      first: '',\n      last: '',\n      count: ''\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    let search = `?productDetailId=` + this.state.filter.productDetailId + `&givenAfter=` + this.state.filter.givenAfter;\n    search += this.state.returnedBefore ? `&returnedBefore=` + this.state.filter.returnedBefore : ``;\n    this.refresh(search);\n  }\n\n  refresh(search) {\n    UserProfileDataService.retrieveTimeline(search).then(response => {\n      console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        items: response.data.items || [],\n        first: response.data.first,\n        last: response.data.last,\n        count: response.data.count // pager: response.data.pager,\n\n      });\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : error.response && typeof error.response.data == 'string' ? error.response.data : error.response.data.message ? error.response.data.message : error\n      });\n    });\n  }\n\n  render() {\n    let {\n      items,\n      first,\n      last,\n      count\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"px-2 mx-3 d-flex flex-wrap \",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button btn-mybtn px-5 pt-1 pb-1\",\n            onClick: () => {},\n            children: \"Save changes\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"button btn-delete px-5 pt-1 pb-1\",\n            onClick: () => {},\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \" d-inline-flex justify-content-end flex-grow-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"pager-label\",\n            children: [\"showing\\xA0\", 1, \"-\", this.state.count, \"\\xA0 of \\xA0 \", this.state.count]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          items,\n          first,\n          last,\n          count\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: values.items && values.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"mb-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: [i + 1, \"-\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"user\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-2-5\",\n                items: this.state.filter.userNames,\n                value: values.items[i].userId,\n                onChange: selected => setFieldValue(`items.${i}.userId`, selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"given at\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 108,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2\",\n                dateFormat: \"dd MMMM yyyy\",\n                locale: \"en-GB\" // maxDate={values.dateCreatedBefore}\n                ,\n                selected: new Date(values.items[i].givenAt),\n                onChange: date => setFieldValue(`items.${i}.givenAt`, date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"returned at\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2\",\n                dateFormat: \"dd MMMM yyyy\",\n                locale: \"en-GB\" // maxDate={values.dateCreatedBefore}\n                ,\n                selected: new Date(values.items[i].returnedAt),\n                onChange: date => setFieldValue(`items.${i}.returnedAt`, date)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 41\n            }, this)]\n          }, item.id || i, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default TimelineInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/TimelineInnerComponent.jsx"],"names":["React","Component","DatePicker","CustomSelect","UserProfileDataService","Formik","Form","Field","FieldArray","ErrorMessage","TimelineInnerComponent","constructor","props","state","items","filter","first","last","count","refresh","bind","componentDidMount","search","productDetailId","givenAfter","returnedBefore","retrieveTimeline","then","response","console","log","JSON","stringify","setState","data","catch","error","errormsg","message","render","onSubmit","validate","setFieldValue","values","map","item","i","userNames","userId","selected","value","Date","givenAt","date","returnedAt","id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,UAA9B,EAA0CC,YAA1C,QAA8D,QAA9D;;AAGA,MAAMC,sBAAN,SAAqCT,SAArC,CAA+C;AAC3CU,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GACI;AACIC,MAAAA,KAAK,EAAE,EADX;AAEAC,MAAAA,MAAM,EAAEH,KAAK,CAACG,MAFd;AAGAC,MAAAA,KAAK,EAAE,EAHP;AAIAC,MAAAA,IAAI,EAAE,EAJN;AAKAC,MAAAA,KAAK,EAAC;AALN,KADJ;AASA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AAEhB,QAAIC,MAAM,GAAI,mBAAD,GAAsB,KAAKT,KAAL,CAAWE,MAAX,CAAkBQ,eAAxC,GAA2D,cAA3D,GAA2E,KAAKV,KAAL,CAAWE,MAAX,CAAkBS,UAA1G;AACAF,IAAAA,MAAM,IAAI,KAAKT,KAAL,CAAWY,cAAX,GAA6B,kBAAD,GAAqB,KAAKZ,KAAL,CAAWE,MAAX,CAAkBU,cAAnE,GAAqF,EAA/F;AACA,SAAKN,OAAL,CAAaG,MAAb;AACH;;AAEDH,EAAAA,OAAO,CAACG,MAAD,EAAS;AACZlB,IAAAA,sBAAsB,CAACsB,gBAAvB,CAAwCJ,MAAxC,EACKK,IADL,CAEIC,QAAQ,IAAI;AACRC,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgBC,IAAI,CAACC,SAAL,CAAeJ,QAAf,CAA5B;AAEI,WAAKK,QAAL,CAAc;AACVnB,QAAAA,KAAK,EAAEc,QAAQ,CAACM,IAAT,CAAcpB,KAAd,IAAuB,EADpB;AAEVE,QAAAA,KAAK,EAAEY,QAAQ,CAACM,IAAT,CAAclB,KAFX;AAGVC,QAAAA,IAAI,EAAEW,QAAQ,CAACM,IAAT,CAAcjB,IAHV;AAIVC,QAAAA,KAAK,EAAEU,QAAQ,CAACM,IAAT,CAAchB,KAJX,CAKX;;AALW,OAAd;AAOH,KAZT,EAaMiB,KAbN,CAaaC,KAAD,IAAW;AACf,WAAKH,QAAL,CAAc;AACVI,QAAAA,QAAQ,EAAE,KAAKD,KAAL,IAAc,4CAAd,GAA6D,yBAA7D,GACNA,KAAK,CAACR,QAAN,IAAkB,OAAOQ,KAAK,CAACR,QAAN,CAAeM,IAAtB,IAA8B,QAAhD,GAA2DE,KAAK,CAACR,QAAN,CAAeM,IAA1E,GACIE,KAAK,CAACR,QAAN,CAAeM,IAAf,CAAoBI,OAApB,GAA8BF,KAAK,CAACR,QAAN,CAAeM,IAAf,CAAoBI,OAAlD,GAA4DF;AAH1D,OAAd;AAKH,KAnBL;AAoBH;;AAGDG,EAAAA,MAAM,GAAG;AAEL,QAAI;AAAEzB,MAAAA,KAAF;AAASE,MAAAA,KAAT;AAAgBC,MAAAA,IAAhB;AAAsBC,MAAAA;AAAtB,QAAgC,KAAKL,KAAzC;AACA,wBACI;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAC,6BAAf;AAAA,gCAEQ;AAAA,kCAEA;AAAQ,YAAA,SAAS,EAAC,iCAAlB;AAAoD,YAAA,OAAO,EAAE,MAAM,CAE1D,CAFT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFA,eAMA;AAAQ,YAAA,SAAS,EAAC,kCAAlB;AAAqD,YAAA,OAAO,EAAE,MAAM,CAEnE,CAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFR,eAcI;AAAK,UAAA,SAAS,EAAC,gDAAf;AAAA,kCACI;AAAO,YAAA,SAAS,EAAC,aAAjB;AAAA,sCAA6C,CAA7C,OAAiD,KAAKA,KAAL,CAAWK,KAA5D,mBAAoF,KAAKL,KAAL,CAAWK,KAA/F;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAsBI,QAAC,MAAD;AACI,QAAA,aAAa,EAAE;AAACJ,UAAAA,KAAD;AAAQE,UAAAA,KAAR;AAAeC,UAAAA,IAAf;AAAqBC,UAAAA;AAArB,SADnB;AAEI,QAAA,QAAQ,EAAE,KAAKsB,QAFnB;AAGI,QAAA,gBAAgB,EAAE,KAHtB;AAII,QAAA,cAAc,EAAE,KAJpB;AAKI,QAAA,QAAQ,EAAE,KAAKC,QALnB;AAMI,QAAA,kBAAkB,EAAE,IANxB;AAAA,kBAQK,CAAC;AAAEC,UAAAA,aAAF;AAAiBC,UAAAA;AAAjB,SAAD,kBACG,QAAC,IAAD;AAAA,oBAEQA,MAAM,CAAC7B,KAAP,IACA6B,MAAM,CAAC7B,KAAP,CAAa8B,GAAb,CAAiB,CAACC,IAAD,EAAOC,CAAP,kBACb;AAA6B,YAAA,SAAS,EAAC,MAAvC;AAAA,oCACI;AAAA,yBAAQA,CAAC,GAAG,CAAZ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAEI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,YAAD;AACI,gBAAA,SAAS,EAAE,mBADf;AAEI,gBAAA,KAAK,EAAE,KAAKjC,KAAL,CAAWE,MAAX,CAAkBgC,SAF7B;AAGI,gBAAA,KAAK,EAAEJ,MAAM,CAAC7B,KAAP,CAAagC,CAAb,EAAgBE,MAH3B;AAII,gBAAA,QAAQ,EAAGC,QAAD,IAAcP,aAAa,CAAE,SAAQI,CAAE,SAAZ,EAAsBG,QAAQ,CAACC,KAA/B;AAJzC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ,eAWI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAC,iCAAtB;AACI,gBAAA,UAAU,EAAC,cADf;AAEI,gBAAA,MAAM,EAAC,OAFX,CAGG;AAHH;AAII,gBAAA,QAAQ,EAAE,IAAIC,IAAJ,CAASR,MAAM,CAAC7B,KAAP,CAAagC,CAAb,EAAgBM,OAAzB,CAJd;AAKI,gBAAA,QAAQ,EAAEC,IAAI,IAAIX,aAAa,CAAE,SAAQI,CAAE,UAAZ,EAAuBO,IAAvB;AALnC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAXJ,eAoBI;AAAK,cAAA,SAAS,EAAC,QAAf;AAAA,sCACI;AAAO,gBAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,eAEI,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAC,iCAAtB;AACI,gBAAA,UAAU,EAAC,cADf;AAEI,gBAAA,MAAM,EAAC,OAFX,CAGI;AAHJ;AAII,gBAAA,QAAQ,EAAE,IAAIF,IAAJ,CAASR,MAAM,CAAC7B,KAAP,CAAagC,CAAb,EAAgBQ,UAAzB,CAJd;AAKI,gBAAA,QAAQ,EAAED,IAAI,IAAIX,aAAa,CAAE,SAAQI,CAAE,aAAZ,EAA0BO,IAA1B;AALnC;AAAA;AAAA;AAAA;AAAA,sBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBApBJ;AAAA,aAAeR,IAAI,CAACU,EAAL,IAAWT,CAA1B;AAAA;AAAA;AAAA;AAAA,kBADJ;AAHR;AAAA;AAAA;AAAA;AAAA;AATR;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA,oBADJ;AA0EH;;AA7H0C;;AAgI/C,eAAepC,sBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport UserProfileDataService from '../service/UserProfileDataService';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\n\r\n\r\nclass TimelineInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                items: [],      \r\n            filter: props.filter, \r\n            first: '',\r\n            last: '',\r\n            count:''\r\n            \r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n   \r\n    componentDidMount() {\r\n      \r\n        let search = `?productDetailId=` + this.state.filter.productDetailId + `&givenAfter=` + this.state.filter.givenAfter;\r\n        search += this.state.returnedBefore ? `&returnedBefore=` + this.state.filter.returnedBefore : ``;\r\n        this.refresh(search)\r\n    } \r\n\r\n    refresh(search) {\r\n        UserProfileDataService.retrieveTimeline(search)\r\n            .then(\r\n            response => { \r\n                console.log(\"response = \" + JSON.stringify(response));\r\n                    \r\n                    this.setState({\r\n                        items: response.data.items || [],\r\n                        first: response.data.first,\r\n                        last: response.data.last,\r\n                        count: response.data.count\r\n                       // pager: response.data.pager,\r\n                    });\r\n                }\r\n            ).catch((error) => {\r\n                this.setState({\r\n                    errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : \r\n                        error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                            error.response.data.message ? error.response.data.message : error\r\n                })\r\n            })\r\n    }\r\n   \r\n\r\n    render() {\r\n\r\n        let { items, first, last, count } = this.state;\r\n        return (\r\n            <>\r\n                \r\n                <div className=\"px-2 mx-3 d-flex flex-wrap \">\r\n                   \r\n                        <div >\r\n                            \r\n                        <button className=\"button btn-mybtn px-5 pt-1 pb-1\" onClick={() => {\r\n                                    \r\n                                }\r\n                            }>Save changes</button>\r\n                        <button className=\"button btn-delete px-5 pt-1 pb-1\" onClick={() => {\r\n\r\n                        }\r\n                        }>Cancel</button>\r\n                           \r\n                        </div>\r\n                    <div className=\" d-inline-flex justify-content-end flex-grow-1\">\r\n                        <label className=\"pager-label\">showing&nbsp;{1}-{this.state.count}&nbsp; of &nbsp; {this.state.count}</label> </div>\r\n                    \r\n\r\n                </div>\r\n\r\n                <Formik\r\n                    initialValues={{items, first, last, count}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ setFieldValue, values }) => (\r\n                        <Form>\r\n                            {\r\n                                values.items &&\r\n                                values.items.map((item, i) =>\r\n                                    <fieldset key={item.id || i} className=\"mb-1\">\r\n                                        <label>{i + 1}-</label>\r\n                                        <div className=\"inline\">\r\n                                            <label>user&nbsp;</label>\r\n                                            <CustomSelect\r\n                                                className={\"inline inline-2-5\"}\r\n                                                items={this.state.filter.userNames}\r\n                                                value={values.items[i].userId}\r\n                                                onChange={(selected) => setFieldValue(`items.${i}.userId`, selected.value)}\r\n                                            />\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                            <label className=\"mb-1\">given at&nbsp;</label>\r\n                                            <DatePicker className=\"form-control in-inline inline-2\"\r\n                                                dateFormat=\"dd MMMM yyyy\"\r\n                                                locale=\"en-GB\"\r\n                                               // maxDate={values.dateCreatedBefore}\r\n                                                selected={new Date(values.items[i].givenAt)}\r\n                                                onChange={date => setFieldValue(`items.${i}.givenAt`, date)} />\r\n                                        </div>\r\n                                        <div className=\"inline\">\r\n                                            <label className=\"mb-1\">returned at&nbsp;</label>\r\n                                            <DatePicker className=\"form-control in-inline inline-2\"\r\n                                                dateFormat=\"dd MMMM yyyy\"\r\n                                                locale=\"en-GB\"\r\n                                                // maxDate={values.dateCreatedBefore}\r\n                                                selected={new Date(values.items[i].returnedAt)}\r\n                                                onChange={date => setFieldValue(`items.${i}.returnedAt`, date)} />\r\n                                        </div>\r\n                                        \r\n\r\n                                    </fieldset>\r\n                                     )}        \r\n                        </Form>\r\n                    )}\r\n                </Formik>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimelineInnerComponent"]},"metadata":{},"sourceType":"module"}