{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\ProductFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\n\nclass ProductFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckedElement = event => {\n      if (event.target.value === this.state.productType) {\n        this.setState({\n          productType: ''\n        });\n      } else {\n        this.setState({\n          productType: event.target.value\n        });\n      }\n    };\n\n    this.changelessValues = value => {\n      this.setState({\n        minless: value.target.value,\n        amortizationPercentMoreThan: value.target.value\n      });\n    };\n\n    this.state = {\n      all: props.all,\n      name: props.name,\n      names: props.names,\n      productType: props.productType,\n      productTypes: props.productTypes,\n      amortizationPercentMoreThan: props.amortizationPercentMoreThan,\n      amortizationPercentLessThan: props.amortizationPercentLessThan,\n      totalCountMoreThan: props.totalCountMoreThan,\n      totalCountLessThan: props.totalCountLessThan,\n      prefix: props.prefix,\n      minmore: 0,\n      maxmore: 100,\n      minless: 0,\n      maxless: 100\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this); // this.MAref = React.createRef();\n    // this.DMAref = React.createRef();\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      console.log('field key =' + key);\n      console.log('field value =' + value); // console.log('value.length > 0 =' + value && value.length > 0);\n\n      if (!key.endsWith(\"s\") && value) {\n        if (values.productType === 'MA' && key === 'amortizationPercentMoreThan' || values.productType === 'MA' && key === 'amortizationPercentLessThan' || key === 'maxmore') {} else {\n          newPath += prefix + '.' + key + '=' + value + '&';\n        }\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = path + '?' + newPath;\n    console.log('newPath =' + newPath);\n    window.location.href = newPath;\n  }\n\n  resetForm() {\n    // values.name = null;\n    this.setState({\n      all: '',\n      name: '',\n      productType: '',\n      amortizationPercentMoreThan: '',\n      amortizationPercentLessThan: '',\n      totalCountMoreThan: '',\n      totalCountLessThan: ''\n    });\n    console.log('in reset form ');\n  }\n  /* togglecheckbox = (name) => {\r\n       if (name === 'DMA') {\r\n           this.MAref.current.checked = false\r\n       }\r\n       else if (name === 'MA') {\r\n           this.DMAref.current.checked = false\r\n       }\r\n   }*/\n\n\n  render() {\n    let {\n      all,\n      name,\n      names,\n      productType,\n      productTypes,\n      amortizationPercentMoreThan,\n      amortizationPercentLessThan,\n      totalCountMoreThan,\n      totalCountLessThan,\n      minmore,\n      minless,\n      maxmore,\n      maxless\n    } = this.state;\n\n    for (let i = 0; i < productTypes.length; i++) {\n      console.log('productType = ' + productTypes[i]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        name,\n        names,\n        productType,\n        productTypes,\n        amortizationPercentMoreThan,\n        amortizationPercentLessThan,\n        totalCountMoreThan,\n        totalCountLessThan,\n        minmore,\n        minless,\n        maxmore,\n        maxless\n      },\n      onSubmit: this.onSubmit //onReset={this.resetForm}\n      ,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-1-5\",\n              items: names,\n              value: name,\n              onChange: selected => setFieldValue(\"name\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2 border\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"total :\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"more than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control in-inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              name: \"totalCountMoreThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pl-1 mb-1\",\n              children: \"less than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control in-inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              name: \"totalCountLessThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), productTypes.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Field // ref={type.name === 'MA' ? this.MAref : this.DMAref}\n              , {\n                className: \"mx-2\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value,\n                checked: type.name === this.state.productType,\n                onClick: this.handleCheckedElement\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 45\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 41\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this),\n          /*#__PURE__*/\n          //this.state.productType !== 'MA' &&\n          _jsxDEV(\"div\", {\n            className: this.state.productType === 'MA' ? \"inline px-2 d-none border\" : \"inline px-2 border\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"amortization :\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"more than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control in-inline inline-50px\",\n              type: \"number\",\n              min: minmore,\n              max: maxmore,\n              name: \"amortizationPercentMoreThan\",\n              onChange: this.changelessValues\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 37\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pl-2 mb1\",\n              children: \"less than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control in-inline inline-50px\",\n              type: \"number\",\n              min: minless,\n              max: maxless,\n              name: \"amortizationPercentLessThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"reset\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/ProductFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","ProductFilter","constructor","props","handleCheckedElement","event","target","value","state","productType","setState","changelessValues","minless","amortizationPercentMoreThan","all","name","names","productTypes","amortizationPercentLessThan","totalCountMoreThan","totalCountLessThan","prefix","minmore","maxmore","maxless","onSubmit","bind","resetForm","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","console","log","endsWith","href","render","setFieldValue","selected","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css'\r\n\r\nclass ProductFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            name: props.name,\r\n            names: props.names,\r\n            productType: props.productType,\r\n            productTypes: props.productTypes,\r\n            amortizationPercentMoreThan: props.amortizationPercentMoreThan,\r\n            amortizationPercentLessThan: props.amortizationPercentLessThan,\r\n            totalCountMoreThan: props.totalCountMoreThan,\r\n            totalCountLessThan: props.totalCountLessThan,\r\n            prefix: props.prefix,\r\n            minmore : 0,\r\n            maxmore : 100,\r\n            minless : 0,\r\n            maxless : 100,\r\n           \r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n       // this.MAref = React.createRef();\r\n       // this.DMAref = React.createRef();\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            console.log('field key =' + key);\r\n            console.log('field value =' + value);\r\n           // console.log('value.length > 0 =' + value && value.length > 0);\r\n            if (!key.endsWith(\"s\") && value) {\r\n                if ((values.productType === 'MA' && key === 'amortizationPercentMoreThan') ||\r\n                    (values.productType === 'MA' && key === 'amortizationPercentLessThan') ||\r\n                    (key === 'maxmore')) { }\r\n                else { newPath += prefix + '.' + key + '=' + value + '&' }\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        newPath = path + '?' + newPath;\r\n        console.log('newPath =' + newPath);\r\n\r\n        window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n       // values.name = null;\r\n        this.setState({\r\n            all: '',\r\n            name: '',\r\n            productType: '',\r\n            amortizationPercentMoreThan: '',\r\n            amortizationPercentLessThan: '',\r\n            totalCountMoreThan: '',\r\n            totalCountLessThan:''\r\n        });\r\n        console.log('in reset form ');\r\n    }\r\n\r\n   /* togglecheckbox = (name) => {\r\n        if (name === 'DMA') {\r\n            this.MAref.current.checked = false\r\n        }\r\n        else if (name === 'MA') {\r\n            this.DMAref.current.checked = false\r\n        }\r\n    }*/\r\n\r\n    handleCheckedElement = (event) => {\r\n        if (event.target.value === this.state.productType) {\r\n            this.setState({\r\n                productType: ''\r\n            })\r\n        } else {\r\n            this.setState({\r\n                productType: event.target.value\r\n            })\r\n        }\r\n       \r\n    }\r\n\r\n    changelessValues = (value) => {\r\n       \r\n            this.setState({\r\n            minless: value.target.value,\r\n            amortizationPercentMoreThan: value.target.value\r\n        })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n        let { all, name, names, productType, productTypes, amortizationPercentMoreThan, amortizationPercentLessThan,\r\n            totalCountMoreThan, totalCountLessThan, minmore, minless, maxmore, maxless } = this.state\r\n\r\n        for (let i = 0; i < productTypes.length; i++) {\r\n            console.log('productType = ' + productTypes[i])\r\n        }\r\n\r\n       \r\n\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    all, name, names, productType, productTypes, amortizationPercentMoreThan,\r\n                    amortizationPercentLessThan, totalCountMoreThan, totalCountLessThan, minmore, minless, maxmore, maxless\r\n                }}\r\n                onSubmit={this.onSubmit}\r\n                //onReset={this.resetForm}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                            <div className=\"inline\">\r\n                                <label>name&nbsp;</label>\r\n                                <CustomSelect                                    \r\n                                    className={\"inline inline-1-5\"}\r\n                                    items={names}\r\n                                    value={name}\r\n                                    onChange={(selected) => setFieldValue(\"name\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline px-2 border\">\r\n                                <label className=\"mb-1\">total :&nbsp;</label>\r\n                                <label className=\"mb-1\">more than&nbsp;</label>\r\n                                <Field className=\"form-control in-inline inline-50px\" type=\"number\" min=\"0\" name=\"totalCountMoreThan\" />\r\n                                <label className=\"pl-1 mb-1\">less than&nbsp;</label>\r\n                                <Field className=\"form-control in-inline inline-50px\" type=\"number\" min=\"0\" name=\"totalCountLessThan\" />\r\n                            </div>\r\n                            <div className=\"inline px-2\">\r\n                                <label>product type :</label>\r\n                                {                                     \r\n                                    productTypes.map((type) =>\r\n                                        <label>                                           \r\n                                            <Field // ref={type.name === 'MA' ? this.MAref : this.DMAref}\r\n                                                className=\"mx-2\" type=\"checkbox\" name=\"productType\"\r\n                                                value={type.value} checked={type.name === this.state.productType}\r\n                                                onClick={this.handleCheckedElement} />\r\n                                            {type.name}\r\n                                    </label>)\r\n                                }\r\n                            </div>\r\n                            {//this.state.productType !== 'MA' &&\r\n                                <div className={this.state.productType === 'MA' ? \"inline px-2 d-none border\" : \"inline px-2 border\"}>\r\n                                    <label className=\"mb-1\">amortization :&nbsp;</label>\r\n                                    <label className=\"mb-1\">more than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-50px\" type=\"number\" min={minmore} max={maxmore}\r\n                                        name=\"amortizationPercentMoreThan\" onChange={this.changelessValues} />%\r\n                                    <label className=\"pl-2 mb1\">less than&nbsp;</label>\r\n                                    <Field className=\"form-control in-inline inline-50px\" type=\"number\" min={minless} max={maxless}\r\n                                        name=\"amortizationPercentLessThan\"/>%\r\n                            </div>\r\n                            }\r\n                           \r\n                               \r\n                           \r\n                            <div className=\"inline\">\r\n                                <button className=\"button\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"reset\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductFilter"]},"metadata":{},"sourceType":"module"}