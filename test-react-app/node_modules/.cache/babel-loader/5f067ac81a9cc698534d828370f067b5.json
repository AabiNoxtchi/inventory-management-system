{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\LoginComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport AuthenticationService from '../service/AuthenticationService';\nimport '../myStyles/Style.css';\n\nclass LoginComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getErrorMsg = error => {\n      if ('' + error == 'Error: Request failed with status code 401') return 'Invalid user name and/or password';else return '' + error;\n    };\n\n    this.state = {\n      username: '',\n      password: '',\n      hasLoginFailed: false,\n      showSuccessMsg: false,\n      errormsg: null\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.loginClicked = this.loginClicked.bind(this);\n    this.validate = this.validate.bind(this);\n  }\n\n  handleChange(event) {\n    this.setState({\n      [event.target.name]: event.target.value\n    });\n  }\n\n  loginClicked() {\n    AuthenticationService.executeAuthentication(this.state.username, this.state.password).then(response => {\n      this.setState({\n        showSuccessMsg: true\n      });\n      this.setState({\n        hasLoginFailed: false\n      });\n      AuthenticationService.registerSuccessfulLogin(this.state.username, response.data.token, response.data.role);\n      let userRole = AuthenticationService.getLoggedUerRole();\n      console.log(\"user role = \" + userRole);\n      console.log(\"user role == 'ROLE_Employee'\" + (userRole == 'ROLE_Employee'));\n\n      switch (userRole) {\n        case 'ROLE_Employee':\n          this.props.history.push('/userProfiles');\n\n        default:\n          this.props.history.push('/courses');\n      }\n    }).catch(error => {\n      console.log('error = ' + error);\n      this.setState({\n        showSuccessMsg: false,\n        hasLoginFailed: true,\n        errormsg: this.getErrorMsg(error)\n      });\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.username) {\n      errors.username = 'Enter user name';\n    } else if (values.username.length < 3) {\n      errors.username = 'Enter atleast 3 Characters for user name';\n    }\n\n    if (!values.password) {\n      errors.password = 'Enter password';\n    } else if (values.password.length < 6) {\n      errors.password = 'Enter atleast 6 Characters for password';\n    }\n\n    return errors;\n  }\n\n  render() {\n    let {\n      username,\n      password\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this), this.state.hasLoginFailed && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: this.state.errormsg || 'Invalid user name and/or password'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 51\n      }, this), this.state.showSuccessMsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Login Successfull\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 51\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          username,\n          password\n        },\n        onSubmit: this.loginClicked,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"User Name:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"username\",\n              value: this.state.username,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"username\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"password\",\n              name: \"password\",\n              value: this.state.password,\n              onChange: this.handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"password\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Login\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LoginComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/LoginComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","AuthenticationService","LoginComponent","constructor","props","getErrorMsg","error","state","username","password","hasLoginFailed","showSuccessMsg","errormsg","handleChange","bind","loginClicked","validate","event","setState","target","name","value","executeAuthentication","then","response","registerSuccessfulLogin","data","token","role","userRole","getLoggedUerRole","console","log","history","push","catch","values","errors","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport '../myStyles/Style.css';\r\n\r\nclass LoginComponent extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            username: '',\r\n            password: '',\r\n            hasLoginFailed: false,\r\n            showSuccessMsg: false,\r\n            errormsg:null\r\n        }\r\n        this.handleChange = this.handleChange.bind(this)\r\n        this.loginClicked = this.loginClicked.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n    }\r\n\r\n    handleChange(event) {\r\n        this.setState({\r\n            [event.target.name] : event.target.value\r\n        })\r\n    }\r\n\r\n    getErrorMsg = (error) => {\r\n        if (''+error == 'Error: Request failed with status code 401' )\r\n            return 'Invalid user name and/or password'\r\n        else return '' + error\r\n    }\r\n\r\n    loginClicked() {\r\n        AuthenticationService\r\n            .executeAuthentication(this.state.username, this.state.password)\r\n            .then((response) => {\r\n                this.setState({ showSuccessMsg: true })\r\n                this.setState({ hasLoginFailed: false })\r\n                AuthenticationService.registerSuccessfulLogin(this.state.username, response.data.token, response.data.role)\r\n                let userRole = AuthenticationService.getLoggedUerRole();\r\n                console.log(\"user role = \" + userRole);\r\n                console.log(\"user role == 'ROLE_Employee'\" + (userRole == 'ROLE_Employee'));\r\n                switch (userRole) {\r\n                    case 'ROLE_Employee':\r\n                        this.props.history.push('/userProfiles');\r\n                    default:\r\n                         this.props.history.push('/courses');\r\n                }\r\n                \r\n            }).catch((error) => {\r\n                console.log('error = ' + error);\r\n                this.setState({\r\n                    showSuccessMsg: false,\r\n                    hasLoginFailed: true,\r\n                    errormsg: this.getErrorMsg(error)\r\n                })\r\n        })           \r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.username) {\r\n            errors.username = 'Enter user name'\r\n        } else if (values.username.length < 3) {\r\n            errors.username = 'Enter atleast 3 Characters for user name'\r\n        }\r\n        if (!values.password) {\r\n            errors.password = 'Enter password'\r\n        } else if (values.password.length < 6) {\r\n            errors.password = 'Enter atleast 6 Characters for password'\r\n        }\r\n        return errors\r\n    }\r\n\r\n    render() {\r\n        let { username, password } = this.state\r\n        return (\r\n           \r\n               \r\n            <div className=\"container\">\r\n                <h3 className=\"mb-3\">Login</h3>\r\n                    {this.state.hasLoginFailed && <div className=\"alert alert-warning\">{this.state.errormsg || 'Invalid user name and/or password'}</div>}\r\n                    {this.state.showSuccessMsg && <div>Login Successfull</div>}\r\n                    <Formik\r\n                        initialValues={{ username, password }}\r\n                        onSubmit={this.loginClicked}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>User Name:</label>\r\n                                        <Field className=\"form-control w-25\" type=\"text\" name=\"username\" value={this.state.username} onChange={this.handleChange} />\r\n                                        <ErrorMessage name=\"username\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>Password:</label>\r\n                                        <Field className=\"form-control w-25\" type=\"password\" name=\"password\" value={this.state.password} onChange={this.handleChange} />\r\n                                        <ErrorMessage name=\"password\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </fieldset>\r\n\r\n                                    <button className=\"btn btn-mybtn px-5\" type=\"submit\">Login</button>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default LoginComponent\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}