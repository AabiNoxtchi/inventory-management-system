{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\ProductFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\n\nclass ProductFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglecheckbox = name => {\n      //  if (name === 'DMA') {\n      //      this.csvLink.current.link.click()\n      //   }\n      this.setState({\n        productType: name\n      });\n    };\n\n    this.state = {\n      all: props.all,\n      name: props.name,\n      names: props.names,\n      productType: props.productType,\n      productTypes: props.productTypes,\n      amortizationPercentMoreThan: props.amortizationPercentMoreThan,\n      amortizationPercentLessThan: props.amortizationPercentLessThan,\n      totalCountMoreThan: props.totalCountMoreThan,\n      totalCountLessThan: props.totalCountLessThan,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n    this.MAref = /*#__PURE__*/React.createRef();\n    this.DMAref = /*#__PURE__*/React.createRef();\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      if (!key.endsWith(\"s\") && value && value.length > 1) {\n        newPath += prefix + '.' + key + '=' + value + '&';\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = path + '?' + newPath;\n    console.log('newPath =' + newPath);\n    window.location.href = newPath;\n  }\n\n  resetForm() {\n    this.setState({\n      all: '',\n      name: '',\n      productType: '',\n      amortizationPercentMoreThan: '',\n      amortizationPercentLessThan: '',\n      totalCountMoreThan: '',\n      totalCountLessThan: ''\n    });\n    console.log('in reset form ');\n  }\n\n  render() {\n    let {\n      all,\n      name,\n      names,\n      productType,\n      productTypes,\n      amortizationPercentMoreThan,\n      amortizationPercentLessThan,\n      totalCountMoreThan,\n      totalCountLessThan\n    } = this.state;\n\n    for (let i = 0; i < productTypes.length; i++) {\n      console.log('productType = ' + productTypes[i]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        name,\n        names,\n        productType,\n        productTypes,\n        amortizationPercentMoreThan,\n        amortizationPercentLessThan,\n        totalCountMoreThan,\n        totalCountLessThan\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-1-5\",\n              items: names,\n              value: name,\n              onChange: selected => setFieldValue(\"name\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2\",\n            children: productTypes.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                ref: type.name === 'MA' ? this.MAref : this.DMAref,\n                className: \"mx-2\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value //checked={type.name === this.state.productType}\n                ,\n                onClick: this.togglecheckbox(type.name)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 45\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 41\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"amortization :\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"more than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              name: \"amortizationPercentMoreThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 33\n            }, this), \"%\", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pl-2\",\n              children: \"less than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              max: \"100\",\n              name: \"amortizationPercentLessThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 33\n            }, this), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"total :\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"more than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              name: \"totalCountMoreThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"pl-2\",\n              children: \"less than\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline inline-50px\",\n              type: \"number\",\n              min: \"0\",\n              name: \"totalCountLessThan\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/ProductFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","ProductFilter","constructor","props","togglecheckbox","name","setState","productType","state","all","names","productTypes","amortizationPercentMoreThan","amortizationPercentLessThan","totalCountMoreThan","totalCountLessThan","prefix","onSubmit","bind","resetForm","MAref","createRef","DMAref","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","console","log","href","render","setFieldValue","selected","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css'\r\n\r\nclass ProductFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            name: props.name,\r\n            names: props.names,\r\n            productType: props.productType,\r\n            productTypes: props.productTypes,\r\n            amortizationPercentMoreThan: props.amortizationPercentMoreThan,\r\n            amortizationPercentLessThan: props.amortizationPercentLessThan,\r\n            totalCountMoreThan: props.totalCountMoreThan,\r\n            totalCountLessThan: props.totalCountLessThan,\r\n            prefix: props.prefix,\r\n           \r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n        this.MAref = React.createRef();\r\n        this.DMAref = React.createRef();\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            if (!key.endsWith(\"s\") && value && value.length > 1) {\r\n                newPath += prefix + '.' + key + '=' + value + '&'\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        newPath = path + '?' + newPath;\r\n        console.log('newPath =' + newPath);\r\n\r\n        window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n        this.setState({\r\n            all: '',\r\n            name: '',\r\n            productType: '',\r\n            amortizationPercentMoreThan: '',\r\n            amortizationPercentLessThan: '',\r\n            totalCountMoreThan: '',\r\n            totalCountLessThan:''\r\n        });\r\n        console.log('in reset form ');\r\n    }\r\n\r\n    togglecheckbox = (name) => {\r\n      //  if (name === 'DMA') {\r\n      //      this.csvLink.current.link.click()\r\n     //   }\r\n        this.setState({ productType: name })\r\n    }\r\n\r\n    render() {\r\n\r\n        let { all, name, names, productType, productTypes, amortizationPercentMoreThan, amortizationPercentLessThan, totalCountMoreThan, totalCountLessThan } = this.state\r\n\r\n        for (let i = 0; i < productTypes.length; i++) {\r\n            console.log('productType = ' + productTypes[i])\r\n        }\r\n\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{ all, name, names, productType, productTypes, amortizationPercentMoreThan, amortizationPercentLessThan, totalCountMoreThan, totalCountLessThan }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                            <div className=\"inline\">\r\n                                <label>name&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-1-5\"}\r\n                                    items={names}\r\n                                    value={name}\r\n                                    onChange={(selected) => setFieldValue(\"name\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline px-2\">\r\n                                {\r\n                                    productTypes.map((type) =>\r\n                                        <label>\r\n                                            <Field ref={type.name === 'MA' ? this.MAref : this.DMAref}\r\n                                                className=\"mx-2\" type=\"checkbox\" name=\"productType\"\r\n                                                value={type.value} //checked={type.name === this.state.productType}\r\n                                                onClick={this.togglecheckbox(type.name)} />\r\n                                            {type.name}\r\n                                    </label>)\r\n                                }\r\n                            </div>\r\n                            <div className=\"inline px-2\">\r\n                                <label>amortization :&nbsp;</label>\r\n                                <label>more than&nbsp;</label>\r\n                                <Field className=\"form-control inline inline-50px\" type=\"number\" min=\"0\" max=\"100\" name=\"amortizationPercentMoreThan\" />%\r\n                                <label className=\"pl-2\">less than&nbsp;</label>\r\n                                <Field className=\"form-control inline inline-50px\" type=\"number\" min=\"0\" max=\"100\" name=\"amortizationPercentLessThan\" />%                               \r\n                            </div>\r\n                            <div className=\"inline px-2\">\r\n                                <label>total :&nbsp;</label>\r\n                                <label>more than&nbsp;</label>\r\n                                <Field className=\"form-control inline inline-50px\" type=\"number\" min=\"0\" name=\"totalCountMoreThan\" />\r\n                                <label className=\"pl-2\">less than&nbsp;</label>\r\n                                <Field className=\"form-control inline inline-50px\" type=\"number\" min=\"0\" name=\"totalCountLessThan\" />  \r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <button className=\"button\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"button\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductFilter"]},"metadata":{},"sourceType":"module"}