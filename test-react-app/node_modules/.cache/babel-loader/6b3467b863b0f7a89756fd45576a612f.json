{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    console.log(\"pathname = \" + window.location.pathname);\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {} //numErrors: []\n\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"id = \" + this.state.id);\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      //console.log(\"response.data = \" + JSON.stringify(response.data));\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date,\n        suppliers: response.data.suppliers,\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || [],\n        numErrors: null\n      });\n    });\n  }\n\n  onSubmit(values) {\n    // console.log('in onsubmitn');\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      //(values.supplierId.length > 1 ? values.supplierId : null),\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    /* if (item.id > 0) {\r\n         var x;\r\n         for (x of item.deliveryDetailEditVMs) {\r\n             if(x.id > 0)\r\n                 x.productNums = null\r\n         }\r\n     }*/\n\n    console.log(\"submitted item = \" + JSON.stringify(item));\n    DeliveryDataService.save(item).then(response => {\n      console.log('response = ' + JSON.stringify(response.data));\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      console.log(\"error = \" + JSON.stringify(error.response.data));\n      this.setState({\n        numErrors: error.response.data //arr\n\n      });\n      console.log(\"this.state.numErrors instanceof Array = \" + (this.state.numErrors instanceof Array));\n      console.log(\"type of this.state.numErrors = \" + typeof this.state.numErrors);\n      console.log(\"this.state.numErrors = \" + this.state.numErrors);\n      console.log(\"this.state.numErrors[0] instanceof Array = \" + (this.state.numErrors[0] instanceof Array)); // console.log(\"this.state.numErrors[0][0]  = \" + (this.state.numErrors[0][0] ));\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    }\n\n    console.log(\"errors\", JSON.stringify(errors));\n    return errors;\n  }\n\n  cancelForm() {\n    this.props.history.push('/deliveries');\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    console.log(\"in onchangeQuantity\"); // update dynamic form\n    // console.log(\"values.ddEditVM.productNums = \" + values.ddEditVM.productNums);\n\n    const productNums = [...values.ddEditVM.productNums]; // console.log(\"productNums = \" + productNums);\n\n    const quantity = e.target.value || 0; //console.log(\"quantity = \" + quantity);\n\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0'); // console.log(\"previousQuantity = \" + previousQuantity);\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          id: '',\n          inventoryNumber: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n        console.log(\"num = \" + JSON.stringify(num));\n        console.log(\"num[0].stringify = \" + JSON.stringify(num[0]));\n        console.log(\"num[0] == 'undefined' = \" + (num[0] == 'undefined'));\n        console.log(\"num[0] === 'undefined' = \" + (num[0] === 'undefined'));\n        console.log(\"num[0] === \\\"undefined\\\" = \" + (num[0] === \"undefine\"));\n        console.log(\"num[0] == undefined = \" + (num[0] == undefined));\n        console.log(\"num[0] = \" + num[0]);\n        console.log(\"(values.ddEditVM.id !== '') = \" + (values.ddEditVM.id !== ''));\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          // while (num[0] === undefined) { }\n          console.log(\"(num[0].id !== '') = \" + (num[0].id !== ''));\n          console.log(\"(num[0].id) = \" + num[0].id);\n\n          if (num[0].id !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].id);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n            console.log(\"values.ddEditVM.deletedNums = \" + values.ddEditVM.deletedNums);\n          } else {\n            console.log(\"values.ddEditVM.updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums));\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.id == '-' + i);\n            console.log(\"index of x.id ( - \" + i + \" = \" + index);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        } // console.log(\"num = \"+JSON.stringify(num))\n\n      }\n    } //setValues({ ...values, productNums });\n\n\n    setFieldValue(\"ddEditVM.productNums\", productNums); // console.log(\"productNums = \" + productNums);\n    //console.log(\"values.ddEditVM.productNums = \" + JSON.stringify(values.ddEditVM.productNums));\n\n    setFieldValue(\"ddEditVM.quantity\", e.target.value); // call formik onChange method\n    //values.ddEditVM.productNums.onChange(e);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    console.log(\"in onUpdateProductNums\");\n    console.log(\"id = \" + id);\n    console.log(\"e.target.value = \" + e.target.value); //value.ddEditVM.updatedProductNums.filter\n\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.id == id);\n    console.log(\"index = \" + index);\n    if (index < 0) updatedProductNums.push({\n      id: id,\n      inventoryNumber: e.target.value\n    });else updatedProductNums[index].inventoryNumber = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = []; // let productNumbers = [];\n\n    let productNumErrors = [];\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors //, productNumbers\n\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  onChange: date => setFieldValue(\"date\", date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 244,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top mt-3 mb-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex align-items-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"product :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 273,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  className: \"d-inline-block inline-2-5\",\n                  items: products,\n                  value: values.ddEditVM.productId,\n                  onChange: selected => {\n                    // let ddVM = values.ddEditVM;\n                    // ddVM.productId = selected.value;\n                    // ddVM.productName = selected.label;\n                    // setFieldValue(\"ddEditVM\", ddVM);\n                    setFieldValue(\"ddEditVM.productName\", selected.label);\n                    setFieldValue(\"ddEditVM.productId\", selected.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 274,\n                  columnNumber: 41\n                }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 290,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 272,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1\",\n                  children: \"quantity :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 296,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control d-inline p-1 inline-100px\",\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"ddEditVM.quantity\",\n                  onChange: e => {\n                    // console.log(\"changed quantity event =\" + e.target.value);                                                   \n                    this.onChangeQuantity(e, values, setFieldValue);\n                    /* // console.log(\"values.ddEditVM.productNums = \" + values.ddEditVM.productNums);\r\n                      const productNums = values.ddEditVM.productNums;\r\n                     // console.log(\"productNums = \" + productNums);\r\n                      const quantity = e.target.value || 0;\r\n                     // console.log(\"quantity = \" + quantity);\r\n                      const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n                     // console.log(\"previousQuantity = \" + previousQuantity);\r\n                      if (previousQuantity < quantity) {\r\n                          for (let i = previousQuantity; i < quantity; i++) {\r\n                              productNums.push('');\r\n                          }\r\n                      } else {\r\n                          for (let i = previousQuantity; i >= quantity; i--) {\r\n                              productNums.splice(i, 1);\r\n                          }\r\n                      }\r\n                      //setValues({ ...values, productNums });\r\n                      setFieldValue(\"ddEditVM.productNums\", productNums);\r\n                     // console.log(\"productNums = \" + productNums);\r\n                      console.log(\"values.ddEditVM.productNums = \" + JSON.stringify(values.ddEditVM.productNums));\r\n                      setFieldValue(\"ddEditVM.quantity\", e.target.value)*/\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 297,\n                  columnNumber: 45\n                }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 327,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 326,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 295,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-inline px-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1\",\n                  children: \"unit price :\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control d-inline p-1 inline-100px\",\n                  type: \"number\",\n                  min: \"0\",\n                  name: \"ddEditVM.pricePerOne\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 41\n                }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-flex mbt-01\",\n                  children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-auto pr-3 pt-1\",\n                    onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn mr-1\",\n                type: \"button\",\n                onClick: () => {\n                  //console.log(\"values.index = \" + values.index);\n                  //console.log(\"values.index !== '' = \" + (values.index !== ''));\n                  //console.log(\"values.index === '' = \" + (values.index === ''));\n                  let iserror = false;\n\n                  if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                    setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                    iserror = true;\n                  } else {\n                    //if (values.index != ''){\n                    values.deliveryDetailEditVMs.map((x, y) => {\n                      // console.log(\"x.productName = \" + x.productName);\n                      //console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\n                      // console.log(\"y = \" + y);\n                      if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                        iserror = true;\n                        let ddErrorName = values.ddEditVMerror.name;\n                        ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                        setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                      }\n                    });\n                  }\n\n                  if (values.ddEditVM.pricePerOne == '') {\n                    setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  if (values.ddEditVM.quantity == '') {\n                    setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                    iserror = true;\n                  }\n\n                  if (values.ddEditVM.quantity > 0) {\n                    //  let ddErrorNums = values.ddEditVMerror.productNums || [];\n                    let ddErrorNums = values.productNumErrors; // console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\n                    //setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\n\n                    /* console.log()\r\n                     if (!values.ddEditVMerror.productNums)\r\n                         setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);*/\n                    //  console.log(\"values.ddEditVM.productNums.length = \" + values.ddEditVM.productNums.length);\n\n                    for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                      if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {\n                        //if (!values.ddEditVMerror.productNums)\n                        //  setFieldValue(\"ddEditVMerror.productNums\", []);\n                        //console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\n                        // if (values.ddEditVMerror.productNums)\n                        //  ddErrorNums = values.ddEditVMerror.productNums;\n                        ddErrorNums[i] = 'required field !!!'; // ddErrorNums.push('required field !!!');\n                        //  console.log(\"values.ddEditVMerror.productNums[i] = \" + values.ddEditVMerror.productNums[i]);\n\n                        iserror = true; //break;\n                      } else if (values.ddEditVM.productNums[i].inventoryNumber.length < 8) {\n                        ddErrorNums[i] = 'too short !!!';\n                        iserror = true;\n                      } else {\n                        let isSame = false;\n\n                        for (let j = 0; j < i; j++) {\n                          if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\n                            isSame = true;\n                            iserror = true;\n                          }\n                        }\n\n                        ddErrorNums[i] = isSame ? 'same number exists !!!' : ''; //ddErrorNums.push('');\n                      }\n                    }\n                    /*  setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\r\n                      console.log(\"values.ddEditVMerror.productNums !== ddErrorNums = \" + (values.ddEditVMerror.productNums !== ddErrorNums));\r\n                      if(values.ddEditVMerror.productNums !== ddErrorNums){\r\n                          setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\r\n                     \r\n                      }*/\n                    //console.log(\"values.ddEditVMerror.productNums !== ddErrorNums = \" + (values.ddEditVMerror.productNums !== ddErrorNums));\n                    //console.log(\"ddErrorNums = \" + ddErrorNums);\n\n\n                    setFieldValue(\"productNumErrors\", ddErrorNums);\n                  } // console.log(\"iserror = \" + iserror);\n                  // \n                  //   console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\n                  // console.log(\"ddErrorNums = \" + ddErrorNums);\n                  // console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\n                  // console.log(\"values.ddEditVMerror = \" + JSON.stringify(values.ddEditVMerror));\n                  //console.log(\"values.productNumErrors = \" + values.productNumErrors);\n\n\n                  if (!iserror) {\n                    if (values.index === '') {\n                      let list = values.deliveryDetailEditVMs;\n                      list.push(values.ddEditVM);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    } else {\n                      let list = values.deliveryDetailEditVMs; //let edited = values.ddEditVM;\n                      // edited.productNums = null;\n\n                      list[values.index] = values.ddEditVM; // edited;\n\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                    }\n\n                    console.log(\"updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums)); //setFieldValue(\"ddEditVMerror\", {});\n\n                    this.resetddEditVMForm(values, setFieldValue);\n                  }\n                },\n                children: values.index !== '' ? \"Update\" : \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete\",\n                type: \"button\",\n                onClick: () => {\n                  this.resetddEditVMForm(values, setFieldValue);\n                },\n                children: \"reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 465,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"mb-1\",\n            children: values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) =>\n            /*#__PURE__*/\n            // console.log(\"num in productNums = \" + JSON.stringify(num));\n            // const numErrors = errors. ?.length && errors.tickets[i] || {};\n            // const ticketTouched = touched.tickets ?.length && touched.tickets[i] || {};\n            _jsxDEV(\"div\", {\n              className: \"ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: [\"inventory number \", i + 1, \" :\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 486,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                name: `ddEditVM.productNums.${i}.inventoryNumber`,\n                type: \"text\",\n                className: 'form-control d-inline-block inline-4',\n                onChange: e => {\n                  // console.log(\"e.target.value = \" + e.target.value);                                                       \n                  console.log(\"(num.id !== '') = \" + (num.id !== '')); //if(num.id !== '') \n\n                  if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-' + i, values, setFieldValue);\n                  setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\n                  console.log(\"values.ddEditVM.updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums));\n                }\n                /*  onChange={(e) => {\r\n                      console.log(\"e.target.value = \" + e.target.value);\r\n                      setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n                      if (num.id > 0) {\r\n                           // setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n                            let updatedProductNums = values.ddEditVM.updatedProductNums;\r\n                          console.log(\"updatedProductNums = \" + updatedProductNums);\r\n                          //let foundIndex = updatedProductNums.findIndex((number) => number.id == num.id);\r\n                          //updatedProductNums[foundIndex].inventoryNumber = e.target.value;\r\n                          //setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\r\n                      }\r\n                     // else { setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value) }\r\n                  }}*/\n\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 487,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                type: \"button\",\n                onClick: () => {\n                  let list = values.ddEditVM.productNums;\n                  list.splice(i, 1);\n                  setFieldValue(\"ddEditVM.productNums\", list);\n\n                  if (num.id !== '') {\n                    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                    let index = updatedProductNums.findIndex(x => x.id === num.id);\n\n                    if (index > -1) {\n                      // let list = values.ddEditVM.updatedProductNums;\n                      updatedProductNums.splice(index, 1);\n                      setFieldValue(\"ddEditVM.updatedProductNums\", list);\n                    }\n\n                    let deleted = values.ddEditVM.deletedNums || [];\n                    deleted.push(num.id);\n                    setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                    console.log(\"values.ddEditVM.deletedNums = \" + values.ddEditVM.deletedNums);\n                  }\n\n                  setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                },\n                children: \"Delete\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 516,\n                columnNumber: 53\n              }, this), this.state.numErrors && this.state.numErrors instanceof Array && values.index !== '' && this.state.numErrors[values.index] && this.state.numErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-inline ml-1\",\n                children: this.state.numErrors[values.index][i]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 53\n              }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"alert alert-warning d-inline ml-1\",\n                children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-3 pt-1\",\n                  onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 562,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 555,\n                columnNumber: 53\n              }, this)]\n            }, num.id || i, true, {\n              fileName: _jsxFileName,\n              lineNumber: 484,\n              columnNumber: 45\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 577,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 576,\n            columnNumber: 33\n          }, this), this.state.numErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 582,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border x-Table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 588,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 589,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Unit Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 590,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '140px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 591,\n                  columnNumber: 49\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 587,\n                columnNumber: 45\n              }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                className: values.index === index ? \"table-active\" : \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 595,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 596,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(dd.pricePerOne)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      console.log(\"index = \" + index); // let vm = dd;\n\n                      setFieldValue(\"index\", index);\n                      setFieldValue(\"ddEditVM\", dd);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 602,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.deliveryDetailEditVMs;\n                      /*list.push(values.ddEditVM);*/\n\n                      list.splice(index, 1);\n                      setFieldValue(\"deliveryDetailEditVMs\", list);\n                      console.log(\"dd.id = \" + dd.id);\n\n                      if (dd.id > 0) {\n                        let deleted = values.deleteddds;\n                        deleted.push(dd.id);\n                        setFieldValue(\"deleteddds\", deleted);\n                        console.log(\"values.deleteddds = \" + deleteddds);\n                      }\n\n                      if (values.index == index) {\n                        this.resetddEditVMForm(values, setFieldValue);\n                      }\n                    },\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 608,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 602,\n                  columnNumber: 49\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 594,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 586,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 585,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5 ml-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn px-5\",\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 635,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 ml-3\",\n              type: \"button\",\n              onClick: this.cancelForm,\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 636,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 634,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","console","log","window","location","pathname","state","id","match","params","deliveryView","number","date","supplierId","suppliers","deliveryDetailEditVMs","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","numErrors","values","item","deletedDetailsIds","deleteddds","targetDate","JSON","stringify","save","path","length","history","push","catch","error","Array","errors","onChangeQuantity","e","setFieldValue","productNums","ddEditVM","quantity","target","value","previousQuantity","parseInt","i","inventoryNumber","num","splice","undefined","deletedNums","updatedProductNums","updatedNums","findIndex","x","onUpdateProductNums","resetddEditVMForm","VM","productId","productName","pricePerOne","render","productNumErrors","Date","selected","label","name","iserror","map","y","ddErrorName","ddErrorNums","isSame","j","list","deleted","width","dd","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        console.log(\"pathname = \" + window.location.pathname);\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n            suppliers: [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},\r\n            //numErrors: []\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"id = \" + this.state.id);\r\n       DeliveryDataService.retrieve(this.state.id)\r\n           .then(response => {\r\n               //console.log(\"response.data = \" + JSON.stringify(response.data));\r\n                this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date,\r\n                    suppliers: response.data.suppliers,  \r\n                    deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || [],\r\n                    numErrors : null\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n       // console.log('in onsubmitn');\r\n\r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number:values.number,\r\n            supplierId: values.supplierId,//(values.supplierId.length > 1 ? values.supplierId : null),\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n       /* if (item.id > 0) {\r\n            var x;\r\n            for (x of item.deliveryDetailEditVMs) {\r\n                if(x.id > 0)\r\n                    x.productNums = null\r\n            }\r\n        }*/\r\n        console.log(\"submitted item = \"+JSON.stringify(item))\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n                console.log('response = ' + JSON.stringify(response.data));\r\n                let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n                this.props.history.push(path)\r\n            }).catch((error) => {\r\n                console.log(\"error = \" + JSON.stringify(error.response.data));\r\n                this.setState({\r\n                    numErrors: error.response.data //arr\r\n                });\r\n                console.log(\"this.state.numErrors instanceof Array = \" + (this.state.numErrors instanceof Array));\r\n                console.log(\"type of this.state.numErrors = \" + typeof this.state.numErrors);\r\n                console.log(\"this.state.numErrors = \" + this.state.numErrors);\r\n                console.log(\"this.state.numErrors[0] instanceof Array = \" + (this.state.numErrors[0] instanceof Array));\r\n               // console.log(\"this.state.numErrors[0][0]  = \" + (this.state.numErrors[0][0] ));\r\n\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n       \r\n        let errors = {}       \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n       \r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }\r\n       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n\r\n        console.log(\"errors\", JSON.stringify(errors));\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        this.props.history.push('/deliveries')\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        console.log(\"in onchangeQuantity\");\r\n        // update dynamic form\r\n       // console.log(\"values.ddEditVM.productNums = \" + values.ddEditVM.productNums);\r\n        const productNums = [...values.ddEditVM.productNums];\r\n       // console.log(\"productNums = \" + productNums);\r\n        const quantity = e.target.value || 0;\r\n        //console.log(\"quantity = \" + quantity);\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n       // console.log(\"previousQuantity = \" + previousQuantity);\r\n    if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ id: '', inventoryNumber: '' });\r\n        }\r\n    } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n\r\n            let num = productNums.splice(i, 1);\r\n            console.log(\"num = \" + JSON.stringify(num));\r\n            console.log(\"num[0].stringify = \" + JSON.stringify(num[0]));\r\n            console.log(\"num[0] == 'undefined' = \" + (num[0] == 'undefined'));\r\n            console.log(\"num[0] === 'undefined' = \" + (num[0] === 'undefined'));\r\n            console.log(\"num[0] === \\\"undefined\\\" = \" + (num[0] === \"undefine\"));\r\n            console.log(\"num[0] == undefined = \" + (num[0] == undefined));\r\n            console.log(\"num[0] = \" + num[0]);\r\n            console.log(\"(values.ddEditVM.id !== '') = \" + (values.ddEditVM.id !== ''));          \r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               // while (num[0] === undefined) { }\r\n                console.log(\"(num[0].id !== '') = \" + (num[0].id !== ''));\r\n                console.log(\"(num[0].id) = \" + (num[0].id));\r\n                if ( num[0].id !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].id);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\r\n                    console.log(\"values.ddEditVM.deletedNums = \" + values.ddEditVM.deletedNums);\r\n                } else {\r\n                    console.log(\"values.ddEditVM.updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums));\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.id == '-' + i);\r\n                    console.log(\"index of x.id ( - \" + i + \" = \" + index);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n           // console.log(\"num = \"+JSON.stringify(num))\r\n        }\r\n        }\r\n        //setValues({ ...values, productNums });\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n       // console.log(\"productNums = \" + productNums);\r\n        //console.log(\"values.ddEditVM.productNums = \" + JSON.stringify(values.ddEditVM.productNums));\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n\r\n        \r\n\r\n    // call formik onChange method\r\n        //values.ddEditVM.productNums.onChange(e);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        console.log(\"in onUpdateProductNums\");\r\n        console.log(\"id = \" + id);\r\n        console.log(\"e.target.value = \" + e.target.value)\r\n        //value.ddEditVM.updatedProductNums.filter\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n        \r\n        let index = updatedProductNums.findIndex(x => x.id == id);\r\n        console.log(\"index = \" + index);\r\n        if (index < 0)\r\n            updatedProductNums.push({ id: id, inventoryNumber: e.target.value });\r\n        else\r\n            updatedProductNums[index].inventoryNumber = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];       \r\n       // let productNumbers = [];\r\n        let productNumErrors = [];\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds, productNumErrors//, productNumbers\r\n                    }}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        ({ setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label>date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                        className=\"form-control inline-2-5\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"                                       \r\n                                        selected={values.date && new Date(values.date)}\r\n                                        onChange={date => setFieldValue(\"date\", date)} />\r\n                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                        <label>supplier</label>\r\n                                        <div>\r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}\r\n                                            />      \r\n                                            \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n\r\n                                \r\n                                   \r\n                                {/* ********************************************************  */}\r\n                                <fieldset className=\"d-flex align-items-top mt-3 mb-3\">\r\n                                    <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label>product :&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                               // let ddVM = values.ddEditVM;\r\n                                               // ddVM.productId = selected.value;\r\n                                               // ddVM.productName = selected.label;\r\n                                                // setFieldValue(\"ddEditVM\", ddVM);\r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}\r\n                                        />\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {\r\n                                                   // console.log(\"changed quantity event =\" + e.target.value);                                                   \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n\r\n                                                  /* // console.log(\"values.ddEditVM.productNums = \" + values.ddEditVM.productNums);\r\n                                                    const productNums = values.ddEditVM.productNums;\r\n                                                   // console.log(\"productNums = \" + productNums);\r\n                                                    const quantity = e.target.value || 0;\r\n                                                   // console.log(\"quantity = \" + quantity);\r\n                                                    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n                                                   // console.log(\"previousQuantity = \" + previousQuantity);\r\n                                                    if (previousQuantity < quantity) {\r\n                                                        for (let i = previousQuantity; i < quantity; i++) {\r\n                                                            productNums.push('');\r\n                                                        }\r\n                                                    } else {\r\n                                                        for (let i = previousQuantity; i >= quantity; i--) {\r\n                                                            productNums.splice(i, 1);\r\n                                                        }\r\n                                                    }\r\n                                                    //setValues({ ...values, productNums });\r\n                                                    setFieldValue(\"ddEditVM.productNums\", productNums);\r\n                                                   // console.log(\"productNums = \" + productNums);\r\n                                                    console.log(\"values.ddEditVM.productNums = \" + JSON.stringify(values.ddEditVM.productNums));\r\n                                                    setFieldValue(\"ddEditVM.quantity\", e.target.value)*/\r\n                                                }} />\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                        </div>\r\n                                    </div>\r\n                                   \r\n                                   \r\n                                        \r\n    \r\n                                    <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                                            //console.log(\"values.index = \" + values.index);\r\n                                            //console.log(\"values.index !== '' = \" + (values.index !== ''));\r\n                                            //console.log(\"values.index === '' = \" + (values.index === ''));\r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {//if (values.index != ''){\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                               // console.log(\"x.productName = \" + x.productName);\r\n                                                //console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\r\n                                               // console.log(\"y = \" + y);\r\n                                                if (x.productName == values.ddEditVM.productName && (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n\r\n                                                \r\n                                                //  let ddErrorNums = values.ddEditVMerror.productNums || [];\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                               // console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\r\n                                                //setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\r\n                                               /* console.log()\r\n                                                if (!values.ddEditVMerror.productNums)\r\n                                                    setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);*/\r\n                                              //  console.log(\"values.ddEditVM.productNums.length = \" + values.ddEditVM.productNums.length);\r\n\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].inventoryNumber.length < 1) {\r\n                                                        //if (!values.ddEditVMerror.productNums)\r\n                                                        //  setFieldValue(\"ddEditVMerror.productNums\", []);\r\n\r\n                                                        //console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\r\n                                                        // if (values.ddEditVMerror.productNums)\r\n                                                        //  ddErrorNums = values.ddEditVMerror.productNums;\r\n\r\n\r\n                                                         ddErrorNums[i] = 'required field !!!';\r\n                                                       // ddErrorNums.push('required field !!!');\r\n                                                        \r\n                                                        //  console.log(\"values.ddEditVMerror.productNums[i] = \" + values.ddEditVMerror.productNums[i]);\r\n                                                        iserror = true;\r\n                                                        //break;\r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].inventoryNumber.length < 8) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].inventoryNumber == values.ddEditVM.productNums[j].inventoryNumber) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                        //ddErrorNums.push('');\r\n                                                    }                                                   \r\n                                                    \r\n                                                }\r\n\r\n                                              /*  setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\r\n                                                console.log(\"values.ddEditVMerror.productNums !== ddErrorNums = \" + (values.ddEditVMerror.productNums !== ddErrorNums));\r\n                                                if(values.ddEditVMerror.productNums !== ddErrorNums){\r\n                                                    setFieldValue(\"ddEditVMerror.productNums\", ddErrorNums);\r\n                                               \r\n                                                }*/\r\n                                                //console.log(\"values.ddEditVMerror.productNums !== ddErrorNums = \" + (values.ddEditVMerror.productNums !== ddErrorNums));\r\n                                                //console.log(\"ddErrorNums = \" + ddErrorNums);\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                           // console.log(\"iserror = \" + iserror);\r\n                                           // \r\n                                         //   console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\r\n                                           // console.log(\"ddErrorNums = \" + ddErrorNums);\r\n                                           // console.log(\"values.ddEditVMerror.productNums = \" + values.ddEditVMerror.productNums);\r\n                                            // console.log(\"values.ddEditVMerror = \" + JSON.stringify(values.ddEditVMerror));\r\n                                            //console.log(\"values.productNumErrors = \" + values.productNumErrors);\r\n\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                  setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                //let edited = values.ddEditVM;\r\n                                               // edited.productNums = null;\r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }\r\n                                            console.log(\"updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums));\r\n                                            //setFieldValue(\"ddEditVMerror\", {});\r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                            \r\n                                        }}>reset</button>\r\n                                    </div>\r\n\r\n                                </fieldset>\r\n                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {/*console.log(\"productnums = \" + JSON.stringify(values.ddEditVM.productNums))*/}\r\n                                    {\r\n                                        values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                           // console.log(\"num in productNums = \" + JSON.stringify(num));\r\n                                            // const numErrors = errors. ?.length && errors.tickets[i] || {};\r\n                                            // const ticketTouched = touched.tickets ?.length && touched.tickets[i] || {};\r\n\r\n                                           \r\n\r\n                                            <div key={num.id || i} className=\"ml-3\">\r\n                                               \r\n                                                <label>inventory number {i + 1} :&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.inventoryNumber`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4'}\r\n                                                    onChange={e => {\r\n                                                       // console.log(\"e.target.value = \" + e.target.value);                                                       \r\n                                                        console.log(\"(num.id !== '') = \" + (num.id !== ''));\r\n                                                        //if(num.id !== '') \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.id || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n                                                        console.log(\"values.ddEditVM.updatedProductNums = \" + JSON.stringify(values.ddEditVM.updatedProductNums))\r\n                                                    }}\r\n                                                  /*  onChange={(e) => {\r\n                                                        console.log(\"e.target.value = \" + e.target.value);\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n                                                        if (num.id > 0) {\r\n\r\n                                                           // setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value);\r\n\r\n                                                            let updatedProductNums = values.ddEditVM.updatedProductNums;\r\n                                                            console.log(\"updatedProductNums = \" + updatedProductNums);\r\n                                                            //let foundIndex = updatedProductNums.findIndex((number) => number.id == num.id);\r\n                                                            //updatedProductNums[foundIndex].inventoryNumber = e.target.value;\r\n                                                            //setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\r\n                                                        }\r\n                                                       // else { setFieldValue(`ddEditVM.productNums.${i}.inventoryNumber`, e.target.value) }\r\n                                                    }}*/ />  \r\n                                                {\r\n                                                   \r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n\r\n                                                            let list = values.ddEditVM.productNums;                                                           \r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.productNums\", list)\r\n\r\n                                                            if (num.id !== '') {\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                let index = updatedProductNums.findIndex(x => x.id === num.id);\r\n                                                                if (index > -1) {\r\n                                                                   // let list = values.ddEditVM.updatedProductNums;\r\n                                                                    updatedProductNums.splice(index, 1)\r\n                                                                    setFieldValue(\"ddEditVM.updatedProductNums\", list)\r\n                                                                }\r\n                                                            \r\n                                                                let deleted = values.ddEditVM.deletedNums || [];\r\n                                                                deleted.push(num.id)\r\n                                                                setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                                console.log(\"values.ddEditVM.deletedNums = \" + values.ddEditVM.deletedNums);\r\n                                                            }\r\n\r\n                                                            setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                          \r\n\r\n                                                        }}>Delete</button>\r\n                                                }\r\n                                                {\r\n                                                    this.state.numErrors && this.state.numErrors instanceof Array\r\n                                                    && values.index !== '' && this.state.numErrors[values.index]\r\n                                                    && this.state.numErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">\r\n                                                       \r\n                                                        {this.state.numErrors[values.index][i]}\r\n                                                    </div>\r\n\r\n                                                }\r\n                                                {\r\n                                                    values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">\r\n                                                        \r\n                                                        {\r\n                                                            values.productNumErrors[i] \r\n                                                        }\r\n                                                      \r\n                                                           \r\n                                                            <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() =>\r\n                                                                    setFieldValue(`productNumErrors.${i}`, null)}></i>\r\n                                                       \r\n                                                    </div>\r\n                                                }  \r\n                                                \r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                   \r\n                                </fieldset>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>\r\n                                {\r\n                                    this.state.numErrors &&\r\n                                    <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                                }\r\n                               \r\n                                    <table className=\"table border x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                                <td style={{ width: '140px' }}></td>\r\n                                             </tr>\r\n                                        {deliveryDetailEditVMs.map((dd, index) =>\r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                <td><button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    console.log(\"index = \" + index);\r\n                                                   // let vm = dd;\r\n                                                        setFieldValue(\"index\", index);\r\n                                                        setFieldValue(\"ddEditVM\", dd)\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;\r\n                                                            /*list.push(values.ddEditVM);*/\r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                                            console.log(\"dd.id = \"+dd.id)\r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)\r\n                                                                console.log(\"values.deleteddds = \" + deleteddds)\r\n                                                            }\r\n\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }\r\n                                                            \r\n                                                           \r\n                                                        }}>Delete</button></td>\r\n                                                </tr>\r\n                                    )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>                                                    \r\n\r\n                                <div className=\"mt-5 ml-3\">\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-3\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}