{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductDetailInnerComponent.jsx\";\nimport React, { Component } from 'react'; //import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\n//import DeliveryDataService from '../service/DeliveryDataService';\n\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport '../myStyles/Style.css';\nimport { Link, withRouter } from 'react-router-dom'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nclass ProductDetailInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdatedPd = () => {\n      let x = this.state.pdUpdateShow.x;\n      let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.inventoryNumber.trim() : null;\n      let available = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.available : null;\n      let discarded = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.discarded : null;\n      let previousItem = this.props.items[x];\n\n      if (number == null || available == null || discarded == null) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"All fields are required\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (number.length == 0) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number can't be empty\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (number == previousItem.inventoryNumber && available == previousItem.available && discarded == previousItem.discarded) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"item hasn't changed\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else {\n        let item = {\n          inventoryNumber: number,\n          available: available,\n          discarded: discarded,\n          id: this.state.pdUpdateShow.pd.id,\n          deliveryDetailId: this.state.pdUpdateShow.pd.deliveryDetailId\n        };\n        ProductDetailDataService.save(item).then(response => {\n          let items = this.props.items;\n          items[x].inventoryNumber = number;\n          items[x].available = available;\n          items[x].discarded = discarded;\n          this.props.updateClicked(null);\n          let message = this.state.message;\n          message = `Update successful`;\n          this.props.setItems(items);\n          this.props.setMessage(message);\n        }).catch(error => {\n          let errormsg = error.response && error.response.data ? error.response.data.message ? error.response.data.message : error.response.data : error + '';\n          let show = this.state.pdUpdateShow;\n          show.error = errormsg;\n          this.setState({\n            pdUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.onNumberChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.inventoryNumber = value.target.value;\n      show.error = null;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.onAvailableChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.available = value.target.value == 'true';\n      show.error = null;\n      this.setState({\n        pdUpdateShow: show\n      });\n      console.log(\"state.pd = \" + JSON.stringify(this.state.pdUpdateShow.pd));\n    };\n\n    this.onDiscardedChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.discarded = value.target.value == 'true';\n      show.error = null;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.state = {\n      pdUpdateShow: props.pdUpdateShow,\n      // pd: props.pd,\n      message: props.message\n    };\n    console.log(\"item = \" + JSON.stringify(this.state.pdUpdateShow.pd));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"60%\",\n          height: \"75%\",\n          overflow: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.inventoryNumber,\n          onChange: value => {\n            this.onNumberChange(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pr-2 mr-2 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"px-5\",\n            children: \"available :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: true,\n            checked: this.state.pdUpdateShow.pd.available == true,\n            onChange: value => {\n              this.onAvailableChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" pl-1\",\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: false,\n            checked: this.state.pdUpdateShow.pd.available == false,\n            onChange: value => {\n              this.onAvailableChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Missing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pr-2 mr-2 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \" px-5\",\n            children: \"discarded :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: true,\n            checked: this.state.pdUpdateShow.pd.discarded == true,\n            onChange: value => {\n              this.onDiscardedChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Discarded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: false,\n            checked: this.state.pdUpdateShow.pd.discarded == false,\n            onChange: value => {\n              this.onDiscardedChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Alive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn p-x-5 \",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 \",\n          onClick: () => this.props.updateClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"80%\"\n          },\n          children: [\"ps : to update price or date you must visit the origin of the \", /*#__PURE__*/_jsxDEV(Link, {\n            to: `/deliveries?Filter.number=${this.state.pdUpdateShow.pd.deliveryNumber}&deliveryView=DeliveryDetailView`,\n            children: \"delivery\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 114\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ProductDetailInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductDetailInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","Link","withRouter","ProductDetailInnerComponent","constructor","props","saveUpdatedPd","x","state","pdUpdateShow","number","pd","inventoryNumber","trim","available","discarded","previousItem","items","show","error","setState","length","item","id","deliveryDetailId","save","then","response","updateClicked","message","setItems","setMessage","catch","errormsg","data","onNumberChange","value","target","onAvailableChange","console","log","JSON","stringify","onDiscardedChange","render","width","height","overflow","fontSize","deliveryNumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\n//import DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\nimport { Link, withRouter } from 'react-router-dom'\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\n\r\nclass ProductDetailInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                pdUpdateShow: props.pdUpdateShow,\r\n               // pd: props.pd,\r\n                message: props.message\r\n            }\r\n        console.log(\"item = \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n\r\n        let x = this.state.pdUpdateShow.x; \r\n        let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.inventoryNumber.trim() : null;\r\n        let available = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.available : null;\r\n        let discarded = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.discarded : null;\r\n\r\n        let previousItem = this.props.items[x];\r\n\r\n        if (number == null || available == null || discarded == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"All fields are required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (number.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (number == previousItem.inventoryNumber && available == previousItem.available && discarded == previousItem.discarded) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"item hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        }   else {\r\n            let item = {\r\n                inventoryNumber: number, available: available, discarded: discarded,\r\n                id: this.state.pdUpdateShow.pd.id, deliveryDetailId: this.state.pdUpdateShow.pd.deliveryDetailId                             \r\n            }\r\n            \r\n            ProductDetailDataService.save(item)\r\n                .then(response => {\r\n                   \r\n                    let items = this.props.items;\r\n                    items[x].inventoryNumber = number;\r\n                    items[x].available = available;\r\n                    items[x].discarded = discarded;\r\n\r\n                   this.props.updateClicked(null);\r\n\r\n                    let message = this.state.message;                   \r\n                    message = `Update successful`;\r\n\r\n                    this.props.setItems(items);\r\n                    this.props.setMessage(message);                   \r\n\r\n                }).catch(error => {                    \r\n                    let errormsg = error.response && error.response.data ?\r\n                        error.response.data.message ? error.response.data.message : error.response.data : error + '';\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = errormsg;\r\n                    this.setState({ pdUpdateShow: show })                    \r\n                })\r\n        }\r\n    }\r\n\r\n\r\n    onNumberChange = (value) => {\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.inventoryNumber = value.target.value;\r\n        show.error = null;\r\n        this.setState({ pdUpdateShow: show })\r\n    }\r\n\r\n    onAvailableChange = (value) => {      \r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.available = (value.target.value == 'true');\r\n        show.error = null;\r\n        this.setState({ pdUpdateShow: show })\r\n        console.log(\"state.pd = \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n    }\r\n\r\n    onDiscardedChange = (value) => {       \r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.discarded = (value.target.value == 'true');\r\n        show.error = null;\r\n        this.setState({ pdUpdateShow: show })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"60%\", height: \"75%\", overflow:\"auto\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                    <h2>update inventory</h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.pdUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.pdUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ pdUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    <h6 className={this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number : </h6>\r\n                    <input type=\"text\" className=\"form-control\" value={this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.inventoryNumber}\r\n                        onChange={(value) => {\r\n                            this.onNumberChange(value)\r\n                       \r\n                    }} />\r\n                    <div className=\"pr-2 mr-2 mt-3\">\r\n                        <h6 className=\"px-5\">available :</h6>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={true} checked={this.state.pdUpdateShow.pd.available == true}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                }}\r\n                        /><span className=\" pl-1\" >Available</span>\r\n                                <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={false} checked={this.state.pdUpdateShow.pd.available == false}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                }}\r\n                        /><span className=\"pl-1\" >Missing</span>\r\n                    </div>\r\n                    <div className=\"pr-2 mr-2 mt-3\">\r\n                        <h6 className=\" px-5\">discarded :</h6>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\"\r\n                            value={true} checked={this.state.pdUpdateShow.pd.discarded == true}\r\n                            onChange={(value) => {\r\n                                this.onDiscardedChange(value)\r\n                                 }}\r\n                        /><span className=\"pl-1\" >Discarded</span>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={false} checked={this.state.pdUpdateShow.pd.discarded == false}\r\n                            onChange={(value) => {\r\n                                this.onDiscardedChange(value)\r\n                                }}\r\n                        /><span className=\"pl-1\" >Alive</span>\r\n                    </div>\r\n                    <button className=\"btn btn-mybtn p-x-5 \" onClick={this.saveUpdatedPd}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 \" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                    <p style={{ fontSize: \"80%\" }}>ps : to update price or date you must visit the origin of the <Link\r\n                        to={`/deliveries?Filter.number=${this.state.pdUpdateShow.pd.deliveryNumber}&deliveryView=DeliveryDetailView`}>delivery</Link> </p>\r\n                </div>\r\n                \r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ProductDetailInnerComponent"]},"metadata":{},"sourceType":"module"}