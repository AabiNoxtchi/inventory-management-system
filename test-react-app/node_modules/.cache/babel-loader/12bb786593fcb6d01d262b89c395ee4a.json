{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\UserFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\n\nclass UserFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      firstNames: props.firstNames,\n      firstName: props.firstName,\n      lastNames: props.lastNames,\n      lastName: props.lastName,\n      userNames: props.userNames,\n      userName: props.userName,\n      emails: props.emails,\n      email: props.email,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this); // this.validate = this.validate.bind(this)\n  }\n\n  onSubmit(values) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      userName: values.userName,\n      email: values.email,\n      targetDate: values.targetDate\n    };\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      } // newPath = path + '?' + newPath + this.props.prefix + '.itemsPerPage=' + selectedOption.value;\n\n    }\n\n    let prefix = this.state.prefix;\n    if (values.firstName) newPath += prefix + '.' + values.firstName;\n    if (values.userName) newPath += prefix + '.' + values.userName;\n    newPath = path + '?' + newPath;\n    console.log('new path =' + new path()); // window.location.href = newPath;\n  }\n\n  render() {\n    /* const customControlStyles = base => ({\r\n         width: 100,\r\n     });*/\n    const styles = {\n      container: base => ({\n        flex: 4\n      })\n    };\n    let {\n      all,\n      firstNames,\n      firstName,\n      lastNames,\n      lastName,\n      userNames,\n      userName,\n      emails,\n      email\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          all,\n          firstNames,\n          firstName,\n          lastNames,\n          lastName,\n          userNames,\n          userName,\n          emails,\n          email\n        },\n        onSubmit: this.onSubmit,\n        enableReinitialize: true,\n        children: props => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col-12\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"form-inline\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"pr-3\",\n                    children: \"first name :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    styles: styles,\n                    items: firstNames,\n                    value: firstName,\n                    onChange: value => firstName = value.value //this.setState({ firstName: value.value })}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"pr-3\",\n                    children: \"user name :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 118,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    styles: styles,\n                    items: userNames,\n                    value: userName,\n                    onChange: value => userName = value.value //this.setState({ firstName: value.value })}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 119,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-group col-4\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"pr-3\",\n                    children: \"email :\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    styles: styles,\n                    items: emails,\n                    value: email,\n                    onChange: value => email = value.value //this.setState({ firstName: value.value })}\n\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success px-5\",\n            type: \"submit\",\n            children: \"Search\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default UserFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/UserFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","UserFilter","constructor","props","state","all","firstNames","firstName","lastNames","lastName","userNames","userName","emails","email","prefix","onSubmit","bind","values","user","id","targetDate","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","console","log","render","styles","container","base","flex","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\n\r\n\r\nclass UserFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all:props.all,\r\n            firstNames: props.firstNames,\r\n            firstName: props.firstName,\r\n            lastNames: props.lastNames,\r\n            lastName: props.lastName,\r\n            userNames: props.userNames,\r\n            userName: props.userName,\r\n            emails: props.emails,\r\n            email: props.email,\r\n            prefix: props.prefix\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n       // this.validate = this.validate.bind(this)\r\n\r\n    }\r\n    \r\n\r\n    onSubmit(values) {\r\n\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            userName: values.userName,\r\n            email: values.email,\r\n            targetDate: values.targetDate\r\n        }\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'               \r\n\r\n            }\r\n           // newPath = path + '?' + newPath + this.props.prefix + '.itemsPerPage=' + selectedOption.value;\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        if (values.firstName)\r\n            newPath += prefix + '.' + values.firstName\r\n\r\n        if (values.userName)\r\n            newPath += prefix + '.' + values.userName\r\n\r\n        newPath = path + '?' + newPath ;\r\n        console.log('new path =' + new path);\r\n\r\n       // window.location.href = newPath;\r\n\r\n\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n       /* const customControlStyles = base => ({\r\n            width: 100,\r\n        });*/\r\n\r\n        const styles = {\r\n            container: base => ({\r\n              \r\n                flex: 4\r\n            })\r\n        };\r\n\r\n\r\n        let { all, firstNames, firstName, lastNames, lastName, userNames, userName, emails, email } = this.state\r\n\r\n        return (\r\n                        \r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ all, firstNames, firstName, lastNames, lastName, userNames, userName, emails, email }}\r\n                        onSubmit={this.onSubmit}                       \r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                            (props) => (\r\n                                <Form>\r\n\r\n                                    <div className=\"row\">\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-inline\">\r\n\r\n                                    <div className=\"form-group col-4\">                                   \r\n                                                    <label className=\"pr-3\">first name :</label>\r\n                                        <CustomSelect   \r\n                                            styles={styles}\r\n                                        items={firstNames}\r\n                                        value={firstName}\r\n                                        onChange={value => firstName = value.value} //this.setState({ firstName: value.value })}\r\n                                        />\r\n                                    </div>\r\n                                   \r\n\r\n                                        <div className=\"form-group col-4\">   \r\n                                    <label className=\"pr-3\">user name :</label>\r\n                                            <CustomSelect  \r\n                                                styles={styles}\r\n                                        items={userNames}\r\n                                        value={userName}\r\n                                        onChange={value => userName = value.value} //this.setState({ firstName: value.value })}\r\n                                            />\r\n                                        </div>\r\n\r\n                                       \r\n                                        <div className=\"form-group col-4\">  \r\n                                            <label className=\"pr-3\">email :</label>\r\n                                            \r\n                                                <CustomSelect\r\n                                                    styles={styles}\r\n                                                items={emails}\r\n                                                value={email}\r\n                                                onChange={value => email = value.value} //this.setState({ firstName: value.value })}\r\n                                                />\r\n                                        </div>\r\n\r\n                                            </div>\r\n                                        </div>\r\n                                    </div>\r\n                                          \r\n                                        \r\n\r\n\r\n                                        <button className=\"btn btn-success px-5\" type=\"submit\">Search</button>\r\n                                        \r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n\r\n                </div>\r\n           \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserFilter"]},"metadata":{},"sourceType":"module"}