{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport AppInstructor from './component/AppInstructor';\nimport React, { useEffect, useState } from 'react';\n\nfunction App() {\n  _s();\n\n  /*return (\r\n      <div >\r\n          <AppInstructor />\r\n      </div>\r\n  );*/\n\n  /*  <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>*/\n  const [listening, setListening] = useState(false);\n  const [data, setData] = useState([]);\n  let eventSource = undefined;\n  useEffect(() => {\n    if (!listening) {\n      eventSource = new EventSource(\"http://localhost:8080/api/inventory/manager/subscribe\");\n\n      eventSource.onopen = event => {\n        console.log(\"connection opened\");\n      };\n\n      eventSource.onmessage = event => {\n        console.log(\"result\", event.data);\n        setData(old => [...old, event.data]);\n      };\n\n      eventSource.onerror = event => {\n        console.log(event.target.readyState);\n\n        if (event.target.readyState === EventSource.CLOSED) {\n          console.log('eventsource closed (' + event.target.readyState + ')');\n        }\n\n        eventSource.close();\n      };\n\n      setListening(true);\n    }\n\n    return () => {\n      eventSource.close();\n      console.log(\"eventsource closed\");\n    };\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: /*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [\"Received Data\", data.map(d => /*#__PURE__*/_jsxDEV(\"span\", {\n        children: d\n      }, d, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"pPhG6bgkdMd/wcIrmeoar7uJYNI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/App.js"],"names":["AppInstructor","React","useEffect","useState","App","listening","setListening","data","setData","eventSource","undefined","EventSource","onopen","event","console","log","onmessage","old","onerror","target","readyState","CLOSED","close","map","d"],"mappings":";;;;;;AACA,OAAO,WAAP;AACA,OAAOA,aAAP,MAA0B,2BAA1B;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;AAEA,SAASC,GAAT,GAAe;AAAA;;AACX;AACJ;AACA;AACA;AACA;;AAEE;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEE,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BH,QAAQ,CAAC,KAAD,CAA1C;AACE,QAAM,CAACI,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIM,WAAW,GAAGC,SAAlB;AAEAR,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAI,CAACG,SAAL,EAAgB;AACZI,MAAAA,WAAW,GAAG,IAAIE,WAAJ,CAAgB,uDAAhB,CAAd;;AAEAF,MAAAA,WAAW,CAACG,MAAZ,GAAsBC,KAAD,IAAW;AAC5BC,QAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACH,OAFD;;AAIAN,MAAAA,WAAW,CAACO,SAAZ,GAAyBH,KAAD,IAAW;AAC/BC,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAsBF,KAAK,CAACN,IAA5B;AACAC,QAAAA,OAAO,CAACS,GAAG,IAAI,CAAC,GAAGA,GAAJ,EAASJ,KAAK,CAACN,IAAf,CAAR,CAAP;AACH,OAHD;;AAKAE,MAAAA,WAAW,CAACS,OAAZ,GAAuBL,KAAD,IAAW;AAC7BC,QAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACM,MAAN,CAAaC,UAAzB;;AACA,YAAIP,KAAK,CAACM,MAAN,CAAaC,UAAb,KAA4BT,WAAW,CAACU,MAA5C,EAAoD;AAChDP,UAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBF,KAAK,CAACM,MAAN,CAAaC,UAAtC,GAAmD,GAA/D;AACH;;AACDX,QAAAA,WAAW,CAACa,KAAZ;AACH,OAND;;AAQAhB,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACH;;AAED,WAAO,MAAM;AACTG,MAAAA,WAAW,CAACa,KAAZ;AACAR,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACH,KAHD;AAKH,GA7BQ,EA6BN,EA7BM,CAAT;AA+BA,sBACI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,2BACI;AAAQ,MAAA,SAAS,EAAC,YAAlB;AAAA,kCAEHR,IAAI,CAACgB,GAAL,CAASC,CAAC,iBACC;AAAA,kBAAeA;AAAf,SAAWA,CAAX;AAAA;AAAA;AAAA;AAAA,cADX,CAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAYH;;GAvEQpB,G;;KAAAA,G;AAyET,eAAeA,GAAf","sourcesContent":["import logo from './logo.svg';\r\nimport './App.css';\r\nimport AppInstructor from './component/AppInstructor';\r\nimport React, { useEffect, useState } from 'react'\r\n\r\nfunction App() {\r\n    /*return (\r\n        <div >\r\n            <AppInstructor />\r\n        </div>\r\n    );*/\r\n\r\n  /*  <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n        <p>\r\n          Edit <code>src/App.js</code> and save to reload.\r\n        </p>\r\n        <a\r\n          className=\"App-link\"\r\n          href=\"https://reactjs.org\"\r\n          target=\"_blank\"\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          Learn React\r\n        </a>\r\n      </header>\r\n    </div>*/\r\n\r\n  const [listening, setListening] = useState(false);\r\n    const [data, setData] = useState([]);\r\n    let eventSource = undefined;\r\n\r\n    useEffect(() => {\r\n        if (!listening) {\r\n            eventSource = new EventSource(\"http://localhost:8080/api/inventory/manager/subscribe\");\r\n\r\n            eventSource.onopen = (event) => {\r\n                console.log(\"connection opened\")\r\n            }\r\n\r\n            eventSource.onmessage = (event) => {\r\n                console.log(\"result\", event.data);\r\n                setData(old => [...old, event.data])\r\n            }\r\n\r\n            eventSource.onerror = (event) => {\r\n                console.log(event.target.readyState)\r\n                if (event.target.readyState === EventSource.CLOSED) {\r\n                    console.log('eventsource closed (' + event.target.readyState + ')')\r\n                }\r\n                eventSource.close();\r\n            }\r\n\r\n            setListening(true);\r\n        }\r\n\r\n        return () => {\r\n            eventSource.close();\r\n            console.log(\"eventsource closed\")\r\n        }\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div className=\"\">\r\n            <header className=\"App-header\">\r\n                Received Data\r\n        {data.map(d =>\r\n                    <span key={d}>{d}</span>\r\n                )}\r\n            </header>\r\n        </div>\r\n    );\r\n\r\n      \r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}