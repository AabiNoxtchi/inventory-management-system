{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserProfileInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\n\nclass UserProfileInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      let pdlist = this.state.selectedPds;\n      let show = this.state.profileShow;\n      let item = show.profile;\n      let x = this.state.profileShow.x;\n      let previousItem = x != null ? this.state.items[x] : null;\n\n      if (x == null && pdlist.length < 1) {\n        show.error = 'must at least select 1 inventory !!!';\n        this.setState({\n          profileShow: show\n        });\n      } else if (!item.userId) {\n        show.error = 'user not defined !!!';\n        this.setState({\n          profileShow: show\n        });\n      } else if (x != null) {\n        if (!item.inventoryNumber || !item.givenAt) {\n          show.error = \"al fields are required !!!\";\n          this.setState({\n            profileShow: show\n          });\n        } else if (item.productDetailId == previousItem.productDetailId && this.isDateEqual(item.givenAt, previousItem.givenAt) && (item.returnedAt == null && previousItem.returnedAt == null || this.isDateEqual(item.returnedAt, previousItem.returnedAt))) {\n          show.error = \"item hasn't changed !!!\";\n          this.setState({\n            profileShow: show\n          });\n        }\n      } else {\n        if (x == null) {\n          let ids = [];\n          pdlist.map(pd => ids.push(pd.value));\n          let date = new Date(item.givenAt) || new Date();\n          console.log(\"date = \" + date); //console.log(\"typeof date \" + (typeof date));\n\n          date = date.toISOString();\n          console.log(\"date = \" + date);\n          date = date.substring(0, date.indexOf('T'));\n          console.log(\"date = \" + date);\n          item.givenAt = date; //????????????\n\n          item.productDetailIds = ids; // console.log(\"date2 = \" + item.givenAt);\n        }\n\n        console.log(\"sending item = \" + JSON.stringify(item));\n        UserProfileDataService.save(item).then(response => {\n          console.log(\"response = \" + response.data); //this.setState({ message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully ' })\n          //this.refresh();\n        }).catch(error => {\n          let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\n          console.log(\"error = \" + error);\n          console.log(\"error.response = \" + error.response);\n          console.log(\"json error = \" + JSON.stringify(error.response));\n          show.error = 'error : ' + msg;\n          this.setState({\n            profileShow: show\n          });\n        });\n      }\n    };\n\n    this.onProductChange = selected => {\n      console.log(\"selected.value = \" + selected.value);\n      this.getNewSearch('productId', selected.value); // let search = this.getNewSearch('productId', selected.value);\n      //this.refresh(search)\n    };\n\n    this.getNewSearch = (name, value) => {\n      let search = this.state.lastSearch;\n      let newPath = ``;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n\n        let searchItems = search.split('&');\n\n        for (let i = 0; i < searchItems.length; i++) {\n          if (!searchItems[i].startsWith(name)) newPath += searchItems[i] + '&';\n        }\n      }\n\n      if (value && value != 'undefined') newPath += name + '=' + value;else {\n        if (name == 'notIn') {\n          let ids = '';\n          this.state.selectedPds.map(pd => ids += pd.value + ',');\n          ids = ids.substring(0, ids.length - 1);\n          newPath += name + '=' + ids;\n        } else newPath = newPath.substring(0, newPath.length - 1);\n      }\n      console.log('newPath =' + newPath);\n      newPath = '?' + newPath;\n      this.setState({\n        lastSearch: newPath\n      });\n      this.refresh(newPath); // return newPath;\n    };\n\n    this.oninventoryAdd = selected => {\n      console.log(\"in add inventory\");\n      if (selected.name == '') return;\n      let selectedPds = this.state.selectedPds;\n\n      if (this.state.profileShow.x == null) {\n        selectedPds.push({\n          name: selected.label,\n          value: selected.value\n        });\n        this.setState({\n          selectedPds: selectedPds\n        });\n        this.getNewSearch('notIn');\n      } else {\n        //  selectedPds[0] = { name: selected.label, value: selected.value }\n        let up = this.state.profileShow;\n        up.profile.inventoryNumber = selected.label;\n        up.profile.productDetailId = selected.value;\n        this.setState({\n          profileShow: up,\n          // selectedPds: selectedPds,\n          changedPd: true\n        });\n      }\n\n      console.log(\"this.state.profile = \" + JSON.stringify(this.state.profileShow));\n    };\n\n    this.onFilterDateChange = date => {\n      // console.log(\"2 = \" + date);\n      // if (date != null) console.log(\"type of 2\" + typeof (date));\n      // console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\n      //if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof(this.state.selectedDate));\n      if (this.isDateEqual(this.state.selectedDate, date)) return;\n\n      if (date) {\n        date = date.toISOString();\n        date = date.substring(0, date.indexOf('T'));\n      }\n      /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n          month: \"numeric\",\r\n          day: \"2-digit\",\r\n          year: \"numeric\",\r\n      }).format(new Date(date));*/\n\n\n      console.log(\"date form = \" + date);\n      this.setState({\n        selectedDate: date\n      });\n      this.getNewSearch('dateCreatedAfter', date); // let search = \n    };\n\n    this.onDateGivenChange = date => {\n      console.log(\"on date change date = \" + date);\n      let profileShow = this.state.profileShow;\n      profileShow.profile.givenAt = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.onDateReturnedChange = date => {\n      console.log(\"date = \" + date);\n      let profileShow = this.state.profileShow;\n      profileShow.profile.date = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.isDateEqual = (date1, date2) => {\n      //date2 string\n      // date1 string or date \n      // if (!date1) return false;    //???????????????????????\n      console.log(\"date1 = \" + date1);\n      console.log(\"typeof date1 = \" + typeof date1);\n      console.log(\" date2 = \" + date2);\n      console.log(\"typeof date2 = \" + typeof date2);\n      if (date1 == date2) return true;else {\n        date1 = new Date(date1);\n        date2 = new Date(date2);\n        console.log(\"date1 = \" + date1);\n        console.log(\" date2 = \" + date2);\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) return true;\n      }\n      return false;\n    };\n\n    this.state = {\n      profileShow: props.profileShow,\n      items: props.items,\n      message: props.message,\n      filter: props.filter,\n      filteredNumbers: [],\n      lastSearch: '',\n      //'?isDiscarded=false&isAvailable=true&freeInventory=true',\n      selectedDate: null,\n      filteredcount: '',\n      selectedPds: [],\n      changedPd: null\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    let search = '?isDiscarded=false&isAvailable=true';\n    let search2 = this.state.profileShow.x == null ? '&freeInventory=true' : '&notIn=' + this.state.profileShow.profile.productDetailId;\n    search += search2;\n    this.setState({\n      lastSearch: search\n    });\n    console.log(\"user profile inner component did mount \"); // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\n\n    console.log(\"profile =  \" + JSON.stringify(this.state.profileShow.profile));\n    this.refresh(this.state.lastSearch);\n  }\n\n  refresh(search) {\n    ProductDetailDataService.retrieveAllNumbers(search).then(response => {\n      console.log(\"got response\");\n      this.setState({\n        filteredNumbers: response.data,\n        filteredcount: response.data.length\n      });\n      console.log(\"data length = \" + this.state.filteredNumbers.length);\n    }).catch(error => console.log(\"error = \" + error));\n  }\n\n  returnOriginalPd() {\n    let up = this.state.profileShow;\n    if (up.x == null) return;\n    let original = this.state.items[up.x];\n    up.profile.inventoryNumber = original.inventoryNumber;\n    up.profile.productDetailId = original.productDetailId;\n    this.setState({\n      profileShow: up,\n      changedPd: null\n    });\n  }\n\n  oninventoryRemove(i) {\n    console.log(\"in removeiventory\");\n    let selectedPds = this.state.selectedPds;\n    selectedPds.splice(i, 1);\n    this.setState({\n      selectedPds: selectedPds\n    });\n    this.getNewSearch('notIn');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 287,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"modal d-block \" : \"d-none\",\n        style: {\n          width: \"80%\",\n          height: \"70%\",\n          overflow: \"visible\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close pt-3\",\n          onClick: () => this.props.updateClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 291,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.profileShow.x != null ? 'Update' : 'Add', \" profile \\u2003(\", this.state.profileShow.profile.userName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 292,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 inline w100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border pt-1 b-r r-c foo\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"move-top top-l\",\n              style: {\n                fontSize: \"80%\"\n              },\n              children: \"filter for inventory select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40 pr-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"product : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filter.productNames,\n                onChange: selected => this.onProductChange(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w20\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"\",\n                children: \"created after :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 308,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline w100\",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control w100 p-2 ml-0\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  isClearable: true,\n                  placeholderText: \"...\",\n                  selected: this.state.selectedDate && new Date(this.state.selectedDate) || null,\n                  onChange: selected => {\n                    this.onFilterDateChange(selected);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"move-top top-r\",\n              style: {\n                fontSize: \"80%\"\n              },\n              children: [\" \", this.state.filteredcount, \" items found\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"inline\",\n                children: \"select inventory :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 325,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filteredNumbers,\n                onChange: selected => this.oninventoryAdd(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 326,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 324,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), this.state.profileShow.error && this.state.profileShow.error.length > 1 &&\n        /*#__PURE__*/\n        // error div\n        _jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.profileShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.profileShow;\n              show.error = '';\n              this.setState({\n                profileShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50 m-0 pl-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 pl-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date given :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2 p-2\",\n                  dateFormat: \"dd MMMM yyyy\" //locale=\"en-GB\"\n                  ,\n                  maxDate: new Date()\n                  /*isClearable\r\n                  placeholderText=\"select Date!\"*/\n                  ,\n                  selected: this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n                  onChange: date => {\n                    this.onDateGivenChange(date); //console.log(\"date changed = \" + date);                               \n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date returned :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 372,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2 p-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  disabled: this.state.profileShow.profile.id && this.state.profileShow.profile.id > 0 && this.state.profileShow.profile.returnedAt ? '' : 'disabled'\n                  /*isClearable\r\n                  placeholderText=\"select Date!\"*/\n                  ,\n                  selected: this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt) || null,\n                  onChange: date => {\n                    this.onDateReturnedChange(date); //console.log(\"date changed = \" + date);                               \n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 374,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 373,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 371,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 d-flex justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5\",\n                onClick: this.saveUpdated,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 392,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5\",\n                onClick: () => this.props.updateClicked(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 393,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 391,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"\",\n              children: \"selected inventory :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 400,\n              columnNumber: 29\n            }, this), this.state.profileShow.x == null && this.state.selectedPds && this.state.selectedPds.map((pd, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [i + 1, \" :\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: pd.name,\n                className: \"form-control inline w80 m-0 p-2 pl-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 404,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete m-0 ml-1\",\n                type: \"button\",\n                onClick: () => {\n                  this.oninventoryRemove(i);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 409,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 406,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 403,\n              columnNumber: 37\n            }, this)), this.state.profileShow.x != null && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.profileShow.profile.inventoryNumber,\n                className: \"form-control inline w90 m-0 p-2 pl-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 415,\n                columnNumber: 33\n              }, this), this.state.changedPd && /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-undo ml-1\",\n                onClick: () => {\n                  this.returnOriginalPd();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 417,\n                columnNumber: 60\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"70%\"\n                },\n                children: \" ps : selecting inventory from filter will change current inventory \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 419,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 348,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: \"80%\"\n          },\n          children: \" ps : changing date will alter previous records and may cause lose of data \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 424,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 288,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserProfileInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserProfileInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","UserProfileDataService","DatePicker","CustomSelect","ProductDetailFilter","UserProfileInnerComponent","constructor","props","saveUpdated","pdlist","state","selectedPds","show","profileShow","item","profile","x","previousItem","items","length","error","setState","userId","inventoryNumber","givenAt","productDetailId","isDateEqual","returnedAt","ids","map","pd","push","value","date","Date","console","log","toISOString","substring","indexOf","productDetailIds","JSON","stringify","save","then","response","data","catch","msg","onProductChange","selected","getNewSearch","name","search","lastSearch","newPath","charAt","searchItems","split","i","startsWith","refresh","oninventoryAdd","label","up","changedPd","onFilterDateChange","selectedDate","onDateGivenChange","onDateReturnedChange","date1","date2","getFullYear","getMonth","getDate","message","filter","filteredNumbers","filteredcount","bind","componentDidMount","search2","retrieveAllNumbers","returnOriginalPd","original","oninventoryRemove","splice","render","width","height","overflow","updateClicked","userName","fontSize","productNames","id"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport UserProfileDataService from '../service/UserProfileDataService'\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\r\n\r\n\r\nclass UserProfileInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                profileShow: props.profileShow,\r\n                items: props.items,\r\n                message: props.message,\r\n                filter: props.filter,\r\n            filteredNumbers: [],\r\n            lastSearch: '',//'?isDiscarded=false&isAvailable=true&freeInventory=true',\r\n            selectedDate: null,\r\n            filteredcount: '',\r\n            selectedPds: [],\r\n            changedPd:null\r\n\r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let search = '?isDiscarded=false&isAvailable=true';\r\n        let search2 = this.state.profileShow.x == null ? '&freeInventory=true' : '&notIn=' + this.state.profileShow.profile.productDetailId;\r\n        search += search2;\r\n        this.setState({ lastSearch: search });\r\n        console.log(\"user profile inner component did mount \");\r\n        // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\r\n        console.log(\"profile =  \" + JSON.stringify(this.state.profileShow.profile));\r\n        this.refresh(this.state.lastSearch)\r\n       \r\n    }\r\n\r\n    refresh(search) {\r\n\r\n        ProductDetailDataService.retrieveAllNumbers(search)\r\n            .then(response => {\r\n                console.log(\"got response\");\r\n                this.setState({\r\n                    filteredNumbers: response.data,\r\n                    filteredcount: response.data.length\r\n                })\r\n                console.log(\"data length = \" + this.state.filteredNumbers.length);\r\n            }).catch(error =>\r\n                console.log(\"error = \" + error)\r\n                )\r\n    }\r\n\r\n    saveUpdated = () => {\r\n        let pdlist = this.state.selectedPds;\r\n        let show = this.state.profileShow;\r\n        let item = show.profile;\r\n        let x = this.state.profileShow.x;        \r\n        let previousItem = x!=null ? this.state.items[x] : null;\r\n\r\n        if (x==null && pdlist.length < 1) {\r\n            show.error = 'must at least select 1 inventory !!!'\r\n            this.setState({ profileShow: show })\r\n        }\r\n        else if (!item.userId) {\r\n            show.error = 'user not defined !!!'\r\n            this.setState({ profileShow: show })\r\n        } else if (x != null) {\r\n            if (!item.inventoryNumber || !item.givenAt) {\r\n                show.error = \"al fields are required !!!\"\r\n                this.setState({ profileShow: show })\r\n            }\r\n            else if (item.productDetailId == previousItem.productDetailId && this.isDateEqual(item.givenAt, previousItem.givenAt)\r\n                && ((item.returnedAt == null && previousItem.returnedAt == null) || (this.isDateEqual(item.returnedAt, previousItem.returnedAt)))) {\r\n                show.error = \"item hasn't changed !!!\"\r\n                this.setState({ profileShow: show })\r\n            }\r\n        } \r\n        else {\r\n            if (x==null) {\r\n                let ids = [];\r\n                \r\n                pdlist.map(pd => ids.push(pd.value));\r\n\r\n                let date = new Date(item.givenAt) || new Date();\r\n                console.log(\"date = \" + date);\r\n                //console.log(\"typeof date \" + (typeof date));\r\n                date = date.toISOString();\r\n                console.log(\"date = \" + date);\r\n                date = date.substring(0, date.indexOf('T'))\r\n                console.log(\"date = \" + date);\r\n                item.givenAt = date;//????????????\r\n                item.productDetailIds = ids;\r\n               // console.log(\"date2 = \" + item.givenAt);\r\n            }\r\n            console.log(\"sending item = \" + JSON.stringify(item));\r\n            UserProfileDataService.save(item).then(\r\n                response => {\r\n                    console.log(\"response = \" + response.data);\r\n                    //this.setState({ message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully ' })\r\n\r\n                    //this.refresh();\r\n                }).catch(error => {\r\n                    let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n                    console.log(\"error = \" + error);\r\n                    console.log(\"error.response = \" + error.response);\r\n                    console.log(\"json error = \" + JSON.stringify(error.response));\r\n                    show.error = 'error : ' + msg;\r\n                    this.setState({ profileShow: show })\r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    onProductChange = (selected) => {\r\n\r\n        console.log(\"selected.value = \" + selected.value);\r\n        this.getNewSearch('productId', selected.value);\r\n       // let search = this.getNewSearch('productId', selected.value);\r\n        //this.refresh(search)\r\n        \r\n\r\n\r\n    }\r\n    getNewSearch = (name, value) => {\r\n\r\n        let search = this.state.lastSearch;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (!searchItems[i].startsWith(name))\r\n                    newPath += searchItems[i] + '&'               \r\n            }\r\n        }\r\n\r\n      \r\n        if (value && value != 'undefined')\r\n            newPath += name + '=' + value;\r\n        else {\r\n            if (name == 'notIn') {\r\n                let ids = ''\r\n                this.state.selectedPds.map(pd => ids += pd.value + ',')\r\n                ids = ids.substring(0, ids.length - 1);\r\n                newPath+= name+'='+ids\r\n            }\r\n            else\r\n                newPath = newPath.substring(0, newPath.length - 1);\r\n        }\r\n        console.log('newPath =' + newPath);\r\n         newPath = '?' + newPath\r\n        this.setState({ lastSearch: newPath })\r\n        this.refresh(newPath)\r\n       // return newPath;\r\n\r\n\r\n    }\r\n    oninventoryAdd = (selected) => {\r\n        console.log(\"in add inventory\")\r\n        if (selected.name == '') return;\r\n        \r\n        let selectedPds = this.state.selectedPds;\r\n        if (this.state.profileShow.x == null) {\r\n            selectedPds.push({ name: selected.label, value: selected.value });\r\n            this.setState({ selectedPds: selectedPds })\r\n            this.getNewSearch('notIn')\r\n        } else {\r\n          //  selectedPds[0] = { name: selected.label, value: selected.value }\r\n            let up = this.state.profileShow;\r\n            up.profile.inventoryNumber = selected.label;\r\n            up.profile.productDetailId = selected.value;\r\n            this.setState({\r\n                profileShow: up,\r\n               // selectedPds: selectedPds,\r\n                changedPd:true\r\n            })\r\n        }\r\n        console.log(\"this.state.profile = \" + JSON.stringify(this.state.profileShow));\r\n        \r\n        \r\n\r\n    }\r\n\r\n    returnOriginalPd() {\r\n\r\n        let up = this.state.profileShow;\r\n        if (up.x == null) return;\r\n\r\n        let original = this.state.items[up.x];\r\n        up.profile.inventoryNumber = original.inventoryNumber;\r\n        up.profile.productDetailId = original.productDetailId;\r\n        this.setState({\r\n            profileShow: up,\r\n            changedPd:null\r\n        })\r\n    }\r\n\r\n    oninventoryRemove (i) {\r\n       console.log(\"in removeiventory\")\r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.splice(i, 1);\r\n        this.setState({ selectedPds: selectedPds })\r\n        this.getNewSearch('notIn')\r\n    }\r\n\r\n\r\n    onFilterDateChange = (date) => {\r\n       // console.log(\"2 = \" + date);\r\n       // if (date != null) console.log(\"type of 2\" + typeof (date));\r\n       // console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\r\n        //if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof(this.state.selectedDate));\r\n        \r\n\r\n        if (this.isDateEqual(this.state.selectedDate, date)) return;\r\n        \r\n       \r\n       if(date) {\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n        } \r\n        /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n            month: \"numeric\",\r\n            day: \"2-digit\",\r\n            year: \"numeric\",\r\n        }).format(new Date(date));*/\r\n\r\n        console.log(\"date form = \" + date);\r\n        this.setState({ selectedDate: date });\r\n        this.getNewSearch('dateCreatedAfter', date);\r\n       // let search = \r\n        \r\n        \r\n    }\r\n\r\n    onDateGivenChange = (date) => {\r\n        console.log(\"on date change date = \" + date);\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.givenAt = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n    onDateReturnedChange = (date) => {\r\n        console.log(\"date = \" + date);\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.date = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n\r\n    isDateEqual = (date1, date2) => {\r\n        //date2 string\r\n        // date1 string or date \r\n       // if (!date1) return false;    //???????????????????????\r\n        console.log(\"date1 = \" + date1);\r\n        console.log(\"typeof date1 = \" + typeof date1);\r\n        console.log(\" date2 = \" + date2);\r\n        console.log(\"typeof date2 = \" + typeof date2);\r\n       \r\n        if (date1 == date2) return true       \r\n        else {\r\n            date1 = new Date(date1);\r\n            date2 = new Date(date2);\r\n            console.log(\"date1 = \" + date1);\r\n            console.log(\" date2 = \" + date2);\r\n            if (date1.getFullYear() === date2.getFullYear() &&\r\n                date1.getMonth() === date2.getMonth() &&\r\n                date1.getDate() === date2.getDate())\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.profileShow.show ? \"modal d-block \" : \"d-none\"} style={{ width: \"80%\", height: \"70%\", overflow: \"visible\" }}>\r\n\r\n\r\n                    <span class=\"close pt-3\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                    <h2>{this.state.profileShow.x != null ? 'Update' : 'Add'} profile &emsp;({this.state.profileShow.profile.userName})</h2>\r\n                   \r\n                    <div className=\"mt-3 inline w100\">\r\n                        <div className=\"border pt-1 b-r r-c foo\"> {/*********************** small filter **************************/}\r\n                            <label className=\"move-top top-l\" style={{ fontSize: \"80%\" }}>filter for inventory select</label>\r\n\r\n                            <div className=\"inline w40 pr-1\">\r\n                                <h6>product : </h6>\r\n                                <CustomSelect\r\n                                    className={\"inline w100 ml-0\"}\r\n                                    items={this.state.filter.productNames}\r\n                                    onChange={(selected) => this.onProductChange(selected)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"inline w20\">\r\n                                <h6 className=\"\">created after :</h6>\r\n                                <div className=\"inline w100\">\r\n                                    <DatePicker\r\n                                        className=\"form-control w100 p-2 ml-0\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        isClearable\r\n                                        placeholderText=\"...\"\r\n                                        selected={this.state.selectedDate && new Date(this.state.selectedDate) || null}\r\n                                        onChange={selected => {\r\n                                            this.onFilterDateChange(selected)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <span className=\"move-top top-r\" style={{ fontSize: \"80%\" }}> {this.state.filteredcount} items found</span>\r\n                            <div className=\"inline w40\">\r\n                                <h6 className=\"inline\">select inventory :&nbsp;</h6>\r\n                                <CustomSelect\r\n                                    className={\"inline w100 ml-0\"}\r\n                                    items={this.state.filteredNumbers}\r\n                                    onChange={(selected) => this.oninventoryAdd(selected)}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>{/*******************    filter over  ******************/}\r\n\r\n                    {this.state.profileShow.error && this.state.profileShow.error.length > 1 && // error div\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.profileShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.profileShow;\r\n                                    show.error = '';\r\n                                    this.setState({ profileShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>\r\n                    }\r\n                    {/***************  form  ********************/}\r\n                    <div className={this.state.profileShow.error && this.state.profileShow.error.length > 1 ?\r\n                        \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\"}>\r\n\r\n                        <div className=\"inline w50 m-0 pl-5\">{/*************** form right **************/}\r\n\r\n                            <div className=\"inline m-0 pl-5\">\r\n                    <h6 >date given :</h6> \r\n                    <div>\r\n                        <DatePicker\r\n                                        className=\"form-control inline-2 p-2\"\r\n                            dateFormat=\"dd MMMM yyyy\"\r\n                                        //locale=\"en-GB\"\r\n                                        maxDate={new Date()}\r\n                            /*isClearable\r\n                            placeholderText=\"select Date!\"*/\r\n                            selected={(this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt))|| new Date()}\r\n                            onChange={date => {\r\n                                this.onDateGivenChange(date);\r\n                                //console.log(\"date changed = \" + date);                               \r\n                            }} />\r\n                    </div>\r\n                    </div>\r\n\r\n                            <div className=\"inline m-0 px-5\">\r\n                        <h6 >date returned :</h6>\r\n                        <div>\r\n                            <DatePicker\r\n                                        className=\"form-control inline-2 p-2\"\r\n                                dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        disabled={this.state.profileShow.profile.id && this.state.profileShow.profile.id > 0 &&\r\n                                            this.state.profileShow.profile.returnedAt ? '' : 'disabled'}\r\n                            /*isClearable\r\n                            placeholderText=\"select Date!\"*/\r\n                                        selected={(this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt)) || \r\n                                null}\r\n                                onChange={date => {\r\n                                    this.onDateReturnedChange(date);\r\n                                    //console.log(\"date changed = \" + date);                               \r\n                                }} />\r\n                        </div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 d-flex justify-content-center\">\r\n                                <button className=\"btn btn-mybtn px-5\" onClick={this.saveUpdated}>Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                            </div>\r\n                        \r\n                        </div> {/*************** form right over  **************/}\r\n\r\n                        <div className=\"inline w50\">{/*************** form left **************/}\r\n                           \r\n                            <h6 className=\"\">selected inventory :</h6>\r\n                            {this.state.profileShow.x == null && this.state.selectedPds &&\r\n                                this.state.selectedPds.map((pd, i) =>\r\n                                    <div>                                        \r\n                                    {i+1} :&nbsp;<input value={pd.name} className='form-control inline w80 m-0 p-2 pl-3' />\r\n                                       \r\n                                        <button className=\"btn btn-mybtn btn-delete m-0 ml-1\" type=\"button\"\r\n                                            onClick={() => {\r\n                                                this.oninventoryRemove(i);\r\n                                            }}><i class=\"fa fa-close ml-auto\">                                                \r\n                                            </i></button>\r\n                                    </div>\r\n                                )}\r\n                            {this.state.profileShow.x != null &&\r\n                                <>\r\n                                <input value={this.state.profileShow.profile.inventoryNumber} className='form-control inline w90 m-0 p-2 pl-3'\r\n\r\n                                />{this.state.changedPd && <i class=\"fa fa-undo ml-1\" onClick={() => { this.returnOriginalPd()}}>\r\n                                </i>}\r\n                                <p style={{ fontSize: \"70%\" }}> ps : selecting inventory from filter will change current inventory </p>\r\n                                </>\r\n                            }\r\n                        </div>{/**********  form left over **********************/}\r\n                    </div>{/*************** form over ********************/}\r\n                    <p style={{ fontSize: \"80%\" }}> ps : changing date will alter previous records and may cause lose of data </p>\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileInnerComponent"]},"metadata":{},"sourceType":"module"}