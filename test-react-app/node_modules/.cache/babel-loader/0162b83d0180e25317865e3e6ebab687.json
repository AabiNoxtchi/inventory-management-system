{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ProductDataService from '../service/ProductDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\n\nclass ProductComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCheckedElement = event => {\n      console.log('in handle checked element');\n\n      if (event.target.value === this.state.productType) {} else {\n        this.setState({\n          productType: event.target.value\n        });\n      }\n    };\n\n    this.filterSubCategories = value => {\n      console.log('in filtersub categories value = ' + value.value);\n      let category = this.state.categories.find(c => c.id == value.value);\n      let amor = category.amortizationPercent;\n      let filteredsubs = [];\n      let subs = this.state.subCategories;\n\n      for (let i = 0; i < subs.length; i++) {\n        console.log('value.value = ' + value.value);\n        console.log('subs[i].category.id = ' + subs[i].category.id);\n\n        if (subs[i].category.id == value.value) {\n          filteredsubs.push(subs[i]);\n        }\n      }\n\n      this.setState({\n        filteredSubCategories: filteredsubs,\n        subCategory: '',\n        maxamortization: amor\n      });\n    };\n\n    this.setCategory = value => {\n      let sub = this.state.subCategories.find(s => s.id == value.value);\n      this.setState({\n        subCategory: sub\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      description: '',\n      productType: '',\n      productTypes: [],\n      subCategory: '',\n      subCategories: [],\n      filteredSubCategories: [],\n      categories: [],\n      amortizationPercent: '',\n      maxamortization: 100\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    ProductDataService.retrieve(this.state.id).then(response => {\n      console.log('got response in component did mount');\n\n      if (this.state.id > 0) {\n        this.setState({\n          name: response.data.name,\n          description: response.data.description,\n          productType: response.data.productType,\n          subCategory: response.data.subCategory,\n          amortizationPercent: response.data.amortizationPercent\n        });\n      }\n\n      this.setState({\n        productTypes: response.data.productTypes,\n        subCategories: response.data.subCategories,\n        filteredSubCategories: response.data.subCategories,\n        categories: response.data.categories\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let item = {\n      id: this.state.id,\n      name: values.name,\n      targetDate: values.targetDate\n    };\n    console.log('item = ' + item);\n    ProductDataService.save(item).then(() => this.props.history.push('/products'));\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = 'required field !!!';\n    } else if (values.name.length < 5) {\n      errors.userName = 'Enter atleast 5 Characters';\n    }\n\n    if (!values.productType) {\n      errors.productType = 'required field !!!';\n    }\n\n    if (values.productType === 'DMA') {\n      if (!values.subCategory) {\n        errors.subCategory = 'required field !!!';\n      }\n\n      if (!values.amortizationPercent) {\n        errors.amortizationPercent = 'required field !!!';\n      }\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    this.props.history.push('/products');\n  }\n\n  render() {\n    console.log('rendering');\n    let {\n      id,\n      name,\n      description,\n      productType,\n      productTypes,\n      amortizationPercent,\n      categories,\n      subCategory,\n      subCategories,\n      filteredSubCategories,\n      maxamortization\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Product \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          name,\n          description,\n          productType,\n          productTypes,\n          amortizationPercent,\n          subCategory,\n          categories,\n          subCategories,\n          filteredSubCategories,\n          maxamortization\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          props,\n          setFieldValue,\n          isSubmitting,\n          getFieldProps,\n          handleChange,\n          handleBlur,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              as: \"textarea\",\n              type: \"textarea\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 37\n            }, this), productTypes.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mx-3\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-1\",\n                type: \"checkbox\",\n                name: \"productType\",\n                value: type.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 49\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"productType\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 33\n          }, this), // this.state.productType === 'DMA' &&\n          !!values.productType === 'DMA' ? /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 189,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"w-50\",\n                items: categories,\n                value: subCategory !== '' ? subCategory.category.id : '',\n                onChange: this.filterSubCategories\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \" selectedCategoryId\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"sub category\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                name: \"subCategory\",\n                className: \"w-50\",\n                items: filteredSubCategories,\n                value: subCategory !== '' ? subCategory.id : '',\n                onChange: this.setCategory\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \" selectedCategoryId\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"amortization percent\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control w-50\",\n                min: \"0\",\n                max: maxamortization,\n                type: \"number\",\n                name: \"amortizationPercent\",\n                placeholder: \"max =\" + maxamortization\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"amortizationPercent\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 37\n          }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 230,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ProductDataService","CustomSelect","ProductComponent","constructor","props","handleCheckedElement","event","console","log","target","value","state","productType","setState","filterSubCategories","category","categories","find","c","id","amor","amortizationPercent","filteredsubs","subs","subCategories","i","length","push","filteredSubCategories","subCategory","maxamortization","setCategory","sub","s","match","params","name","description","productTypes","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","values","item","targetDate","save","history","errors","userName","render","setFieldValue","isSubmitting","getFieldProps","handleChange","handleBlur","map","type"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport ProductDataService from '../service/ProductDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\nclass ProductComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: '',\r\n            productType: '',\r\n            productTypes: [],           \r\n            subCategory: '',          \r\n            subCategories: [],\r\n            filteredSubCategories:[],\r\n            categories: [],           \r\n            amortizationPercent: '',\r\n            maxamortization:100,\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n       \r\n        ProductDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log('got response in component did mount');\r\n                if (this.state.id > 0) {\r\n                    this.setState({\r\n                        name: response.data.name,\r\n                        description: response.data.description,\r\n                        productType: response.data.productType,\r\n                        subCategory: response.data.subCategory,\r\n                        amortizationPercent: response.data.amortizationPercent,\r\n                    })\r\n                }\r\n                this.setState({\r\n                    productTypes: response.data.productTypes,\r\n                    subCategories: response.data.subCategories,\r\n                    filteredSubCategories: response.data.subCategories,\r\n                    categories: response.data.categories,\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let item = {\r\n            id: this.state.id,\r\n            name: values.name,\r\n           \r\n            targetDate: values.targetDate\r\n        }\r\n        console.log('item = ' + item);\r\n       ProductDataService.save(item)\r\n            .then(() => this.props.history.push('/products'))\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            errors.name = 'required field !!!'\r\n        } else if (values.name.length < 5) {\r\n            errors.userName = 'Enter atleast 5 Characters'\r\n        }\r\n\r\n        if (!values.productType) {\r\n            errors.productType = 'required field !!!'\r\n        }\r\n\r\n        if (values.productType === 'DMA') {\r\n\r\n            if (!values.subCategory) {\r\n                errors.subCategory = 'required field !!!'\r\n            }\r\n            if (!values.amortizationPercent) {\r\n                errors.amortizationPercent = 'required field !!!'\r\n            }\r\n        }\r\n\r\n       \r\n\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        this.props.history.push('/products')\r\n    }\r\n\r\n    handleCheckedElement = (event) => {\r\n        console.log('in handle checked element');\r\n        if (event.target.value === this.state.productType) {           \r\n        } else {\r\n            this.setState({\r\n                productType: event.target.value\r\n            })\r\n        }\r\n    }\r\n\r\n    filterSubCategories = (value) => {\r\n\r\n        console.log('in filtersub categories value = ' + value.value);\r\n\r\n        let category = this.state.categories.find(c => c.id == value.value);\r\n        let amor = category.amortizationPercent;\r\n        let filteredsubs = [];\r\n        let subs = this.state.subCategories;\r\n        for (let i = 0; i < subs.length; i++) {\r\n            console.log('value.value = ' + value.value);\r\n            console.log('subs[i].category.id = ' + subs[i].category.id);\r\n            if (subs[i].category.id == value.value) {\r\n                filteredsubs.push(subs[i])\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            filteredSubCategories: filteredsubs,\r\n            subCategory: '',\r\n            maxamortization: amor\r\n        })\r\n    }\r\n\r\n    setCategory = (value) => {\r\n\r\n        let sub = this.state.subCategories.find(s => s.id == value.value);\r\n        this.setState({\r\n            subCategory: sub\r\n        })\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        console.log('rendering');\r\n        let { id, name, description, productType, productTypes, amortizationPercent, categories, subCategory, subCategories, filteredSubCategories, maxamortization} = this.state\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Product</h3> : <h3 className=\"mb-3\"> Add New Product </h3>}\r\n                <Formik\r\n                    initialValues={{ id, name, description, productType, productTypes, amortizationPercent, subCategory, categories, subCategories, filteredSubCategories, maxamortization}}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        ({ props, setFieldValue, isSubmitting, getFieldProps, handleChange, handleBlur, values}) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>name</label>\r\n                                    <Field className=\"form-control w-25\" type=\"text\" name=\"name\"\r\n                                   />\r\n                                    <ErrorMessage name=\"name\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>description</label>\r\n                                    <Field className=\"form-control w-50\" as=\"textarea\" type=\"textarea\" name=\"description\" />\r\n                                    <ErrorMessage name=\"description\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>product type</label>\r\n                                    {\r\n                                        productTypes.map((type) =>\r\n                                            <label className=\"mx-3\">\r\n                                                <Field\r\n                                                    className=\"mx-1\"\r\n                                                    type=\"checkbox\" name=\"productType\" value={type.value}\r\n                                                    />\r\n                                                {type.name}\r\n                                    </label>)\r\n                                    }\r\n                                   \r\n                                    <ErrorMessage name=\"productType\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                {// this.state.productType === 'DMA' &&\r\n                                    !!values.productType === 'DMA' ? (\r\n                                   \r\n                                    <div>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>category</label>\r\n                                        <CustomSelect                                               \r\n                                                className={\"w-50\"}\r\n                                                items={categories}\r\n                                                value={subCategory !== '' ? subCategory.category.id : ''}\r\n                                                onChange={this.filterSubCategories}\r\n                                      \r\n                                            />\r\n                                        <ErrorMessage name=\" selectedCategoryId\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                  \r\n                               \r\n\r\n\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>sub category</label>\r\n                                        <CustomSelect\r\n                                            name=\"subCategory\"\r\n                                            className={\"w-50\"}\r\n                                                items={filteredSubCategories}\r\n                                            value={subCategory !== '' ? subCategory.id : ''}\r\n                                                onChange={this.setCategory}\r\n                                        />\r\n                                        <ErrorMessage name=\" selectedCategoryId\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group\">\r\n                                            <label>amortization percent</label>\r\n                                            <Field className=\"form-control w-50\" min=\"0\" max={maxamortization} type=\"number\" name=\"amortizationPercent\" placeholder={\"max =\" + maxamortization} />\r\n                                            <ErrorMessage name=\"amortizationPercent\" component=\"div\"\r\n                                                className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                        </div>\r\n                                    ) : null\r\n                                }\r\n                                    \r\n\r\n                               \r\n                                \r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductComponent"]},"metadata":{},"sourceType":"module"}