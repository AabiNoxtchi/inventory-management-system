{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\ProductDetailFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport DatePicker from \"react-datepicker\";\nimport \"react-datepicker/dist/react-datepicker.css\";\n\nclass ProductDetailFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      priceMoreThan: props.priceMoreThan,\n      priceLessThan: props.priceLessThan,\n      isDiscarded: props.isDiscarded,\n      // isAvailable: props.isAvailable,\n      econdition: props.econdition,\n      econditions: props.econditions,\n      deliveryNumbers: props.deliveryNumbers,\n      deliveryId: props.deliveryId,\n      productNames: props.productNames,\n      productId: props.productId,\n      inventoryNumbers: props.inventoryNumbers,\n      filteredInventoryNumbers: props.inventoryNumbers,\n      id: props.id,\n      // inventoryNumber: props.inventoryNumber,\n      productTypes: props.productTypes,\n      productType: props.productType,\n      dateCreatedBefore: props.dateCreatedBefore,\n      dateCreatedAfter: props.dateCreatedAfter,\n      amortizationPercentMoreThan: props.amortizationPercentMoreThan,\n      amortizationPercentLessThan: props.amortizationPercentLessThan,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  componentWillUnmount() {\n    console.log(\"************************filter dying****************************\");\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      //console.log('field key =' + key);\n      //console.log('field value =' + value);\n      if (!key.endsWith(\"s\") && value && value != 'undefined') {\n        /*if ((values.productType === 'MA' && key === 'amortizationPercentMoreThan') ||\r\n            (values.productType === 'MA' && key === 'amortizationPercentLessThan') ||\r\n            (key === 'maxmore') ||\r\n            (key === 'minless') ||\r\n            (key === 'maxtotal') ||\r\n            (key === 'mintotal')) { }\r\n        else*/\n        if (key.startsWith('date')) {\n          value = new Date(value).toISOString();\n          value = value.substring(0, value.indexOf('T'));\n        }\n\n        newPath += prefix + '.' + key + '=' + value + '&';\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = path + '?' + newPath;\n    console.log('newPath =' + newPath);\n    window.location.href = newPath;\n  }\n\n  resetForm() {\n    // window.location.href = window.location.pathname;\n    // values.name = null;\n    // this.props.history.push('/home')\n    this.props.history.push('/productdetails');\n    this.setState({\n      //  all: props.all,\n      priceMoreThan: null,\n      priceLessThan: null,\n      isDiscarded: null,\n      // isAvailable: props.isAvailable,\n      econdition: null,\n      //econditions: props.econditions,\n      //deliveryNumbers: props.deliveryNumbers,\n      deliveryId: null,\n      //productNames: props.productNames,\n      productId: null,\n      //inventoryNumbers: props.inventoryNumbers,\n      filteredInventoryNumbers: this.state.inventoryNumbers,\n      id: null,\n      // inventoryNumber: props.inventoryNumber,\n      // productTypes: props.productTypes,\n      productType: null,\n      dateCreatedBefore: null,\n      dateCreatedAfter: null,\n      amortizationPercentMoreThan: null,\n      amortizationPercentLessThan: null //prefix: props.prefix,\n\n    });\n    /* this.setState({\r\n         all: '',\r\n         name: '',\r\n         productType: '',\r\n         amortizationPercentMoreThan: '',\r\n         amortizationPercentLessThan: '',\r\n         totalCountMoreThan: '',\r\n         totalCountLessThan:''\r\n     });\r\n     console.log('in reset form ');*/\n  }\n\n  render() {\n    console.log(\"rendering inventory filter\");\n    let {\n      all,\n      priceMoreThan,\n      priceLessThan,\n      isDiscarded,\n\n      /*isAvailable,*/\n      deliveryNumbers,\n      deliveryId,\n      econdition,\n      econditions,\n      productNames,\n      productId,\n      inventoryNumbers,\n      id,\n      productTypes,\n      productType,\n      dateCreatedBefore,\n      //inventoryNumber\n      dateCreatedAfter,\n      amortizationPercentMoreThan,\n      amortizationPercentLessThan,\n      filteredInventoryNumbers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        priceMoreThan,\n        priceLessThan,\n        isDiscarded,\n\n        /*isAvailable,*/\n        deliveryNumbers,\n        deliveryId,\n        econdition,\n        econditions,\n        productNames,\n        productId,\n        inventoryNumbers,\n        id,\n        productTypes,\n        productType,\n        dateCreatedBefore,\n        dateCreatedAfter,\n        amortizationPercentMoreThan,\n        amortizationPercentLessThan,\n        filteredInventoryNumbers //inventoryNumber,\n\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: [console.log(\"this.tate.deliveryId = \" + this.state.deliveryId), console.log(\"values.deliveryId = \" + values.deliveryId), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-3 foo\",\n              items: productNames,\n              value: values.productId,\n              onChange: selected => {\n                setFieldValue(\"productId\", selected.value);\n                let subs = values.filteredInventoryNumbers; // let sub = values.filteredInventoryNumbers.\n\n                subs = [];\n\n                for (let i = 0; i < values.inventoryNumbers.length; i++) {\n                  if (values.inventoryNumbers[i].filterBy == selected.value) {\n                    subs.push(values.inventoryNumbers[i]);\n                  }\n                }\n\n                setFieldValue(\"filteredInventoryNumbers\", subs);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), console.log(\"values.inventoryNumbers.length = \" + values.inventoryNumbers.length), console.log(\"values.filteredInventoryNumbers.length = \" + values.filteredInventoryNumbers.length), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"inventory number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4 foo\",\n              items: values.filteredInventoryNumbers,\n              value: values.id,\n              onChange: selected => setFieldValue(\"id\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this), !this.props.short && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"price\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border \",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"more than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                max: values.priceLessThan || \"\",\n                name: \"priceMoreThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"less than\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control in-inline inline-100px\",\n                type: \"number\",\n                min: values.priceMoreThan || 0,\n                name: \"priceLessThan\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"date created\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"after\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline \",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control in-inline inline-2 foo\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: values.dateCreatedBefore,\n                  selected: values.dateCreatedAfter && new Date(values.dateCreatedAfter),\n                  isClearable: true,\n                  onChange: date => setFieldValue(\"dateCreatedAfter\", date),\n                  shouldCloseOnSelect: true,\n                  showYearDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 219,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"before\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2 foo\",\n                dateFormat: \"MMMM dd yyyy\",\n                locale: \"en-GB\",\n                minDate: values.dateCreatedAfter,\n                selected: values.dateCreatedBefore && new Date(values.dateCreatedBefore),\n                isClearable: true,\n                onChange: date => setFieldValue(\"dateCreatedBefore\", date),\n                highlightDates: new Date(),\n                shouldCloseOnSelect: true,\n                showYearDropdown: true,\n                dropdownMode: \"select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 29\n          }, this), !this.props.short && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [values.productTypes && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"product type :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 250,\n                columnNumber: 37\n              }, this), productTypes.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline\",\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: \"mx-2\",\n                  type: \"checkbox\",\n                  name: \"productType\",\n                  value: type.value,\n                  checked: type.name === values.productType,\n                  onChange: value => {\n                    console.log('value of checked = ' + value.target.value);\n                    setFieldValue(\"productType\", value.target.value == values.productType ? null : value.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 49\n                }, this), type.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 45\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 249,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"amortization\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline px-2 border\",\n                style: {\n                  borderRadius: \"3px\"\n                },\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"mb-1 fw-s\",\n                  children: \"more than\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control in-inline inline-75px\",\n                  type: \"number\",\n                  min: \"0\",\n                  max: values.amortizationPercentLessThan || 100,\n                  name: \"amortizationPercentMoreThan\",\n                  disabled: values.productType == 'STA',\n                  value: values.productType == 'STA' ? '' : values.amortizationPercentMoreThan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 41\n                }, this), \"\\xA0%\", /*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"pl-2 mb-1 fw-s\",\n                  children: \"less than\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 279,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control in-inline inline-75px\",\n                  type: \"number\",\n                  min: values.amortizationPercentMoreThan || 0,\n                  max: \"100\",\n                  name: \"amortizationPercentLessThan\",\n                  disabled: values.productType == 'STA',\n                  value: values.productType == 'STA' ? '' : values.amortizationPercentLessThan\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 41\n                }, this), \"\\xA0%\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 33\n            }, this), values.deliveryNumbers && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"delivery\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 287,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-2\",\n                items: deliveryNumbers,\n                value: values.deliveryId,\n                onChange: selected => setFieldValue(\"deliveryId\", selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this), values.econditions && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"condition :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 41\n              }, this), econditions.map(type => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline\",\n                children: [/*#__PURE__*/_jsxDEV(Field, {\n                  className: \"mx-2\",\n                  type: \"checkbox\",\n                  name: \"econdition\",\n                  value: type.value,\n                  checked: type.name === values.econdition,\n                  onChange: value => {\n                    console.log('value of checked = ' + value.target.value);\n                    setFieldValue(\"econdition\", value.target.value == values.econdition ? null : value.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 53\n                }, this), type.name]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline pr-2 mr-2\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mr-2 pt-3\",\n                type: \"checkbox\",\n                name: \"isDiscarded\",\n                value: true,\n                checked: values.isDiscarded == true,\n                onChange: value => {\n                  console.log('value of checked = ' + value.target.value);\n                  setFieldValue(\"isDiscarded\", values.isDiscarded == true ? null : true);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 33\n              }, this), \"discarded\", /*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-2 pt-3\",\n                type: \"checkbox\",\n                name: \"isDiscarded\",\n                value: false,\n                checked: values.isDiscarded == false,\n                onChange: value => {\n                  console.log('value of checked = ' + value.target.value);\n                  setFieldValue(\"isDiscarded\", values.isDiscarded == false ? null : false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 33\n              }, this), \"not discarded\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 369,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"reset\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 29\n          }, this), this.props.ids && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"\",\n            children: /*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"mt-3 \",\n              children: \"Fully amortized inventories\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 373,\n            columnNumber: 48\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductDetailFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/ProductDetailFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","DatePicker","ProductDetailFilter","constructor","props","state","all","priceMoreThan","priceLessThan","isDiscarded","econdition","econditions","deliveryNumbers","deliveryId","productNames","productId","inventoryNumbers","filteredInventoryNumbers","id","productTypes","productType","dateCreatedBefore","dateCreatedAfter","amortizationPercentMoreThan","amortizationPercentLessThan","prefix","onSubmit","bind","resetForm","componentWillUnmount","console","log","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","Date","toISOString","indexOf","href","history","push","setState","render","setFieldValue","selected","subs","filterBy","short","borderRadius","date","type","name","target","ids"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css'\r\n\r\nimport DatePicker from \"react-datepicker\";\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\n\r\nclass ProductDetailFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            priceMoreThan: props.priceMoreThan,\r\n            priceLessThan: props.priceLessThan,\r\n            isDiscarded: props.isDiscarded,\r\n           // isAvailable: props.isAvailable,\r\n            econdition: props.econdition,\r\n            econditions: props.econditions,\r\n            deliveryNumbers: props.deliveryNumbers,\r\n            deliveryId: props.deliveryId,\r\n\r\n            productNames: props.productNames,\r\n            productId: props.productId,           \r\n            inventoryNumbers: props.inventoryNumbers,\r\n            filteredInventoryNumbers: props.inventoryNumbers,\r\n            id: props.id,\r\n           // inventoryNumber: props.inventoryNumber,\r\n            productTypes: props.productTypes,\r\n            productType: props.productType,\r\n            dateCreatedBefore: props.dateCreatedBefore,\r\n            dateCreatedAfter: props.dateCreatedAfter,\r\n\r\n            amortizationPercentMoreThan: props.amortizationPercentMoreThan,\r\n            amortizationPercentLessThan: props.amortizationPercentLessThan,\r\n           \r\n            prefix: props.prefix,            \r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log(\"************************filter dying****************************\")\r\n    }\r\n\r\n\r\n\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            //console.log('field key =' + key);\r\n            //console.log('field value =' + value);\r\n            if (!key.endsWith(\"s\") && value && value != 'undefined') {\r\n                /*if ((values.productType === 'MA' && key === 'amortizationPercentMoreThan') ||\r\n                    (values.productType === 'MA' && key === 'amortizationPercentLessThan') ||\r\n                    (key === 'maxmore') ||\r\n                    (key === 'minless') ||\r\n                    (key === 'maxtotal') ||\r\n                    (key === 'mintotal')) { }\r\n                else*/\r\n                if (key.startsWith('date')) {\r\n                    value = (new Date(value)).toISOString();\r\n                    value = value.substring(0, value.indexOf('T'))\r\n                }\r\n                 newPath += prefix + '.' + key + '=' + value + '&' \r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        newPath = path + '?' + newPath;\r\n        console.log('newPath =' + newPath);\r\n\r\n        window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n\r\n\r\n\r\n       // window.location.href = window.location.pathname;\r\n        // values.name = null;\r\n       // this.props.history.push('/home')\r\n        this.props.history.push('/productdetails');\r\n\r\n        this.setState({\r\n          //  all: props.all,\r\n            priceMoreThan: null,\r\n            priceLessThan: null,\r\n            isDiscarded: null,\r\n            // isAvailable: props.isAvailable,\r\n            econdition: null,\r\n            //econditions: props.econditions,\r\n            //deliveryNumbers: props.deliveryNumbers,\r\n            deliveryId: null,\r\n\r\n            //productNames: props.productNames,\r\n            productId: null,\r\n            //inventoryNumbers: props.inventoryNumbers,\r\n            filteredInventoryNumbers: this.state.inventoryNumbers,\r\n            id: null,\r\n            // inventoryNumber: props.inventoryNumber,\r\n           // productTypes: props.productTypes,\r\n            productType: null,\r\n            dateCreatedBefore: null,\r\n            dateCreatedAfter: null,\r\n\r\n            amortizationPercentMoreThan: null,\r\n            amortizationPercentLessThan: null,\r\n\r\n            //prefix: props.prefix,\r\n        })\r\n\r\n        /* this.setState({\r\n             all: '',\r\n             name: '',\r\n             productType: '',\r\n             amortizationPercentMoreThan: '',\r\n             amortizationPercentLessThan: '',\r\n             totalCountMoreThan: '',\r\n             totalCountLessThan:''\r\n         });\r\n         console.log('in reset form ');*/\r\n    }\r\n\r\n    render() {\r\n\r\n        console.log(\"rendering inventory filter\")\r\n\r\n        let { all, priceMoreThan, priceLessThan, isDiscarded, /*isAvailable,*/ deliveryNumbers, deliveryId, econdition, econditions,\r\n            productNames, productId, inventoryNumbers, id, productTypes, productType, dateCreatedBefore,//inventoryNumber\r\n            dateCreatedAfter, amortizationPercentMoreThan, amortizationPercentLessThan, filteredInventoryNumbers} = this.state\r\n\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{\r\n                    all, priceMoreThan, priceLessThan, isDiscarded, /*isAvailable,*/ deliveryNumbers, deliveryId, econdition, econditions,\r\n                    productNames, productId, inventoryNumbers, id, productTypes, productType, dateCreatedBefore,\r\n                    dateCreatedAfter, amortizationPercentMoreThan, amortizationPercentLessThan, filteredInventoryNumbers//inventoryNumber,\r\n                }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        {console.log(\"this.tate.deliveryId = \" + this.state.deliveryId)}\r\n                        {console.log(\"values.deliveryId = \" + values.deliveryId)}\r\n                        <fieldset >\r\n                            <div className=\"inline\">\r\n                                <label>product&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-3 foo\"}\r\n                                    items={productNames}\r\n                                    value={values.productId}\r\n                                    onChange={(selected) => {\r\n                                        setFieldValue(\"productId\", selected.value);\r\n                                        let subs = values.filteredInventoryNumbers;\r\n                                       // let sub = values.filteredInventoryNumbers.\r\n                                        subs = [];\r\n                                        for (let i = 0; i < values.inventoryNumbers.length; i++) {\r\n\r\n                                            if (values.inventoryNumbers[i].filterBy == selected.value) {\r\n                                                subs.push(values.inventoryNumbers[i])\r\n                                            }\r\n                                        }\r\n                                        setFieldValue(\"filteredInventoryNumbers\", subs);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            {console.log(\"values.inventoryNumbers.length = \" + values.inventoryNumbers.length)}\r\n                            {console.log(\"values.filteredInventoryNumbers.length = \" + values.filteredInventoryNumbers.length)}\r\n                            <div className=\"inline\">\r\n                                <label>inventory number&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4 foo\"}\r\n                                    items={values.filteredInventoryNumbers}\r\n                                    value={values.id}\r\n                                    onChange={(selected) => setFieldValue(\"id\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            {!this.props.short&&\r\n                                <div className=\"inline\">\r\n                                    <label className=\"mb-1\">price&nbsp;</label>\r\n                                <div className=\"inline px-2 border \" style={{ borderRadius: \"3px\" }}>\r\n                                        <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-100px\" type=\"number\" min=\"0\" max={values.priceLessThan || \"\"}\r\n                                            name=\"priceMoreThan\" />\r\n                                        <label className=\"pl-1 mb-1 fw-s\">less than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-100px\" type=\"number\" min={values.priceMoreThan || 0}\r\n                                            name=\"priceLessThan\" />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"inline\">\r\n                                <label className=\"mb-1\">date created&nbsp;</label>\r\n                                <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                    <label className=\"mb-1 fw-s\">after&nbsp;</label>\r\n                                    <div className=\"inline \">\r\n                                        <DatePicker className=\"form-control in-inline inline-2 foo\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            maxDate={values.dateCreatedBefore}\r\n                                            selected={values.dateCreatedAfter && new Date(values.dateCreatedAfter)}\r\n                                            isClearable\r\n                                            onChange={date => setFieldValue(\"dateCreatedAfter\", date)}\r\n                                            shouldCloseOnSelect={true}\r\n                                            showYearDropdown\r\n                                            dropdownMode=\"select\"/>\r\n                                    </div>\r\n\r\n                                    <label className=\"pl-1 mb-1 fw-s\">before&nbsp;</label>\r\n                                    <DatePicker className=\"form-control in-inline inline-2 foo\"\r\n                                        dateFormat=\"MMMM dd yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        minDate={values.dateCreatedAfter}\r\n                                        selected={values.dateCreatedBefore && new Date(values.dateCreatedBefore)}\r\n                                        isClearable\r\n                                        onChange={date => setFieldValue(\"dateCreatedBefore\", date)}\r\n                                        highlightDates={new Date()}\r\n                                        shouldCloseOnSelect={true}\r\n                                        showYearDropdown\r\n                                        dropdownMode=\"select\"/>\r\n                                </div>\r\n                            </div>\r\n                            {!this.props.short &&\r\n                            <>\r\n                            {values.productTypes &&\r\n                                <div className=\"inline\">\r\n                                    <label>product type :</label>\r\n                                    {\r\n                                        productTypes.map((type) =>\r\n                                            <div className=\"inline\">\r\n                                                <Field\r\n                                                    className=\"mx-2\" type=\"checkbox\" name=\"productType\"\r\n                                                    value={type.value} checked={type.name === values.productType}\r\n                                                    onChange={(value) => {\r\n                                                        console.log('value of checked = ' + value.target.value);\r\n                                                        setFieldValue(\"productType\", value.target.value == values.productType ? null : value.target.value);\r\n                                                    }}\r\n                                                />\r\n                                                {type.name}\r\n                                            </div>\r\n                                        )\r\n                                    }\r\n                                </div>\r\n                            }\r\n                               \r\n\r\n                                {/*values.productType == 'STA' ? \"inline d-none\" : \"inline\"*/}  \r\n                                <div className=\"inline\"\r\n                                >\r\n                                    <label className=\"mb-1\">amortization&nbsp;</label>\r\n                                    <div className=\"inline px-2 border\" style={{ borderRadius: \"3px\" }}>\r\n                                        <label className=\"mb-1 fw-s\">more than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-75px\" type=\"number\" min=\"0\" max={values.amortizationPercentLessThan || 100}\r\n                                            name=\"amortizationPercentMoreThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentMoreThan} />&nbsp;%\r\n                                    <label className=\"pl-2 mb-1 fw-s\">less than&nbsp;</label>\r\n                                        <Field className=\"form-control in-inline inline-75px\" type=\"number\" min={values.amortizationPercentMoreThan || 0} max=\"100\"\r\n                                            name=\"amortizationPercentLessThan\" disabled={values.productType == 'STA'}\r\n                                            value={values.productType == 'STA' ? '' : values.amortizationPercentLessThan}/>&nbsp;%\r\n                                        </div>\r\n                            </div>\r\n                            {values.deliveryNumbers &&\r\n                                <div className=\"inline\">\r\n                                    <label>delivery&nbsp;</label>\r\n                                    <CustomSelect\r\n                                        className={\"inline inline-2\"}\r\n                                        items={deliveryNumbers}\r\n                                        value={values.deliveryId}\r\n                                        onChange={(selected) => setFieldValue(\"deliveryId\", selected.value)}\r\n                                    />\r\n                                </div>\r\n                                }\r\n\r\n                                {values.econditions &&\r\n                                    <div className=\"inline\">\r\n                                        <label>condition :</label>\r\n                                        {\r\n                                            econditions.map((type) =>\r\n                                                <div className=\"inline\">\r\n                                                    <Field\r\n                                                        className=\"mx-2\" type=\"checkbox\" name=\"econdition\"\r\n                                                        value={type.value} checked={type.name === values.econdition}\r\n                                                        onChange={(value) => {\r\n                                                            console.log('value of checked = ' + value.target.value);\r\n                                                            setFieldValue(\"econdition\", value.target.value == values.econdition ? null : value.target.value);\r\n                                                        }}\r\n                                                    />\r\n                                                    {type.name}\r\n                                                </div>\r\n                                            )\r\n                                        }\r\n                                    </div>\r\n                                }\r\n                           \r\n\r\n                            <div className=\"inline pr-2 mr-2\">\r\n                                <Field\r\n                                    className=\"mr-2 pt-3\" type=\"checkbox\" name=\"isDiscarded\"                                    \r\n                                    value={true} checked={values.isDiscarded == true}\r\n                                    onChange={(value) => {\r\n                                        console.log('value of checked = ' + value.target.value);\r\n                                        setFieldValue(\"isDiscarded\", values.isDiscarded == true ? null : true);\r\n                                    }}\r\n                                />discarded\r\n                                <Field\r\n                                    className=\"mx-2 pt-3\" type=\"checkbox\" name=\"isDiscarded\"\r\n                                    value={false} checked={values.isDiscarded == false}\r\n                                    onChange={(value) => {\r\n                                        console.log('value of checked = ' + value.target.value);\r\n                                        setFieldValue(\"isDiscarded\", values.isDiscarded == false ? null : false);\r\n                                    }}\r\n                                />not discarded\r\n                            </div>\r\n\r\n                                {/*  <div className=\"inline pr-2 mr-2\">\r\n                                <Field\r\n                                    className=\"mr-2 pt-3\" type=\"checkbox\" name=\"isAvailable\"\r\n                                    value={true} checked={values.isAvailable == true}\r\n                                    onChange={(value) => {\r\n                                        // console.log('value of checked = ' + value.target.value);\r\n                                        setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\r\n                                    }}\r\n                                />available\r\n                                <Field\r\n                                    className=\"mx-2 pt-3\" type=\"checkbox\" name=\"isAvailable\"\r\n                                    value={false} checked={values.isAvailable == false}\r\n                                    onChange={(value) => {\r\n                                        // console.log('value of checked = ' + value.target.value);\r\n                                        setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\r\n                                    }}\r\n                                />missing\r\n                            </div>*/}\r\n\r\n                               \r\n\r\n\r\n                                </>\r\n\r\n                        }\r\n\r\n\r\n                           \r\n                                \r\n\r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"reset\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n\r\n                            {this.props.ids && <div className=\"\">\r\n                                <h5 className=\"mt-3 \">Fully amortized inventories</h5>\r\n\r\n                            </div>}\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductDetailFilter"]},"metadata":{},"sourceType":"module"}