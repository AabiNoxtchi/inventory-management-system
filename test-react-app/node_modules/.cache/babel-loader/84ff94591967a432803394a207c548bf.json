{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\UserProfileFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport DatePicker from \"react-datepicker\";\n\nclass UserProfileFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      userNames: props.userNames,\n      userId: props.userId,\n      myProfile: props.myProfile,\n      productNames: props.productNames,\n      productId: props.productId,\n      inventoryNumbers: props.inventoryNumbers,\n      productDetailId: props.productDetailId,\n      givenAfter: props.givenAfter,\n      returnedBefore: props.returnedBefore,\n      prefix: props.prefix,\n      userRole: props.userRole //timeline: props.timeline.show\n\n    }; // console.log(\"userRole = \" + this.state.userRole);\n    // console.log(\"timeline = \" + this.state.timeline);\n    // console.log(\"props.timeline = \" + JSON.stringify(this.props.timeline));\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      /*if (!key.endsWith(\"s\")) {\r\n          console.log(\"key : \" + key + \" value = \" + value);\r\n         // console.log(\"value != 'undefined' : \" + (value != 'undefined'))//+ \" value.length > 1 = \" + (value.length > 1));\r\n          if(value)\r\n         // console.log( \" value.length > 1 = \" + (value.length > 1));\r\n               console.log(\"value != 'undefined' : \" + (value != 'undefined'))//+ \" value.length > 1 = \" + (value.length > 1));\r\n        }*/\n      if (!key.endsWith(\"s\") && value && value != 'undefined') {\n        if (key == 'givenAfter' || key == 'returnedBefore') {\n          value = new Date(value).toISOString();\n          value = value.substring(0, value.indexOf('T'));\n        }\n\n        newPath += prefix + '.' + key + '=' + value + '&'; //console.log(\"new path = \" + newPath)\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = path + '?' + newPath;\n    console.log('newPath =' + newPath);\n    window.location.href = newPath;\n  }\n\n  resetForm() {\n    window.location.href = window.location.pathname;\n    /* this.setState({\r\n         all: '',\r\n         firstName: '',\r\n         lastName: '',\r\n         userName: '',\r\n         email: '',\r\n     });\r\n     console.log('in reset form ');*/\n  }\n\n  render() {\n    //console.log(\"rendering filter props.timeline = \" + this.props.timeline.show);\n    let {\n      all,\n      userNames,\n      userId,\n      myProfile,\n      inventoryNumbers,\n      productDetailId,\n      productNames,\n      productId,\n      givenAfter,\n      returnedBefore\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        userNames,\n        userId,\n        myProfile,\n        inventoryNumbers,\n        productDetailId,\n        productNames,\n        productId,\n        givenAfter,\n        returnedBefore\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [this.state.userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"mx-2\",\n              type: \"checkbox\",\n              name: \"myProfile\",\n              value: values.myProfile,\n              checked: values.myProfile,\n              disabled: this.props.timeline.show,\n              onChange: value => {\n                // console.log('value of checked = ' + value.target.value);\n                setFieldValue(\"myProfile\", !values.myProfile);\n                setFieldValue(\"userId\", 'undefined');\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 41\n            }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"font-weight-bold\",\n              children: \"my profile\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-weight-bold\",\n                children: \"user\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-4\",\n                items: userNames,\n                disabled: this.props.timeline.show,\n                value: values.userId,\n                onChange: selected => {\n                  setFieldValue(\"myProfile\", false);\n                  setFieldValue(\"userId\", selected.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: productNames,\n              disabled: this.props.timeline.show,\n              value: values.productId,\n              onChange: selected => setFieldValue(\"productId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"inventory number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: inventoryNumbers,\n              disabled: this.props.timeline.show,\n              value: values.productDetailId,\n              onChange: selected => setFieldValue(\"productDetailId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"timeline\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"given after\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline \",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control in-inline inline-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  disabled: this.props.timeline.show,\n                  locale: \"en-GB\",\n                  maxDate: values.returnedBefore || new Date().setDate(new Date().getDate() - 1),\n                  selected: values.givenAfter && new Date(values.givenAfter),\n                  onChange: date => setFieldValue(\"givenAfter\", date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"returned before\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2\",\n                dateFormat: \"MMMM dd yyyy\",\n                disabled: this.props.timeline.show,\n                locale: \"en-GB\",\n                minDate: values.givenAfter,\n                maxDate: new Date().setDate(new Date().getDate() + 1),\n                selected: values.returnedBefore && new Date(values.returnedBefore),\n                onChange: date => setFieldValue(\"returnedBefore\", date),\n                highlightDates: new Date()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              disabled: this.props.timeline.show,\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              disabled: this.props.timeline.show,\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserProfileFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/UserProfileFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","DatePicker","UserProfileFilter","constructor","props","state","all","userNames","userId","myProfile","productNames","productId","inventoryNumbers","productDetailId","givenAfter","returnedBefore","prefix","userRole","onSubmit","bind","resetForm","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","Date","toISOString","indexOf","console","log","href","render","setFieldValue","timeline","show","selected","borderRadius","setDate","getDate","date"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\n\r\nclass UserProfileFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,            \r\n            userNames: props.userNames,\r\n            userId: props.userId,\r\n            myProfile: props.myProfile,\r\n            productNames: props.productNames,\r\n            productId: props.productId,\r\n            inventoryNumbers: props.inventoryNumbers,\r\n            productDetailId: props.productDetailId,\r\n            givenAfter: props.givenAfter,\r\n            returnedBefore: props.returnedBefore,\r\n            prefix: props.prefix,\r\n            userRole: props.userRole,\r\n            //timeline: props.timeline.show\r\n        }\r\n       // console.log(\"userRole = \" + this.state.userRole);\r\n       // console.log(\"timeline = \" + this.state.timeline);\r\n       // console.log(\"props.timeline = \" + JSON.stringify(this.props.timeline));\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            /*if (!key.endsWith(\"s\")) {\r\n                console.log(\"key : \" + key + \" value = \" + value);\r\n               // console.log(\"value != 'undefined' : \" + (value != 'undefined'))//+ \" value.length > 1 = \" + (value.length > 1));\r\n                if(value)\r\n               // console.log( \" value.length > 1 = \" + (value.length > 1));\r\n                     console.log(\"value != 'undefined' : \" + (value != 'undefined'))//+ \" value.length > 1 = \" + (value.length > 1));\r\n\r\n            }*/\r\n            if (!key.endsWith(\"s\") && value && value != 'undefined') {\r\n                if (key == 'givenAfter' || key =='returnedBefore') {\r\n                    value = (new Date(value)).toISOString();\r\n                    value = value.substring(0, value.indexOf('T'))\r\n                }\r\n                newPath += prefix + '.' + key + '=' + value + '&'\r\n                //console.log(\"new path = \" + newPath)\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        newPath = path + '?' + newPath;\r\n        console.log('newPath =' + newPath);\r\n\r\n        window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n\r\n        window.location.href = window.location.pathname;\r\n       /* this.setState({\r\n            all: '',\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n        });\r\n        console.log('in reset form ');*/\r\n    }\r\n\r\n    render() {\r\n        //console.log(\"rendering filter props.timeline = \" + this.props.timeline.show);\r\n\r\n        let { all, userNames, userId, myProfile, inventoryNumbers, productDetailId, productNames, productId, givenAfter, returnedBefore } = this.state\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{ all, userNames, userId, myProfile, inventoryNumbers, productDetailId, productNames, productId, givenAfter, returnedBefore }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                            {\r\n                                this.state.userRole == 'ROLE_Mol' &&\r\n                                <div className=\"inline\">\r\n                                   \r\n                                        <Field\r\n                                            className=\"mx-2\" type=\"checkbox\" name=\"myProfile\"\r\n                                        value={values.myProfile} checked={values.myProfile}\r\n                                        disabled={this.props.timeline.show}\r\n                                            onChange={(value) => {\r\n                                                // console.log('value of checked = ' + value.target.value);\r\n                                                setFieldValue(\"myProfile\", !values.myProfile);\r\n                                                setFieldValue(\"userId\", 'undefined')\r\n                                            }}\r\n                                        />  <span className=\"font-weight-bold\">my profile</span>\r\n                                   \r\n\r\n                                    <div className=\"inline ml-3\">\r\n                                        <label className=\"font-weight-bold\">user&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"inline inline-4\"}\r\n                                            items={userNames}\r\n                                            disabled={this.props.timeline.show}\r\n                                            value={values.userId}\r\n                                            onChange={(selected) => {\r\n                                                setFieldValue(\"myProfile\", false);\r\n                                                setFieldValue(\"userId\", selected.value)\r\n                                            }}\r\n                                        />\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"inline\">\r\n                                <label >product&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={productNames}\r\n                                    disabled={this.props.timeline.show}\r\n                                    value={values.productId}\r\n                                    onChange={(selected) => setFieldValue(\"productId\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >inventory number&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={inventoryNumbers}\r\n                                    disabled={this.props.timeline.show}\r\n                                    value={values.productDetailId}\r\n                                    onChange={(selected) => setFieldValue(\"productDetailId\", selected.value)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"inline\">\r\n                                <label className=\"mb-1\">timeline&nbsp;</label>\r\n                                <div className=\"inline px-2 border\" style={{\r\n                                    borderRadius:\"3px\"\r\n                                }}>\r\n                                    <label className=\"mb-1 fw-s\">given after&nbsp;</label>\r\n                                    <div className=\"inline \">\r\n                                        <DatePicker className=\"form-control in-inline inline-2\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            disabled={this.props.timeline.show}\r\n                                            locale=\"en-GB\"\r\n                                            maxDate={values.returnedBefore || (new Date()).setDate((new Date()).getDate() - 1)}\r\n                                            selected={values.givenAfter && new Date(values.givenAfter)}\r\n                                            onChange={date => setFieldValue(\"givenAfter\", date)} />\r\n                                    </div>\r\n\r\n                                    <label className=\"pl-1 mb-1 fw-s\">returned before&nbsp;</label>\r\n                                    <DatePicker className=\"form-control in-inline inline-2\"\r\n                                        dateFormat=\"MMMM dd yyyy\"\r\n                                        disabled={this.props.timeline.show}\r\n                                        locale=\"en-GB\"\r\n                                        minDate={values.givenAfter}\r\n                                        maxDate={(new Date()).setDate((new Date()).getDate()+1)}\r\n                                        selected={values.returnedBefore && new Date(values.returnedBefore)}\r\n                                        onChange={date => setFieldValue(\"returnedBefore\", date)}\r\n                                        highlightDates={new Date()} />\r\n                                </div>\r\n                            </div>\r\n\r\n                           \r\n                           \r\n                           \r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\" disabled={this.props.timeline.show}>Search</button>\r\n                                <button className=\"button btn-delete\" type=\"button\" disabled={this.props.timeline.show} onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileFilter"]},"metadata":{},"sourceType":"module"}