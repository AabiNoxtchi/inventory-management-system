{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListUserProfilesComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport PaginationComponent from './PaginationComponent';\nimport UserProfileFilter from './Filters/UserProfileFilter';\nimport '../myStyles/Style.css';\nimport { CSVLink } from \"react-csv\";\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\nimport UserProfileInnerComponent from './UserProfileInnerComponent';\nconst headers = [{\n  label: \"UserName\",\n  key: \"userName\"\n}, {\n  label: \"product\",\n  key: \"productName\"\n}, {\n  label: \"Inventory Number\",\n  key: \"inventoryNumber\"\n}, {\n  label: \"Given at\",\n  key: \"givenAt\"\n}, {\n  label: \"Returned at\",\n  key: \"returnedAt\"\n}];\n\nclass ListUserProfilesComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadReport = () => {\n      let newSearch = this.getSearchAll();\n      UserProfileDataService.retrieveAll(newSearch).then(response => {\n        let data = response.data.items;\n        data = data.map(row => ({ ...row,\n          givenAt: new Intl.DateTimeFormat(\"en-GB\", {\n            month: \"numeric\",\n            day: \"2-digit\",\n            year: \"numeric\"\n          }).format(new Date(row.givenAt)),\n          returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\n            month: \"numeric\",\n            day: \"2-digit\",\n            year: \"numeric\"\n          }).format(new Date(row.returnedAt))\n        }));\n        this.setState({\n          alldata: data\n        });\n        this.csvLink.current.link.click();\n      });\n    };\n\n    this.getSearchAll = () => {\n      let search = this.state.search;\n      search.replace(/\\s+/g, '');\n      let newSearch = '';\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage')) continue;else newSearch += searchItems[i] + '&';\n      }\n\n      newSearch = '?' + newSearch;\n      if (newSearch.length > 1) newSearch += '&';\n      newSearch += 'Pager.itemsPerPage=2147483647';\n      return newSearch;\n    };\n\n    this.cancelToGive = () => {\n      console.log(\"canceltogive\");\n      this.setState({\n        i: null,\n        selectedUserId: null\n      });\n    };\n\n    this.saveToGive = (item, giving) => {\n      console.log(\"save to give clicked\");\n      let itemToSend = {\n        previousId: item.id,\n        userId: this.state.selectedUserId || null,\n        productDetailId: item.productDetailId,\n        givenAt: new Date()\n        /*new Intl.DateTimeFormat(\"en-GB\", {\r\n        month: \"numeric\",\r\n        day: \"2-digit\",\r\n        year: \"numeric\",\r\n        }).format(new Date())*/\n\n        /* returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n             month: \"numeric\",\r\n             day: \"2-digit\",\r\n             year: \"numeric\",\r\n         }).format(new Date())*/\n\n      };\n      console.log(\"itemto send = \" + JSON.stringify(itemToSend));\n      UserProfileDataService.save(itemToSend).then(response => {\n        console.log(\"response = \" + response.data);\n        this.setState({\n          message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully '\n        });\n        this.refresh();\n      }).catch(error => {\n        console.log(\"error = \" + error);\n        console.log(\"error.response = \" + error.response);\n      });\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.state = {\n      items: [],\n      message: null,\n      pager: null,\n      filter: null,\n      search: window.location.search || '',\n      alldata: [],\n      i: null,\n      selectedUserId: null,\n      profileShow: {\n        profile: {},\n        show: false\n      },\n      timeline: {\n        show: false\n      }\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.updateClicked = this.updateClicked.bind(this); // this.addClicked = this.addClicked.bind(this)\n\n    this.csvLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh() {\n    UserProfileDataService.retrieveAll(this.state.search).then(response => {\n      //console.log(\"response data = \"+JSON.stringify(response.data));\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: response.data.filter,\n        i: null,\n        selectedUserId: null\n      });\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\n      });\n    });\n  }\n\n  deleteClicked(id) {\n    UserProfileDataService.delete(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    }).catch(error => {\n      let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\n      this.setState({\n        errormsg: msg\n      });\n    });\n  }\n  /* updateClicked(id) {\r\n       this.props.history.push(`/userprofiles/${id}`)\r\n   }*/\n\n\n  updateTimeline() {\n    /* if (!this.state.filter.productDetailId) {\r\n         //let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n         this.setState({\r\n             errormsg: \"select inventory first (by selecting inventory number from above search)  to update it's time line\"\r\n         })\r\n         return;\r\n     }*/\n    let timeline = this.state.timeline;\n    timeline.show = !timeline.show;\n    this.setState({\n      timeline: timeline,\n      message: null\n    });\n  }\n\n  updateClicked(item, x) {\n    let show = this.state.profileShow;\n    show.show = !show.show;\n\n    if (show.show == true) {\n      show.profile = JSON.parse(JSON.stringify(item));\n      show.x = x;\n    } else {\n      show.error = '';\n    }\n\n    this.setState({\n      profileShow: show,\n      message: null\n    });\n  }\n  /*addforUserClicked = () => {\r\n      let item = {\r\n        }\r\n  }*/\n\n\n  addClicked(name) {\n    //this.props.history.push(`/userprofiles/-1`)\n    console.log(\"in add clicked\");\n    console.log(\"name = \" + name);\n    let item = {\n      userId: this.state.filter.userId || null,\n      userName: name\n    };\n    this.updateClicked(item, null);\n  }\n\n  render() {\n    const userRole = AuthenticationService.getLoggedUerRole();\n    const userName = AuthenticationService.getLoggedUerName(); //const data = this.state.items;\n\n    const data = this.state.items.map(row => ({ ...row,\n      givenAt: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.givenAt)),\n      returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.returnedAt))\n    }));\n    const dataAll = '';\n    const filteredUserTitle = userRole == 'ROLE_Employee' || this.state.filter != null && this.state.filter.myProfile != null ? 'my profile' : this.state.filter != null && this.state.filter.userId != null ? this.state.filter.userNames.find(n => n.value == this.state.filter.userId).name : null;\n    console.log(\"filteredUserTitle = \" + filteredUserTitle);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.i != null ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), this.state.profileShow.profile && this.state.profileShow.show == true && /*#__PURE__*/_jsxDEV(UserProfileInnerComponent, {\n        profileShow: this.state.profileShow,\n        items: this.state.items,\n        filter: this.state.filter,\n        message: this.state.message // suppliers={this.state.filter.suppliers}\n        ,\n        updateClicked: () => this.updateClicked(null),\n        refresh: () => this.refresh(),\n        setMessage: value => this.setState({\n          message: `update successful`\n        }) //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 262,\n        columnNumber: 21\n      }, this), this.state.filter && /*#__PURE__*/_jsxDEV(UserProfileFilter, { ...this.state.filter,\n        userRole: userRole,\n        timeline: this.state.timeline\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 d-inline-flex\",\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" User Profiles\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this), filteredUserTitle != null && /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [\" \\u2003(\\xA0\", filteredUserTitle, \"\\xA0)\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 280,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 278,\n            columnNumber: 25\n          }, this), userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mt-1 pull-right mr-5\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn px-3\",\n              onClick: () => {\n                this.updateTimeline();\n              },\n              children: \"Update timeline\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap \",\n            children: [!this.state.timeline.show && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [userRole == 'ROLE_Mol' &&\n              /*#__PURE__*/\n              //this.state.filter && this.state.filter.userId &&\n              _jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5  \",\n                onClick: () => {\n                  //if (filteredUserTitle == null) this.updateClicked(null, 100)\n                  this.addClicked(filteredUserTitle);\n                },\n                children: \"Add New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 298,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                data: data,\n                headers: headers,\n                filename: \"user-profiles-page.csv\",\n                asyncOnClick: true,\n                onClick: () => {\n                  console.log(\"You click the link\");\n                },\n                children: \"Download this page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                onClick: this.downloadReport,\n                children: \"Download All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 313,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                data: this.state.alldata,\n                filename: \"user-profiles-all.csv\",\n                className: \"hidden\",\n                headers: headers,\n                ref: this.csvLink,\n                target: \"_blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 59\n            }, this), this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 323,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 25\n          }, this), this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 49\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success d-flex\",\n            children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: this.togglemsgbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 327,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 48\n          }, this), !this.state.timeline.show && /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border-bottom my-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"user\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 333,\n                  columnNumber: 68\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"inventory number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 335,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"given at\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"returned at\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 337,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Update \\u2003\\xA0 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 340,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 332,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 331,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: this.state.i == i ? \"above-row border-r\" : \"\",\n                  children: item.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 348,\n                  columnNumber: 80\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: this.state.i == i ? \"above-row \" : \"\",\n                  children: item.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: this.state.i == i ? \"above-row\" : \"\",\n                  children: item.inventoryNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: this.state.i == i ? \"above-row\" : \"\",\n                  children: new Intl.DateTimeFormat(\"en-GB\", {\n                    month: \"long\",\n                    day: \"2-digit\",\n                    year: \"numeric\"\n                  }).format(new Date(item.givenAt))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 351,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: userRole == 'ROLE_Mol' && item.returnedAt == null ? this.state.i == i ? \"above-row border-l with-btn\" : \"with-btn\" : \"\",\n                  children: item.returnedAt != null ? new Intl.DateTimeFormat(\"en-GB\", {\n                    month: \"long\",\n                    day: \"2-digit\",\n                    year: \"numeric\"\n                  }).format(new Date(item.returnedAt)) : userRole == 'ROLE_Mol' && userName != item.userName ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn f-r\",\n                    onClick: () => this.saveToGive(item, false),\n                    children: \"return\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 65\n                  }, this) : (this.state.i == null || this.state.i != i) && item.returnedAt == null ? /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn f-r\",\n                    onClick: () => {\n                      console.log(\"give to clicked\");\n                      this.setState({\n                        i: i\n                      });\n                    },\n                    children: \"give to\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 375,\n                    columnNumber: 71\n                  }, this) : this.state.i == i ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"inline d-flex above-label \"\n                      /*this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"*/\n                      ,\n                      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                        children: \"select\\xA0user\\xA0\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 383,\n                        columnNumber: 81\n                      }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                        defaultMenuIsOpen: true,\n                        className: \"inline inline-3 above-select\",\n                        items: this.state.filter.userNames,\n                        value: '',\n                        onChange: selected => {\n                          this.setState({\n                            selectedUserId: selected.value\n                          });\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 81\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 380,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn mr-1 above-btn\",\n                      onClick: () => this.saveToGive(item, true),\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-save\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 394,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 393,\n                      columnNumber: 77\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn btn-delete above-btn\",\n                      onClick: () => this.cancelToGive(),\n                      children: /*#__PURE__*/_jsxDEV(\"i\", {\n                        className: \"fa fa-close\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 396,\n                        columnNumber: 81\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 395,\n                      columnNumber: 77\n                    }, this)]\n                  }, void 0, true) : '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.updateClicked(item, i),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    disabled: item.userName == userName,\n                    onClick: () => this.deleteClicked(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 430,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 429,\n                  columnNumber: 53\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 330,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 276,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListUserProfilesComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListUserProfilesComponent.jsx"],"names":["React","Component","UserProfileDataService","PaginationComponent","UserProfileFilter","CSVLink","AuthenticationService","CustomSelect","UserProfileInnerComponent","headers","label","key","ListUserProfilesComponent","constructor","props","downloadReport","newSearch","getSearchAll","retrieveAll","then","response","data","items","map","row","givenAt","Intl","DateTimeFormat","month","day","year","format","Date","returnedAt","setState","alldata","csvLink","current","link","click","search","state","replace","searchItems","split","i","length","startsWith","cancelToGive","console","log","selectedUserId","saveToGive","item","giving","itemToSend","previousId","id","userId","productDetailId","JSON","stringify","save","message","refresh","catch","error","togglemsgbox","pager","filter","window","location","profileShow","profile","show","timeline","bind","deleteClicked","updateClicked","createRef","componentDidMount","daoitems","errormsg","delete","msg","updateTimeline","x","parse","addClicked","name","userName","render","userRole","getLoggedUerRole","getLoggedUerName","dataAll","filteredUserTitle","myProfile","userNames","find","n","value","productName","inventoryNumber","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserProfileDataService from '../service/UserProfileDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport UserProfileFilter from './Filters/UserProfileFilter';\r\nimport '../myStyles/Style.css';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport UserProfileInnerComponent from './UserProfileInnerComponent';\r\n\r\n\r\n\r\nconst headers = [\r\n    { label: \"UserName\", key: \"userName\" },\r\n    { label: \"product\", key: \"productName\" },\r\n    { label: \"Inventory Number\", key: \"inventoryNumber\" },\r\n    { label: \"Given at\", key: \"givenAt\" },\r\n    { label: \"Returned at\", key: \"returnedAt\" },\r\n   \r\n];\r\n\r\n\r\n\r\nclass ListUserProfilesComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            message: null,\r\n            pager: null,\r\n            filter: null,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n            i: null,\r\n            selectedUserId: null,\r\n            profileShow: {\r\n                profile: {}, show: false\r\n            },\r\n            timeline: {\r\n                show:false\r\n            }\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n       // this.addClicked = this.addClicked.bind(this)\r\n        this.csvLink = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        UserProfileDataService.retrieveAll(this.state.search)\r\n            .then(\r\n            response => {\r\n                    //console.log(\"response data = \"+JSON.stringify(response.data));\r\n                    this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: response.data.filter,\r\n                         i: null,\r\n                        selectedUserId: null,\r\n                       \r\n                    });\r\n            }\r\n        ).catch((error) => {\r\n            this.setState({\r\n                errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\r\n            })\r\n            })\r\n    }\r\n\r\n    \r\n\r\n    downloadReport = () => {\r\n        let newSearch = this.getSearchAll();\r\n        UserProfileDataService.retrieveAll(newSearch)\r\n            .then(response => {\r\n                let data = response.data.items ;\r\n                data = data.map(row => ({\r\n                    ...row, givenAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                        month: \"numeric\",\r\n                        day: \"2-digit\",\r\n                        year: \"numeric\",\r\n                    }).format(new Date(row.givenAt))\r\n                    , returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                        month: \"numeric\",\r\n                        day: \"2-digit\",\r\n                        year: \"numeric\",\r\n                    }).format(new Date(row.returnedAt))\r\n                }));\r\n                this.setState({ alldata:data });\r\n                this.csvLink.current.link.click()\r\n            })\r\n    }\r\n\r\n    getSearchAll = () => {\r\n        let search = this.state.search;\r\n        search.replace(/\\s+/g, '');\r\n        let newSearch = '';\r\n        let searchItems = search.split('&');\r\n        for (let i = 0; i < searchItems.length; i++) {\r\n            if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage'))\r\n                continue\r\n            else\r\n                newSearch += searchItems[i] + '&'\r\n        }\r\n        newSearch = '?' + newSearch;\r\n        if (newSearch.length > 1) newSearch += '&'\r\n        newSearch += 'Pager.itemsPerPage=2147483647';\r\n        return newSearch;\r\n    }\r\n\r\n    deleteClicked(id) {\r\n        UserProfileDataService.delete(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n        ).catch(error => {\r\n            let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n            this.setState({\r\n                errormsg: msg\r\n            })\r\n        })\r\n    }\r\n\r\n   /* updateClicked(id) {\r\n        this.props.history.push(`/userprofiles/${id}`)\r\n    }*/\r\n    updateTimeline() {\r\n       /* if (!this.state.filter.productDetailId) {\r\n            //let msg = error.response && typeof error.response.data == 'string' ? error.response.data : error;\r\n            this.setState({\r\n                errormsg: \"select inventory first (by selecting inventory number from above search)  to update it's time line\"\r\n            })\r\n            return;\r\n        }*/\r\n        let timeline = this.state.timeline;\r\n        timeline.show = !timeline.show;\r\n        this.setState({\r\n            timeline: timeline,\r\n            message: null,\r\n        });\r\n    }\r\n    updateClicked(item, x) {\r\n\r\n        let show = this.state.profileShow;\r\n        show.show = !show.show;\r\n        if (show.show == true) {\r\n            show.profile = JSON.parse(JSON.stringify(item))\r\n            show.x = x;\r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            profileShow: show,\r\n            message: null,           \r\n        });\r\n\r\n    }\r\n\r\n    /*addforUserClicked = () => {\r\n        let item = {\r\n\r\n        }\r\n    }*/\r\n\r\n    addClicked (name) {\r\n        //this.props.history.push(`/userprofiles/-1`)\r\n        console.log(\"in add clicked\");\r\n        console.log(\"name = \"+name);\r\n        let item = {\r\n            userId: this.state.filter.userId || null,\r\n            userName: name\r\n        }\r\n        this.updateClicked(item,null)\r\n    }\r\n\r\n    cancelToGive = () => {\r\n        console.log(\"canceltogive\");\r\n        this.setState({\r\n            i: null,\r\n            selectedUserId: null\r\n        })\r\n    }\r\n\r\n    saveToGive = (item, giving) => {\r\n        console.log(\"save to give clicked\");\r\n        let itemToSend = {\r\n            previousId: item.id,\r\n            userId: this.state.selectedUserId || null,\r\n            productDetailId: item.productDetailId,\r\n            givenAt: new Date()/*new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date())*/\r\n           /* returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date())*/\r\n        }\r\n\r\n        console.log(\"itemto send = \" + JSON.stringify(itemToSend));\r\n\r\n        UserProfileDataService.save(itemToSend).then(\r\n            response => {\r\n                console.log(\"response = \" + response.data);\r\n                this.setState({ message: this.state.selectedUserId != null ? 'product given successfully ' : 'product returned successfully '})\r\n               \r\n               this.refresh();\r\n            }).catch(error => {\r\n                console.log(\"error = \" + error);\r\n                console.log(\"error.response = \" + error.response)\r\n            })\r\n    }\r\n\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null })\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n        const userRole = AuthenticationService.getLoggedUerRole();\r\n        const userName = AuthenticationService.getLoggedUerName();\r\n        //const data = this.state.items;\r\n        const data = this.state.items.map(row => ({\r\n            ...row, givenAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.givenAt))\r\n            , returnedAt: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.returnedAt))\r\n        })); \r\n        const dataAll = '';\r\n\r\n        const filteredUserTitle = userRole == 'ROLE_Employee' || (this.state.filter != null && this.state.filter.myProfile != null) ? 'my profile'\r\n            : this.state.filter != null && this.state.filter.userId != null ?\r\n                this.state.filter.userNames.find(n => n.value == this.state.filter.userId).name\r\n                : null;\r\n        \r\n        console.log(\"filteredUserTitle = \" + filteredUserTitle);\r\n\r\n        return (\r\n            <div className=\"px-3\">\r\n                <div className={this.state.i != null ? \"overlay d-block\" : \"d-none\"}></div>\r\n                {\r\n                    this.state.profileShow.profile && this.state.profileShow.show == true &&\r\n                    <UserProfileInnerComponent\r\n                        profileShow={this.state.profileShow}\r\n                    items={this.state.items}\r\n                    filter={this.state.filter}\r\n                        message={this.state.message}\r\n                        // suppliers={this.state.filter.suppliers}\r\n                        updateClicked={() => this.updateClicked(null)}\r\n                        refresh={() => this.refresh()}\r\n                        setMessage={(value) => this.setState({ message: `update successful` })}\r\n                    //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \r\n                    />}\r\n\r\n\r\n                {this.state.filter && <UserProfileFilter {...this.state.filter} userRole={userRole} timeline={this.state.timeline} />}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                        <h5 className=\"panel-title p-2 d-inline-flex\">\r\n                            <strong> User Profiles</strong>\r\n                            {filteredUserTitle != null && <span> &emsp;(&nbsp;{filteredUserTitle}&nbsp;)</span>}\r\n                            \r\n                        </h5>\r\n\r\n                        {userRole == 'ROLE_Mol' &&\r\n                            <label className=\"mt-1 pull-right mr-5\">\r\n                                <button className=\"btn btn-mybtn px-3\" onClick={() => {\r\n                                    this.updateTimeline()\r\n                                }\r\n                            }>Update timeline</button>\r\n                        </label>}\r\n                       \r\n                    </div>\r\n                    <div className=\"p-1\">\r\n\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap \">\r\n                            {!this.state.timeline.show && <div >\r\n                                {userRole == 'ROLE_Mol' && //this.state.filter && this.state.filter.userId &&\r\n                                    <button className=\"btn btn-mybtn px-5  \" onClick={() => {\r\n                                        //if (filteredUserTitle == null) this.updateClicked(null, 100)\r\n                                        this.addClicked(filteredUserTitle)\r\n                                    }\r\n                                    }>Add New</button>}\r\n                                <CSVLink\r\n                                    className=\"btn btn-mybtn px-3 ml-2\"\r\n                                    data={data} headers={headers} filename={\"user-profiles-page.csv\"}\r\n                                    asyncOnClick={true}\r\n                                    onClick={() => {\r\n                                        console.log(\"You click the link\");\r\n                                    }}\r\n                                >\r\n                                    Download this page\r\n                                </CSVLink>\r\n                                <button className=\"btn btn-mybtn px-3 ml-2\" onClick={this.downloadReport}>Download All</button>\r\n                                <CSVLink\r\n                                    data={this.state.alldata}\r\n                                    filename={\"user-profiles-all.csv\"}\r\n                                    className=\"hidden\"\r\n                                    headers={headers}\r\n                                    ref={this.csvLink}\r\n                                    target=\"_blank\"\r\n                                />\r\n                            </div>}\r\n                            {this.state.pager && <PaginationComponent {...this.state.pager} />}\r\n                        </div>\r\n                        {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                        {this.state.message && <div className=\"alert alert-success d-flex\">{this.state.message}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={this.togglemsgbox}></i></div>}\r\n\r\n                        {!this.state.timeline.show &&\r\n                            <table className=\"table border-bottom my-table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        {userRole == 'ROLE_Mol' && <th>user</th>}\r\n                                        <th>product</th>\r\n                                        <th>inventory number</th>\r\n                                        <th>given at</th>\r\n                                        <th>returned at</th>\r\n                                        {/*userRole == 'ROLE_Mol' && this.state.filter && this.state.filter.myProfile &&\r\n                                        <th className=\"with-btn\"> give to </th>*/}\r\n                                        <th>Update &emsp;&nbsp; Delete</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                    {\r\n                                        this.state.items.map(\r\n                                            (item, i) =>\r\n                                                <tr key={item.id} >\r\n                                                    {userRole == 'ROLE_Mol' && <td className={this.state.i == i ? \"above-row border-r\" : \"\"}>{item.userName}</td>}\r\n                                                    <td className={this.state.i == i ? \"above-row \" : \"\"}>{item.productName}</td>\r\n                                                    <td className={this.state.i == i ? \"above-row\" : \"\"}>{item.inventoryNumber}</td>\r\n                                                    <td className={this.state.i == i ? \"above-row\" : \"\"}>{new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                        month: \"long\",\r\n                                                        day: \"2-digit\",\r\n                                                        year: \"numeric\",\r\n                                                    }).format(new Date(item.givenAt))}</td>\r\n                                                    <td className=\r\n                                                        {userRole == 'ROLE_Mol' && item.returnedAt == null ?\r\n                                                            this.state.i == i ? \"above-row border-l with-btn\" : \"with-btn\" : \"\"}>{/*\r\n                                                    this.state.filter && this.state.filter.userId && item.returnedAt == null*/}\r\n\r\n                                                        {item.returnedAt != null\r\n                                                            ?\r\n                                                            new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                month: \"long\",\r\n                                                                day: \"2-digit\",\r\n                                                                year: \"numeric\",\r\n                                                            }).format(new Date(item.returnedAt))\r\n                                                            :\r\n                                                            userRole == 'ROLE_Mol' && userName != item.userName\r\n                                                                ?\r\n                                                                <button className=\"btn btn-mybtn f-r\"\r\n                                                                    onClick={() => this.saveToGive(item, false)}>return</button>\r\n                                                                :\r\n                                                                (this.state.i == null || this.state.i != i) && item.returnedAt == null\r\n                                                                    ? <button className=\"btn btn-mybtn f-r\"\r\n                                                                        onClick={() => { console.log(\"give to clicked\"); this.setState({ i: i }) }}>give to</button>\r\n                                                                    : this.state.i == i\r\n                                                                        ?\r\n                                                                        <>\r\n                                                                            <div className=\r\n                                                                                {\"inline d-flex above-label \"\r\n                                                        /*this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"*/}>\r\n                                                                                <label>select&nbsp;user&nbsp;</label>\r\n                                                                                <CustomSelect\r\n                                                                                    defaultMenuIsOpen={true}\r\n                                                                                    className={\"inline inline-3 above-select\"}\r\n                                                                                    items={this.state.filter.userNames}\r\n                                                                                    value={''}\r\n                                                                                    onChange={(selected) => { this.setState({ selectedUserId: selected.value }) }}\r\n                                                                                />\r\n\r\n                                                                            </div>\r\n                                                                            <button className=\"btn btn-mybtn mr-1 above-btn\" onClick={() => this.saveToGive(item, true)}>\r\n                                                                                <i className=\"fa fa-save\"></i></button>\r\n                                                                            <button className=\"btn btn-mybtn btn-delete above-btn\" onClick={() => this.cancelToGive()}>\r\n                                                                                <i className=\"fa fa-close\"></i></button>\r\n\r\n                                                                        </>\r\n                                                                        : '-'}</td>\r\n                                                    {/*userRole == 'ROLE_Mol' && this.state.filter && this.state.filter.myProfile &&\r\n                                                    <td className={this.state.i == i ? \"above-row with-btn border-l\" : \"with-btn\"}>\r\n                                                        {(this.state.i == null || this.state.i != i) && item.returnedAt == null && <button className=\"btn btn-mybtn\"\r\n                                                        onClick={() => { console.log(\"give to clicked\");this.setState({ i: i }) }}>give to</button>}\r\n                                                    {this.state.i == i &&\r\n                                                        <>\r\n                                                        \r\n                                                        <div className=\r\n                                                            {\"inline d-flex above-label \"\r\n                                                        //this.state.i == i ? \"inline above-label d-flex \" : \"inline above-label d-flex visible-n\"\r\n                                                        }>\r\n                                                            <label>select&nbsp;user&nbsp;</label>                                                           \r\n                                                                <CustomSelect\r\n                                                                    defaultMenuIsOpen={true} \r\n                                                                className={\"inline inline-3 above-select\"}\r\n                                                            items={this.state.filter.userNames}\r\n                                                                value={''}\r\n                                                                onChange={(selected) => { this.setState({ selectedUserId: selected.value }) }}\r\n                                                            />\r\n                                                           \r\n                                                            </div>\r\n                                                            <button className=\"btn btn-mybtn mr-1 above-btn\" onClick={()=>this.saveToGive(item ,true)}>\r\n                                                                <i className=\"fa fa-save\"></i></button>\r\n                                                            <button className=\"btn btn-mybtn btn-delete above-btn\" onClick={()=>this.cancelToGive()}>\r\n                                                                <i className=\"fa fa-close\"></i></button>\r\n                                                        \r\n                                                       \r\n                                                        </>\r\n                                                    }</td>*/}\r\n                                                    <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item, i)}>Update</button>\r\n                                                        <button className=\"btn btn-mybtn btn-delete\"\r\n                                                            disabled={item.userName == userName} onClick={() => this.deleteClicked(item.id)}>Delete</button></td>\r\n                                                </tr>\r\n                                        )\r\n                                    }\r\n                                </tbody>\r\n                            </table>}\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListUserProfilesComponent"]},"metadata":{},"sourceType":"module"}