{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListDeliveriesComponent.jsx\";\nimport React, { Component } from 'react';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport PaginationComponent from './PaginationComponent';\nimport DeliveryFilter from './Filters/DeliveryFilter';\nimport '../myStyles/Style.css';\nimport { CSVLink } from \"react-csv\"; //import ListDeliveryDetailInnerComponent from './ListDeliveryDetailInnerComponent';\n\nimport InventoryNumberInnerComponent from './InventoryNumberInnerComponent';\nimport DeliveryInnerComponent from './DeliveryInnerComponent';\nimport DDInnerComponent from './DDInnerComponent';\nconst headers = [{\n  label: \"number\",\n  key: \"number\"\n}, {\n  label: \"date\",\n  key: \"date\"\n}, {\n  label: \"supplier\",\n  key: \"supplierName\"\n}, {\n  label: \"total bill\",\n  key: \"total\"\n}];\nconst headers2 = [{\n  label: \"delivery\",\n  key: \"number\"\n}, {\n  label: \"date\",\n  key: \"date\"\n}, {\n  label: \"supplier\",\n  key: \"supplierName\"\n}, {\n  label: \"product\",\n  key: \"productName\"\n}, {\n  label: \"quantity\",\n  key: \"quantity\"\n}, {\n  label: \"unit price\",\n  key: \"pricePerUnit\"\n}];\n\nclass ListDeliveriesComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadReport = () => {\n      let newSearch = this.getSearchAll();\n      DeliveryDataService.retrieveAll(newSearch).then(response => {\n        //console.log(\"data has childs = \" + (response.data.deliveryDetails != null));\n        let downloadData = [];\n        let data = response.data.items || response.data.daoitems;\n        data = data.map(row => ({ ...row,\n          date: new Intl.DateTimeFormat(\"en-GB\", {\n            month: \"numeric\",\n            day: \"2-digit\",\n            year: \"numeric\"\n          }).format(new Date(row.date))\n        }));\n\n        if (this.state.deliveryView == 'DeliveryDetailView') {\n          this.getDetailData(data, downloadData);\n        } else {\n          downloadData = data;\n        }\n\n        this.setState({\n          alldata: downloadData\n        });\n        this.csvLink.current.link.click();\n      });\n    };\n\n    this.getDetailData = (data, arr) => {\n      data.map(i => {\n        i.deliveryDetails.map(x => {\n          arr.push({\n            number: i.number,\n            date: i.date,\n            supplierName: i.supplierName,\n            productName: x.productName,\n            quantity: x.quantity,\n            pricePerUnit: x.pricePerOne\n          });\n        });\n      });\n    };\n\n    this.getSearchAll = () => {\n      let search = this.state.search;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n      }\n\n      search.replace(/\\s+/g, '');\n      let newSearch = '';\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager')) continue;else newSearch += searchItems[i] + '&';\n      }\n\n      newSearch = '?' + newSearch;\n      newSearch += 'Pager.itemsPerPage=2147483647';\n      return newSearch;\n    };\n\n    this.deletePDChildClicked = (value, x, y, id) => {\n      /* if (this.state.items[x].deliveryDetails[y].quantity == 1) {\r\n           \r\n           this.deleteChildClicked(id,x,y)            \r\n       }\r\n       else {*/\n      ProductDetailDataService.delete(value).then(response => {\n        ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id).then(response => {\n          let show = this.state.pdShow;\n          show[x][y].data = response.data;\n          let items = this.state.items;\n          items[x].deliveryDetails[y].quantity = items[x].deliveryDetails[y].quantity - 1;\n          items[x].total = items[x].total - items[x].deliveryDetails[y].pricePerOne;\n          let pdmessages = this.state.pdmessage;\n          if (pdmessages[x] == null) pdmessages[x] = [];\n          pdmessages[x][y] = `Delete successful`;\n          this.setState({\n            items: items,\n            pdShow: show,\n            pdmessage: pdmessages,\n            message: '',\n            ddmessage: []\n          });\n        });\n      }).catch(error => {\n        // console.log(\"error\");\n        //console.log(\"error = \" + JSON.stringify(error));\n        let errorpdmessages = this.state.errorpdmessage;\n        if (errorpdmessages == null) errorpdmessages = [];\n        if (errorpdmessages[x] == null) errorpdmessages[x] = [];\n        errorpdmessages[x][y] = `error ` + error;\n        this.setState({\n          errorpdmessage: errorpdmessages\n        });\n      }); // }\n    };\n\n    this.updateClickedInner = (item, x) => {\n      /* let messages = this.state.message;\r\n       if (messages != null )\r\n           messages = null;*/\n      let show = this.state.deliveryUpdateShow;\n      show.show = !show.show;\n\n      if (show.show == true) {\n        show.delivery = JSON.parse(JSON.stringify(item));\n        show.x = x;\n      } else {\n        show.error = '';\n      }\n\n      this.setState({\n        deliveryUpdateShow: show,\n        message: null,\n        pdmessage: [],\n        ddmessage: []\n      });\n    };\n\n    this.updateChildClicked = (dd, x, y) => {\n      /* let ddmessages = this.state.ddmessage;\r\n       if (ddmessages[x] != null )\r\n           ddmessages[x] = null;*/\n      let show = this.state.ddUpdateShow;\n      show.show = !show.show;\n\n      if (show.show == true) {\n        show.dd = JSON.parse(JSON.stringify(dd));\n        show.x = x;\n        show.y = y;\n      } else {\n        show.error = '';\n      }\n\n      this.setState({\n        ddUpdateShow: show,\n        ddmessage: [],\n        pdmessage: [],\n        message: null\n      });\n    };\n\n    this.updatePdChildClicked = (pd, x, y, i, ddid) => {\n      /* let pdmessages = this.state.pdmessage;\r\n       if (pdmessages[x] != null && pdmessages[x][y] != null) \r\n           pdmessages[x][y] = null; */\n      let show = this.state.pdUpdateShow;\n      show.show = !show.show;\n\n      if (show.show == true) {\n        show.pd = JSON.parse(JSON.stringify(pd));\n        show.x = x;\n        show.y = y;\n        show.i = i;\n        show.ddid = ddid;\n      } else {\n        show.error = '';\n      }\n\n      this.setState({\n        pdUpdateShow: show,\n        //pdmessage: pdmessages,\n        ddmessage: [],\n        pdmessage: [],\n        message: null\n      });\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.showdd = x => {\n      let ddShow = this.state.ddShow;\n      ddShow[x] = !ddShow[x];\n      this.setState({\n        ddShow: ddShow\n      });\n    };\n\n    this.getPageData = () => {\n      const data = this.state.items.map(row => ({ ...row,\n        date: new Intl.DateTimeFormat(\"en-GB\", {\n          month: \"numeric\",\n          day: \"2-digit\",\n          year: \"numeric\"\n        }).format(new Date(row.date))\n      }));\n      if (this.state.deliveryView == 'DeliveryView') return data;else {\n        let downloadData = [];\n        downloadData = this.getDetailData(data, downloadData);\n        return downloadData;\n      }\n    };\n\n    this.state = {\n      items: [],\n      pager: null,\n      filter: null,\n      search: window.location.search || '',\n      alldata: [],\n      message: null,\n      ddmessage: [],\n      dderrormessage: [],\n      ddShow: [],\n      pdShow: [],\n      pdmessage: [],\n      pdUpdateShow: {\n        pd: {},\n        show: false\n      },\n      ddUpdateShow: {\n        dd: {},\n        show: false\n      },\n      deliveryUpdateShow: {\n        delivery: {},\n        show: false\n      }\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this); // this.deleteChildClicked = this.deleteChildClicked.bind(this)\n\n    this.updateClicked = this.updateClicked.bind(this);\n    this.addClicked = this.addClicked.bind(this);\n    this.csvLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(\"version = \" + React.version);\n    this.refresh();\n  }\n\n  refresh() {\n    DeliveryDataService.retrieveAll(this.state.search).then(response => {\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: response.data.filter,\n        deliveryView: response.data.deliveryView || 'DeliveryView' //pdShow: [],\n        //search: this.getSearchString()\n\n      });\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\n      });\n    });\n  }\n  /*\r\n  getSearchString = () => {\r\n      let search = window.location.search || '';\r\n      let index = search.indexOf(\"&deliveryView=DeliveryDetailView&\");\r\n      if (index > 0) {\r\n          search = search.replace(\"&deliveryView=DeliveryDetailView&\", \"\");\r\n          \r\n          // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n      }\r\n      else {\r\n          index = search.indexOf(\"deliveryView=DeliveryDetailView&\");\r\n          if (index > 0) {\r\n              search = search.replace(\"deliveryView=DeliveryDetailView&\", \"\");\r\n              // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n          }\r\n          index = search.indexOf(\"&deliveryView=DeliveryDetailView\");\r\n          if (index > 0) {\r\n              search = search.replace(\"&deliveryView=DeliveryDetailView\", \"\");\r\n              // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n          }\r\n          else {\r\n              index = search.indexOf(\"deliveryView=DeliveryDetailView\");\r\n              if (index > 0) {\r\n                  search = search.replace(\"deliveryView=DeliveryDetailView\", \"\")\r\n                  // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n              }\r\n          }\r\n      }\r\n     \r\n      if (search == '?') search = '';\r\n      console.log(\"search = \" + search);\r\n      return search\r\n  }*/\n\n  /* getRetrieveSearchString = () => {\r\n       let search = this.state.search;\r\n       if (this.state.deliveryView == 'DeliveryDetailView') {\r\n           console.log(\"search = \"+search)\r\n       }\r\n      \r\n           return search\r\n      \r\n   }*/\n\n\n  deleteClicked(id, x) {\n    DeliveryDataService.delete(id).then(response => {\n      let show = this.state.pdShow;\n\n      if (this.state.items[x]) {\n        show.splice(x, 1);\n      }\n\n      this.setState({\n        message: `Delete successful`,\n        pdShow: show,\n        pdmessage: [],\n        ddmessage: []\n      });\n      this.refresh();\n    });\n  }\n  /**\r\n   * ******************\r\n   * @param {any} id\r\n   */\n\n\n  deleteChildClicked(id, x, y, parentid) {\n    //child id\n    DeliveryDataService.deleteChild(id, parentid).then(response => {\n      let length = this.state.items[x].deliveryDetails.length;\n      let show = this.state.pdShow;\n      if (this.state.pdShow[x] == undefined) show[x] = [];\n      let ddmessage = this.state.ddmessage;\n      let message = this.state.message;\n      let pdmessage = this.state.pdmessage;\n      pdmessage = [];\n      /* if (length == 1) {\r\n           show.splice(x, 1);\r\n           message = `Delete successful`;\r\n           ddmessage = []\r\n       } else {*/\n\n      if (this.state.pdShow[x][y] == undefined) show[x][y] = {};\n      show[x].splice(y, 1);\n      ddmessage[x] = `Delete successful`;\n      message = ''; //}\n\n      this.setState({\n        pdShow: show,\n        pdmessage: pdmessage,\n        ddmessage: ddmessage,\n        message: message\n      });\n      this.refresh();\n    }).catch(error => {\n      let errormsg = error.response && error.response.data ? error.response.data.message ? error.response.data.message : error.response.data : error + '';\n      let dderrormessage = this.state.dderrormessage;\n      dderrormessage[x] = '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + errormsg;\n      this.setState({\n        dderrormessage: dderrormessage\n      });\n    });\n  }\n  /**********************************/\n\n\n  updateClicked(id) {\n    this.state.deliveryView == 'DeliveryDetailView' ? this.props.history.push(`/deliveries/${id}/DeliveryDetailView`) : this.props.history.push(`/deliveries/${id}`);\n  }\n\n  /*saveUpdatedPd = () => {\r\n      if (this.state.pdUpdateShow.pd.name == this.state.pdShow[this.state.pdUpdateShow.x][this.state.pdUpdateShow.y].data[this.state.pdUpdateShow.i].name) {\r\n          let show = this.state.pdUpdateShow;\r\n          show.error = \"number hasn't changed\";\r\n          this.setState({ pdUpdateShow: show })\r\n      } else if (this.state.pdUpdateShow.pd.name.length == 0) {\r\n          let show = this.state.pdUpdateShow;\r\n          show.error = \"number can't be empty\";\r\n          this.setState({ pdUpdateShow: show })\r\n      } else {           \r\n          ProductDetailDataService.updateNumber(this.state.pdUpdateShow.pd)\r\n              .then(response => {\r\n                  this.updatePdChildClicked(null);\r\n                 \r\n                  let x = this.state.pdUpdateShow.x;\r\n                  let y = this.state.pdUpdateShow.y;\r\n                  \r\n                  let pdshow = this.state.pdShow;\r\n                  pdshow[x][y].data[this.state.pdUpdateShow.i].name = response.data;\r\n                    let pdmessages = this.state.pdmessage;\r\n                  if (pdmessages[x] == null) pdmessages[x] = [];\r\n                  pdmessages[x][y] = `Update successful`;                    \r\n                    this.setState({                       \r\n                      pdShow: pdshow,\r\n                      pdmessage: pdmessages\r\n                  })\r\n              }).catch(error => {\r\n                  let show = this.state.pdUpdateShow;\r\n                  show.error = '' + error.response.data;\r\n                  this.setState({ pdUpdateShow: show })\r\n              })\r\n      }\r\n  }*/\n  addClicked() {\n    this.props.history.push(`/deliveries/-1`);\n  }\n\n  setView(value) {\n    /*if (value.target.value === 'DeliveryDetailView' && this.state.deliveryView !== 'DeliveryDetailView') {\r\n        let search = this.state.search;           \r\n        let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryDetailView' : '?deliveryView=DeliveryDetailView';\r\n        window.location.href = ``+window.location.pathname+newsearch;          \r\n    }  */\n\n    /* if (value.target.value === 'DeliveryView' && this.state.deliveryView == 'DeliveryDetailView') {\r\n         let search = this.state.search;\r\n         let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryView' : '?deliveryView=DeliveryView';\r\n         window.location.href = `` + window.location.pathname + newsearch;\r\n     } */\n    let path = window.location.pathname;\n    let newPath = ``;\n    let search = window.location.search;\n\n    if (search.length < 1) {\n      newPath = path + `?deliveryView=${value.target.value}`;\n    } else {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('deliveryView')) continue;else newPath += searchItems[i] + '&';\n      }\n\n      newPath = path + '?' + newPath + 'deliveryView=' + value.target.value;\n    }\n\n    window.location.href = newPath;\n  }\n  /**\r\n   * **********\r\n   * @param {any} x\r\n   * @param {any} y\r\n   * @param {any} id\r\n   */\n\n\n  getProductDetails(x, y, id) {\n    if (this.state.pdShow[x] == undefined || this.state.pdShow[x][y] == undefined) {\n      let show = this.state.pdShow;\n      if (this.state.pdShow[x] == undefined) show[x] = [];\n      ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id).then(response => {\n        console.log(\"pds = \" + JSON.stringify(response.data));\n        show[x][y] = {};\n        show[x][y].show = true;\n        show[x][y].data = response.data;\n        this.setState({\n          pdShow: show\n        });\n      });\n    } else {\n      let show = this.state.pdShow;\n      show[x][y].show = !show[x][y].show;\n      this.setState({\n        pdShow: show\n      });\n    }\n  }\n\n  render() {\n    /* let downloadData = [];\r\n     let databefore = this.state.items.map(row => ({\r\n         ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n             month: \"numeric\",\r\n             day: \"2-digit\",\r\n             year: \"numeric\",\r\n         }).format(new Date(row.date))\r\n     })); \r\n     if (this.state.deliveryView != 'DeliveryView') {\r\n         \r\n         downloadData = this.getDetailData(databefore, downloadData);\r\n           \r\n     }\r\n     const data = downloadData || databefore;*/\n    const data = this.state.items.map(row => ({ ...row,\n      date: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.date))\n    }));\n    const data2 = [];\n\n    if (this.state.deliveryView !== 'DeliveryView') {\n      this.getDetailData(data, data2);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 pt-3\",\n      children: [console.log(\"rendering\"), this.state.pdUpdateShow && this.state.pdUpdateShow.show == true && /*#__PURE__*/_jsxDEV(InventoryNumberInnerComponent, {\n        pdUpdateShow: this.state.pdUpdateShow,\n        pdShow: this.state.pdShow,\n        pdmessage: this.state.pdmessage,\n        updatePdChildClicked: () => this.updatePdChildClicked(null),\n        setpdShow: value => this.setState({\n          pdShow: value\n        }),\n        setpdMessage: value => this.setState({\n          pdmessage: value\n        }),\n        refresh: () => this.refresh() //setpdUpdateShow={(value) => this.setState({ pdUpdateShow: value })} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 555,\n        columnNumber: 21\n      }, this), this.state.deliveryUpdateShow && this.state.deliveryUpdateShow.show == true && /*#__PURE__*/_jsxDEV(DeliveryInnerComponent, {\n        deliveryUpdateShow: this.state.deliveryUpdateShow,\n        items: this.state.items,\n        message: this.state.message,\n        suppliers: this.state.filter.suppliers,\n        updateClickedInner: () => this.updateClickedInner(null),\n        setItems: value => this.setState({\n          items: value\n        }),\n        setMessage: value => this.setState({\n          message: `update successful`\n        }) //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 567,\n        columnNumber: 21\n      }, this), this.state.ddUpdateShow && this.state.ddUpdateShow.show == true && /*#__PURE__*/_jsxDEV(DDInnerComponent, {\n        ddUpdateShow: this.state.ddUpdateShow,\n        items: this.state.items,\n        ddmessage: this.state.ddmessage,\n        products: this.state.filter.products,\n        updateChildClicked: () => this.updateChildClicked(null),\n        setItems: value => this.setState({\n          items: value\n        }),\n        setddMessage: value => this.setState({\n          ddmessage: value\n        }) //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \n\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 578,\n        columnNumber: 21\n      }, this), this.state.filter && /*#__PURE__*/_jsxDEV(DeliveryFilter, { ...this.state.filter,\n        search: this.state.deliveryView == 'DeliveryView' ? this.state.search : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 618,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 d-inline-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Deliveries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 623,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 622,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mx-1 pull-right mr-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mx-1 m-2 mt-3 \",\n              type: \"radio\",\n              name: \"DeliveryView\",\n              value: \"DeliveryDetailView\",\n              checked: this.state.deliveryView == 'DeliveryDetailView',\n              onClick: value => this.state.deliveryView != 'DeliveryDetailView' ? this.setView(value) : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 626,\n              columnNumber: 29\n            }, this), \"Delivery&Details View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 625,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mx-1 pull-right mr-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mx-1 m-2 mt-3 \",\n              type: \"radio\",\n              name: \"DeliveryView\",\n              value: \"DeliveryView\",\n              checked: this.state.deliveryView == 'DeliveryView',\n              onClick: value => this.state.deliveryView == 'DeliveryDetailView' ? this.setView(value) : {} //this.setState({ deliveryView: 'DeliveryView' }) : {}}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 633,\n              columnNumber: 29\n            }, this), \"Delivery View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 632,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 621,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5  \",\n                onClick: this.addClicked,\n                children: \"Add New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 642,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                data: this.state.deliveryView == 'DeliveryView' ? data : data2,\n                headers: this.state.deliveryView == 'DeliveryView' ? headers : headers2,\n                filename: \"deliveries-page.csv\",\n                asyncOnClick: true,\n                onClick: () => {},\n                children: \"Download this page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 643,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                onClick: this.downloadReport,\n                children: \"Download All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 651,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                data: this.state.alldata,\n                filename: \"deliveries-all.csv\",\n                className: \"hidden\",\n                headers: this.state.deliveryView == 'DeliveryView' ? headers : headers2,\n                ref: this.csvLink,\n                target: \"_blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 652,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 641,\n              columnNumber: 29\n            }, this), this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager,\n              search: this.state.deliveryView == 'DeliveryView' ? this.state.search : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 663,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 640,\n            columnNumber: 25\n          }, this), this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 667,\n            columnNumber: 49\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success d-flex\",\n            children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: this.togglemsgbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 671,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 670,\n            columnNumber: 29\n          }, this), this.state.deliveryView == 'DeliveryDetailView' && this.state.items.map((item, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-body\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table  border table-s\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"wl pl-5 hoverable\",\n                    onClick: () => {\n                      this.showdd(x);\n                    },\n                    children: [\" Number : \", item.number, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 683,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"wl pl-3 hoverable\",\n                    onClick: () => {\n                      this.showdd(x);\n                    },\n                    children: [\" Date : \", new Intl.DateTimeFormat(\"en-GB\", {\n                      month: \"long\",\n                      day: \"2-digit\",\n                      year: \"numeric\"\n                    }).format(new Date(item.date))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \" wl hoverable\",\n                    onClick: () => {\n                      this.showdd(x);\n                    },\n                    children: [\" Supplier : \", item.supplierName || '-']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 698,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"d-flex justify-content-end mr-1\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn mr-1\",\n                      onClick: () => this.updateClickedInner(item, x),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 703,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn btn-delete\",\n                      onClick: () => this.deleteClicked(item.id, x),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 704,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 702,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 682,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colspan: \"4\",\n                    children: [this.state.ddShow && this.state.ddShow[x] && /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: [this.state.ddmessage && this.state.ddmessage[x] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-success d-flex\",\n                        children: [this.state.ddmessage[x], /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-close ml-auto pr-3 pt-1\",\n                          onClick: () => {\n                            let ddmessages = this.state.ddmessage;\n                            ddmessages[x] = null;\n                            this.setState({\n                              ddmessage: ddmessages\n                            });\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 730,\n                          columnNumber: 81\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 729,\n                        columnNumber: 77\n                      }, this), this.state.dderrormessage && this.state.dderrormessage[x] && /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-flex\",\n                        children: [this.state.dderrormessage[x], /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-close ml-auto pr-3 pt-1\",\n                          onClick: () => {\n                            let dderrormessages = this.state.dderrormessage;\n                            dderrormessages[x] = null;\n                            this.setState({\n                              dderrormessage: dderrormessages\n                            });\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 740,\n                          columnNumber: 77\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 739,\n                        columnNumber: 73\n                      }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                        className: \"table border x-Table \",\n                        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: \"Product\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 750,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: \"Quantity\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 751,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: \"Unit Price\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 752,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: \"Total\"\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 753,\n                              columnNumber: 85\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              style: {\n                                width: '140px',\n                                padding: '.2rem .5rem'\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                                className: \"btn btn-mybtn pull-right\",\n                                style: {\n                                  padding: '.15rem .6rem'\n                                },\n                                onClick: () => this.updateChildClicked(null, x, null),\n                                children: \"add one\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 755,\n                                columnNumber: 85\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 754,\n                              columnNumber: 81\n                            }, this)]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 749,\n                            columnNumber: 81\n                          }, this), item.deliveryDetails.map((dd, y) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                                  className: \"hoverable\",\n                                  onClick: () => {\n                                    this.getProductDetails(x, y, dd.id);\n                                  },\n                                  children: dd.productName\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 764,\n                                  columnNumber: 105\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 764,\n                                columnNumber: 101\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                className: \"hoverable\",\n                                onClick: () => {\n                                  this.getProductDetails(x, y, dd.id);\n                                },\n                                children: /*#__PURE__*/_jsxDEV(\"p\", {\n                                  children: dd.quantity\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 771,\n                                  columnNumber: 108\n                                }, this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 768,\n                                columnNumber: 101\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: new Intl.NumberFormat(\"en-GB\", {\n                                  style: \"currency\",\n                                  currency: \"BGN\",\n                                  maximumFractionDigits: 2\n                                }).format(dd.pricePerOne)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 772,\n                                columnNumber: 101\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: [new Intl.NumberFormat(\"en-GB\", {\n                                  style: \"currency\",\n                                  currency: \"BGN\",\n                                  maximumFractionDigits: 2\n                                }).format(dd.pricePerOne * dd.quantity), \"  \"]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 777,\n                                columnNumber: 101\n                              }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                  className: \"btn btn-mybtn mr-1\",\n                                  onClick: () => this.updateChildClicked(dd, x, y),\n                                  children: \"Update\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 782,\n                                  columnNumber: 105\n                                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                  className: \"btn btn-mybtn btn-delete\",\n                                  onClick: () => this.deleteChildClicked(dd.id, x, y, item.id),\n                                  children: \"Delete\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 783,\n                                  columnNumber: 105\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 782,\n                                columnNumber: 101\n                              }, this)]\n                            }, dd.id, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 763,\n                              columnNumber: 97\n                            }, this), this.state.pdShow[x] && this.state.pdShow[x][y] && this.state.pdShow[x][y].show && /*#__PURE__*/_jsxDEV(\"tr\", {\n                              children: /*#__PURE__*/_jsxDEV(\"td\", {\n                                colspan: \"5\",\n                                children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                                  children: [this.state.pdmessage[x] && this.state.pdmessage[x][y] && /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"alert alert-success d-flex\",\n                                    children: [this.state.pdmessage[x][y], /*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                                      onClick: () => {\n                                        let pdmessages = this.state.pdmessage;\n                                        pdmessages[x][y] = null;\n                                        this.setState({\n                                          pdmessage: pdmessages\n                                        });\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 794,\n                                      columnNumber: 117\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 793,\n                                    columnNumber: 113\n                                  }, this), this.state.errorpdmessage && this.state.errorpdmessage[x] && this.state.errorpdmessage[x][y] && /*#__PURE__*/_jsxDEV(\"div\", {\n                                    className: \"alert alert-warning d-flex\",\n                                    children: [this.state.errorpdmessage[x][y], /*#__PURE__*/_jsxDEV(\"i\", {\n                                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                                      onClick: () => {\n                                        let errorpdmessages = this.state.errorpdmessage;\n                                        errorpdmessages[x][y] = null;\n                                        this.setState({\n                                          errorpdmessage: errorpdmessages\n                                        });\n                                      }\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 806,\n                                      columnNumber: 117\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 805,\n                                    columnNumber: 113\n                                  }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                                    className: \"ml-5 mb-3\",\n                                    style: {\n                                      width: '80%'\n                                    },\n                                    children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                        style: {\n                                          width: '10%'\n                                        },\n                                        children: \"number\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 816,\n                                        columnNumber: 117\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        className: \"pl-5\",\n                                        children: \"inventory number\"\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 817,\n                                        columnNumber: 117\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        style: {\n                                          width: '140px',\n                                          padding: '.2rem .5rem'\n                                        },\n                                        children: /*#__PURE__*/_jsxDEV(\"button\", {\n                                          className: \"btn btn-mybtn pull-right\",\n                                          style: {\n                                            padding: '.15rem .6rem'\n                                          },\n                                          onClick: () => this.updatePdChildClicked(null, x, y, null, dd.id),\n                                          children: \"add one\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 819,\n                                          columnNumber: 121\n                                        }, this)\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 818,\n                                        columnNumber: 117\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 816,\n                                      columnNumber: 113\n                                    }, this), this.state.pdShow[x][y].data.map((pd, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                      children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: i + 1\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 824,\n                                        columnNumber: 121\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        className: \"pl-5 pb-3 hoverable\",\n                                        onClick: () => {\n                                          this.props.history.push(`/productDetails?Filter.id=${pd.value}`);\n                                        },\n                                        children: pd.name\n                                      }, void 0, false, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 825,\n                                        columnNumber: 121\n                                      }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                          className: \"btn btn-mybtn mr-1\",\n                                          onClick: () => {\n                                            this.updatePdChildClicked(pd, x, y, i);\n                                          },\n                                          children: \"Update\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 831,\n                                          columnNumber: 125\n                                        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                          className: \"btn btn-mybtn btn-delete\",\n                                          onClick: () => this.deletePDChildClicked(pd.value, x, y, dd.id),\n                                          children: \"Delete\"\n                                        }, void 0, false, {\n                                          fileName: _jsxFileName,\n                                          lineNumber: 834,\n                                          columnNumber: 125\n                                        }, this)]\n                                      }, void 0, true, {\n                                        fileName: _jsxFileName,\n                                        lineNumber: 831,\n                                        columnNumber: 121\n                                      }, this)]\n                                    }, void 0, true, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 823,\n                                      columnNumber: 117\n                                    }, this))]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 815,\n                                    columnNumber: 109\n                                  }, this)]\n                                }, void 0, true)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 789,\n                                columnNumber: 105\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 788,\n                              columnNumber: 101\n                            }, this)]\n                          }, void 0, true))]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 748,\n                          columnNumber: 77\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 747,\n                        columnNumber: 73\n                      }, this)]\n                    }, void 0, true), /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"pull-right\",\n                      style: {\n                        marginRight: '100px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [\"Total Bill : \", new Intl.NumberFormat(\"en-GB\", {\n                          style: \"currency\",\n                          currency: \"BGN\",\n                          maximumFractionDigits: 2\n                        }).format(item.total), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 852,\n                        columnNumber: 123\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 852,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 708,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 707,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 681,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 680,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 679,\n            columnNumber: 45\n          }, this)), this.state.deliveryView == 'DeliveryView' && /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border-bottom my-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 869,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 870,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"supplier\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 871,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 872,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Update \\u2003\\xA0 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 873,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 868,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 867,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 881,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.DateTimeFormat(\"en-GB\", {\n                    month: \"long\",\n                    day: \"2-digit\",\n                    year: \"numeric\"\n                  }).format(new Date(item.date))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 882,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.supplierName || '-'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 889,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(item.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 890,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.updateClicked(item.id),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 896,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    onClick: () => this.deleteClicked(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 897,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 896,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 880,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 876,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 866,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 639,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 620,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 552,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListDeliveriesComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListDeliveriesComponent.jsx"],"names":["React","Component","DeliveryDataService","ProductDetailDataService","PaginationComponent","DeliveryFilter","CSVLink","InventoryNumberInnerComponent","DeliveryInnerComponent","DDInnerComponent","headers","label","key","headers2","ListDeliveriesComponent","constructor","props","downloadReport","newSearch","getSearchAll","retrieveAll","then","response","downloadData","data","items","daoitems","map","row","date","Intl","DateTimeFormat","month","day","year","format","Date","state","deliveryView","getDetailData","setState","alldata","csvLink","current","link","click","arr","i","deliveryDetails","x","push","number","supplierName","productName","quantity","pricePerUnit","pricePerOne","search","length","charAt","substring","replace","searchItems","split","startsWith","deletePDChildClicked","value","y","id","delete","retrieveAllNumbers","show","pdShow","total","pdmessages","pdmessage","message","ddmessage","catch","error","errorpdmessages","errorpdmessage","updateClickedInner","item","deliveryUpdateShow","delivery","JSON","parse","stringify","updateChildClicked","dd","ddUpdateShow","updatePdChildClicked","pd","ddid","pdUpdateShow","togglemsgbox","showdd","ddShow","getPageData","pager","filter","window","location","dderrormessage","refresh","bind","deleteClicked","updateClicked","addClicked","createRef","componentDidMount","console","log","version","errormsg","splice","deleteChildClicked","parentid","deleteChild","undefined","history","setView","path","pathname","newPath","target","href","getProductDetails","render","data2","suppliers","products","ddmessages","dderrormessages","width","padding","NumberFormat","style","currency","maximumFractionDigits","name","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport DeliveryFilter from './Filters/DeliveryFilter';\r\nimport '../myStyles/Style.css';\r\nimport { CSVLink } from \"react-csv\";\r\n//import ListDeliveryDetailInnerComponent from './ListDeliveryDetailInnerComponent';\r\nimport InventoryNumberInnerComponent from './InventoryNumberInnerComponent';\r\nimport DeliveryInnerComponent from './DeliveryInnerComponent'\r\nimport DDInnerComponent from './DDInnerComponent'\r\n\r\nconst headers = [\r\n    { label: \"number\", key: \"number\" },\r\n    { label: \"date\", key: \"date\" },\r\n    { label: \"supplier\", key: \"supplierName\" },\r\n    { label: \"total bill\", key: \"total\" },  \r\n];\r\nconst headers2 = [\r\n    { label: \"delivery\", key: \"number\" },\r\n    { label: \"date\", key: \"date\" },\r\n    { label: \"supplier\", key: \"supplierName\" },    \r\n    { label: \"product\", key: \"productName\" },\r\n    { label: \"quantity\", key: \"quantity\" },\r\n    { label: \"unit price\", key: \"pricePerUnit\" },\r\n];\r\n\r\nclass ListDeliveriesComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],            \r\n            pager: null,\r\n            filter: null,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n            message: null,\r\n            ddmessage: [],\r\n            dderrormessage:[],\r\n            ddShow: [],\r\n            pdShow: [],\r\n            pdmessage: [],\r\n            pdUpdateShow: {\r\n                pd: {}, show: false\r\n            },\r\n            ddUpdateShow: {\r\n                dd: {}, show: false\r\n            },\r\n            \r\n            deliveryUpdateShow: {\r\n                delivery: {},show:false}\r\n           \r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n       // this.deleteChildClicked = this.deleteChildClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n        this.addClicked = this.addClicked.bind(this)\r\n        this.csvLink = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"version = \" + React.version);\r\n\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        DeliveryDataService.retrieveAll(this.state.search)\r\n            .then(\r\n            response => {\r\n                \r\n               this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: response.data.filter,\r\n                   deliveryView: response.data.deliveryView || 'DeliveryView',\r\n                   //pdShow: [],\r\n                        //search: this.getSearchString()\r\n               });\r\n           }).catch((error) => {\r\n               this.setState({                  \r\n                   errormsg:  ''+ error == 'Error: Request failed with status code 401' ?  'need to login again !!!' : '' + error\r\n               })\r\n           })\r\n    }\r\n\r\n    /*\r\n    getSearchString = () => {\r\n        let search = window.location.search || '';\r\n        let index = search.indexOf(\"&deliveryView=DeliveryDetailView&\");\r\n        if (index > 0) {\r\n            search = search.replace(\"&deliveryView=DeliveryDetailView&\", \"\");\r\n            \r\n            // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n        }\r\n        else {\r\n            index = search.indexOf(\"deliveryView=DeliveryDetailView&\");\r\n            if (index > 0) {\r\n                search = search.replace(\"deliveryView=DeliveryDetailView&\", \"\");\r\n                // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n            }\r\n            index = search.indexOf(\"&deliveryView=DeliveryDetailView\");\r\n            if (index > 0) {\r\n                search = search.replace(\"&deliveryView=DeliveryDetailView\", \"\");\r\n                // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n            }\r\n            else {\r\n                index = search.indexOf(\"deliveryView=DeliveryDetailView\");\r\n                if (index > 0) {\r\n                    search = search.replace(\"deliveryView=DeliveryDetailView\", \"\")\r\n                    // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n                }\r\n            }\r\n        }\r\n       \r\n        if (search == '?') search = '';\r\n        console.log(\"search = \" + search);\r\n        return search\r\n    }*/\r\n\r\n   /* getRetrieveSearchString = () => {\r\n        let search = this.state.search;\r\n        if (this.state.deliveryView == 'DeliveryDetailView') {\r\n            console.log(\"search = \"+search)\r\n        }\r\n       \r\n            return search\r\n       \r\n    }*/\r\n\r\n    downloadReport = () => {\r\n        let newSearch = this.getSearchAll();\r\n        DeliveryDataService.retrieveAll(newSearch)\r\n            .then(response => {\r\n                //console.log(\"data has childs = \" + (response.data.deliveryDetails != null));\r\n                let downloadData = [];\r\n                let data = response.data.items || response.data.daoitems;\r\n                data = data.map(row => ({\r\n                    ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                        month: \"numeric\",\r\n                        day: \"2-digit\",\r\n                        year: \"numeric\",\r\n                    }).format(new Date(row.date))\r\n                }));\r\n                if (this.state.deliveryView == 'DeliveryDetailView') {\r\n                    this.getDetailData(data, downloadData);\r\n                   \r\n                } else {\r\n\r\n                    downloadData = data\r\n                }\r\n\r\n                this.setState({\r\n                    alldata: downloadData\r\n                });\r\n                this.csvLink.current.link.click()\r\n            })\r\n    }\r\n\r\n    getDetailData = (data, arr) => {\r\n        data.map(i => {\r\n            i.deliveryDetails.map(x => {\r\n                arr.push({\r\n                    number: i.number,\r\n                    date: i.date,\r\n                    supplierName: i.supplierName,\r\n                    productName: x.productName,\r\n                    quantity: x.quantity,\r\n                    pricePerUnit: x.pricePerOne\r\n                })\r\n            })\r\n        })\r\n    }\r\n\r\n    getSearchAll = () => {\r\n        let search = this.state.search;       \r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n        }\r\n        search.replace(/\\s+/g, '');\r\n        let newSearch = '';\r\n        let searchItems = search.split('&');\r\n        for (let i = 0; i < searchItems.length; i++) {\r\n            if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager'))\r\n                continue\r\n            else\r\n                newSearch += searchItems[i] + '&'\r\n        }\r\n        newSearch = '?' + newSearch;\r\n        newSearch += 'Pager.itemsPerPage=2147483647';       \r\n        return newSearch;\r\n    }\r\n\r\n    deleteClicked(id, x) {\r\n        \r\n        DeliveryDataService.delete(id)\r\n            .then(\r\n            response => {\r\n                let show = this.state.pdShow;\r\n                if (this.state.items[x]) {\r\n                    show.splice(x, 1);                   \r\n                }\r\n                this.setState({\r\n                    message: `Delete successful`,\r\n                    pdShow: show,\r\n                    pdmessage: [],\r\n                    ddmessage:[]\r\n                })\r\n                    this.refresh()\r\n                }\r\n            )\r\n    }\r\n\r\n    /**\r\n     * ******************\r\n     * @param {any} id\r\n     */\r\n    \r\n    deleteChildClicked(id, x, y, parentid) {//child id\r\n        \r\n        DeliveryDataService.deleteChild(id, parentid)\r\n            .then(\r\n            response => {\r\n                let length = this.state.items[x].deliveryDetails.length;\r\n\r\n                let show = this.state.pdShow;\r\n                if (this.state.pdShow[x] == undefined) show[x] = [];\r\n\r\n                let ddmessage = this.state.ddmessage;\r\n                let message = this.state.message;\r\n                let pdmessage = this.state.pdmessage;\r\n                pdmessage = [];\r\n              \r\n               /* if (length == 1) {\r\n                    show.splice(x, 1);\r\n                    message = `Delete successful`;\r\n                    ddmessage = []\r\n                } else {*/\r\n                    if (this.state.pdShow[x][y] == undefined) show[x][y] = {}\r\n                    show[x].splice(y, 1);\r\n                    ddmessage[x] = `Delete successful`;\r\n                    message = ''\r\n                //}\r\n\r\n                this.setState({\r\n                    pdShow: show,\r\n                    pdmessage: pdmessage,\r\n                    ddmessage: ddmessage,\r\n                    message: message\r\n                }) \r\n               \r\n                    this.refresh()\r\n            }\r\n        ).catch(error => {\r\n            let errormsg = error.response && error.response.data ?\r\n                error.response.data.message ? error.response.data.message : error.response.data : error + '';\r\n\r\n            let dderrormessage = this.state.dderrormessage;\r\n            dderrormessage[x] = '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + errormsg\r\n            this.setState({\r\n                dderrormessage: dderrormessage,\r\n            })\r\n            })\r\n    }\r\n\r\n    /**********************************/\r\n    \r\n    deletePDChildClicked = (value, x, y, id) => {       \r\n       /* if (this.state.items[x].deliveryDetails[y].quantity == 1) {\r\n            \r\n            this.deleteChildClicked(id,x,y)            \r\n        }\r\n        else {*/\r\n            ProductDetailDataService.delete(value)\r\n                .then(\r\n                    response => {                       \r\n                        ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id)\r\n                            .then(response => {\r\n                                let show = this.state.pdShow;\r\n                                show[x][y].data = response.data;\r\n                                let items = this.state.items;\r\n                                items[x].deliveryDetails[y].quantity = items[x].deliveryDetails[y].quantity - 1;\r\n                                items[x].total = items[x].total - items[x].deliveryDetails[y].pricePerOne;\r\n                                let pdmessages = this.state.pdmessage;                               \r\n                                if (pdmessages[x] == null) pdmessages[x] = [];\r\n                                pdmessages[x][y] = `Delete successful`;\r\n\r\n                                this.setState({\r\n                                    items: items,\r\n                                    pdShow: show,\r\n                                    pdmessage: pdmessages,\r\n                                    message: '',\r\n                                    ddmessage:[]\r\n                                })\r\n                            })            \r\n            }).catch(error => {\r\n               // console.log(\"error\");\r\n                //console.log(\"error = \" + JSON.stringify(error));\r\n                let errorpdmessages = this.state.errorpdmessage;\r\n                if (errorpdmessages == null) errorpdmessages = [];\r\n                if (errorpdmessages[x] == null) errorpdmessages[x] = [];\r\n                errorpdmessages[x][y] = `error ` + error;\r\n                this.setState({\r\n                    errorpdmessage: errorpdmessages,\r\n                })\r\n            })           \r\n       // }\r\n    }\r\n\r\n    updateClicked(id) {\r\n        this.state.deliveryView == 'DeliveryDetailView' ? \r\n            this.props.history.push(`/deliveries/${id}/DeliveryDetailView`) :\r\n            this.props.history.push(`/deliveries/${id}`)\r\n    }\r\n\r\n    updateClickedInner = (item, x) => {\r\n       /* let messages = this.state.message;\r\n        if (messages != null )\r\n            messages = null;*/ \r\n\r\n        let show = this.state.deliveryUpdateShow;\r\n        show.show = !show.show;\r\n        if (show.show == true) {\r\n            show.delivery = JSON.parse(JSON.stringify(item))\r\n            show.x = x;            \r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            deliveryUpdateShow: show,\r\n            message: null,\r\n            pdmessage: [],\r\n            ddmessage:[]\r\n        });     \r\n    }\r\n\r\n    updateChildClicked = (dd, x, y) => {\r\n\r\n       /* let ddmessages = this.state.ddmessage;\r\n        if (ddmessages[x] != null )\r\n            ddmessages[x] = null;*/\r\n\r\n        let show = this.state.ddUpdateShow;\r\n        show.show = !show.show;\r\n        if (show.show == true) {\r\n            show.dd = JSON.parse(JSON.stringify(dd))\r\n            show.x = x;\r\n            show.y = y;\r\n           \r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            ddUpdateShow: show,\r\n            ddmessage: [],\r\n            pdmessage: [],\r\n            message:null\r\n        });      \r\n    }\r\n   \r\n    updatePdChildClicked = (pd, x, y, i, ddid) => {    \r\n       /* let pdmessages = this.state.pdmessage;\r\n        if (pdmessages[x] != null && pdmessages[x][y] != null) \r\n            pdmessages[x][y] = null; */     \r\n\r\n        let show = this.state.pdUpdateShow ;       \r\n        show.show = !show.show;\r\n        if (show.show == true) {          \r\n            show.pd = JSON.parse(JSON.stringify(pd))\r\n            show.x = x;\r\n            show.y = y;\r\n            show.i = i;\r\n            show.ddid = ddid;\r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            pdUpdateShow: show,\r\n            //pdmessage: pdmessages,\r\n            ddmessage: [],\r\n            pdmessage: [],\r\n            message: null\r\n        });      \r\n    }\r\n\r\n   \r\n\r\n    \r\n    /*saveUpdatedPd = () => {\r\n        if (this.state.pdUpdateShow.pd.name == this.state.pdShow[this.state.pdUpdateShow.x][this.state.pdUpdateShow.y].data[this.state.pdUpdateShow.i].name) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {           \r\n            ProductDetailDataService.updateNumber(this.state.pdUpdateShow.pd)\r\n                .then(response => {\r\n                    this.updatePdChildClicked(null);\r\n                   \r\n                    let x = this.state.pdUpdateShow.x;\r\n                    let y = this.state.pdUpdateShow.y;\r\n                    \r\n                    let pdshow = this.state.pdShow;\r\n                    pdshow[x][y].data[this.state.pdUpdateShow.i].name = response.data;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;                    \r\n\r\n                    this.setState({                       \r\n                        pdShow: pdshow,\r\n                        pdmessage: pdmessages\r\n                    })\r\n                }).catch(error => {\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = '' + error.response.data;\r\n                    this.setState({ pdUpdateShow: show })\r\n                })\r\n        }\r\n    }*/\r\n\r\n    addClicked() {\r\n        this.props.history.push(`/deliveries/-1`)\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null })\r\n    }\r\n\r\n    setView(value) {\r\n        /*if (value.target.value === 'DeliveryDetailView' && this.state.deliveryView !== 'DeliveryDetailView') {\r\n            let search = this.state.search;           \r\n            let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryDetailView' : '?deliveryView=DeliveryDetailView';\r\n            window.location.href = ``+window.location.pathname+newsearch;          \r\n        }  */   \r\n       /* if (value.target.value === 'DeliveryView' && this.state.deliveryView == 'DeliveryDetailView') {\r\n            let search = this.state.search;\r\n            let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryView' : '?deliveryView=DeliveryView';\r\n            window.location.href = `` + window.location.pathname + newsearch;\r\n        } */\r\n        let path = window.location.pathname;\r\n        let newPath = ``;\r\n        let search =  window.location.search;\r\n        if (search.length < 1) {\r\n            newPath = path + `?deliveryView=${value.target.value}`;\r\n        }\r\n        else {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (searchItems[i].startsWith('deliveryView'))\r\n                    continue\r\n                else\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n            newPath = path + '?' + newPath + 'deliveryView=' + value.target.value;\r\n        }\r\n        window.location.href = newPath;\r\n       \r\n    }\r\n\r\n   /**\r\n    * **********\r\n    * @param {any} x\r\n    * @param {any} y\r\n    * @param {any} id\r\n    */\r\n    \r\n    getProductDetails( x, y, id) {\r\n      \r\n        if (this.state.pdShow[x] == undefined || this.state.pdShow[x][y] == undefined) {\r\n             let show = this.state.pdShow;\r\n            if (this.state.pdShow[x] == undefined) show[x] = [];\r\n\r\n            ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id )\r\n                .then(response => {\r\n                    console.log(\"pds = \" + JSON.stringify(response.data));\r\n                    show[x][y] = {}\r\n                    show[x][y].show = true;\r\n                    show[x][y].data = response.data;\r\n                this.setState({ pdShow: show });\r\n            })\r\n        }\r\n        else {\r\n            let show = this.state.pdShow;\r\n            show[x][y].show = !show[x][y].show;\r\n            this.setState({ pdShow: show })\r\n        }\r\n    }\r\n\r\n    showdd = (x) => {\r\n        let ddShow = this.state.ddShow;\r\n        ddShow[x] = !ddShow[x];\r\n        this.setState({ ddShow: ddShow })\r\n    }\r\n\r\n    getPageData = () => {\r\n        const data = this.state.items.map(row => ({\r\n            ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.date))\r\n        }));\r\n        if (this.state.deliveryView == 'DeliveryView')\r\n            return data;\r\n        else {\r\n            let downloadData = [];\r\n            downloadData = this.getDetailData(data, downloadData);\r\n            return downloadData;\r\n        }\r\n    }\r\n\r\n    render() {\r\n       /* let downloadData = [];\r\n        let databefore = this.state.items.map(row => ({\r\n            ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.date))\r\n        })); \r\n        if (this.state.deliveryView != 'DeliveryView') {\r\n            \r\n            downloadData = this.getDetailData(databefore, downloadData);\r\n\r\n            \r\n        }\r\n        const data = downloadData || databefore;*/\r\n\r\n        const data = this.state.items.map(row => ({\r\n            ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.date))\r\n        })); \r\n        const data2 = [];\r\n        if (this.state.deliveryView !== 'DeliveryView') {\r\n           this.getDetailData(data, data2);}\r\n\r\n       \r\n        return (\r\n            <div className=\"px-3 pt-3\">\r\n                {console.log(\"rendering\")}\r\n                {this.state.pdUpdateShow && this.state.pdUpdateShow.show == true &&\r\n                    <InventoryNumberInnerComponent\r\n                    pdUpdateShow={this.state.pdUpdateShow}\r\n                    pdShow={this.state.pdShow}\r\n                    pdmessage={this.state.pdmessage}\r\n                    updatePdChildClicked={() => this.updatePdChildClicked(null)}\r\n                    setpdShow={(value) => this.setState({ pdShow: value })}\r\n                    setpdMessage={(value) => this.setState({ pdmessage: value })}\r\n                    refresh={() => this.refresh()}\r\n\r\n                    //setpdUpdateShow={(value) => this.setState({ pdUpdateShow: value })} \r\n                    />}\r\n                {this.state.deliveryUpdateShow && this.state.deliveryUpdateShow.show == true &&\r\n                    <DeliveryInnerComponent\r\n                    deliveryUpdateShow={this.state.deliveryUpdateShow}\r\n                    items={this.state.items}\r\n                    message={this.state.message}\r\n                    suppliers={this.state.filter.suppliers}\r\n                    updateClickedInner={() => this.updateClickedInner(null)}\r\n                    setItems={(value) => this.setState({ items: value })}\r\n                    setMessage={(value) => this.setState({ message: `update successful` })}\r\n                    //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \r\n                    />}\r\n                {this.state.ddUpdateShow && this.state.ddUpdateShow.show == true &&\r\n                    <DDInnerComponent\r\n                        ddUpdateShow={this.state.ddUpdateShow}\r\n                        items={this.state.items}\r\n                        ddmessage={this.state.ddmessage}\r\n                        products={this.state.filter.products}\r\n                        updateChildClicked={() => this.updateChildClicked(null)}\r\n                        setItems={(value) => this.setState({ items: value })}\r\n                        setddMessage={(value) => this.setState({ ddmessage: value})}\r\n                    //setdeliveryUpdateShow={(value) => this.setState({ deliveryUpdateShow: value })} \r\n                    />}\r\n                {/*<>\r\n                    <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                    <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"}>\r\n\r\n\r\n                        <span class=\"close\" onClick={() => this.updatePdChildClicked(null)}>&times;</span>\r\n                        <h2>update inventory number </h2>\r\n                        {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && <div className=\"alert alert-success d-flex\">{this.state.pdUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.pdUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ pdUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                        <p >number : </p>\r\n                        <input type=\"text\" value={this.state.pdUpdateShow.pd.name} onChange={(value) => {\r\n                            let show = this.state.pdUpdateShow;\r\n                            show.pd.name = value.target.value;\r\n                            this.setState({ pdUpdateShow: show })\r\n                        }} />\r\n                        <button className=\"btn btn-mybtn px-5 mt-3 ml-5\" onClick={this.saveUpdatedPd}>Save</button>\r\n                        <button className=\"btn btn-mybtn btn-delete px-5 mt-3 ml-3\" onClick={() => this.updatePdChildClicked(null)}>Cancel</button>\r\n\r\n                    </div>\r\n                </>*/}\r\n                   \r\n               \r\n               \r\n                {this.state.filter && <DeliveryFilter {...this.state.filter}\r\n                    search={this.state.deliveryView == 'DeliveryView' ? this.state.search : null}/>}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                        <h5 className=\"panel-title p-2 d-inline-flex\">\r\n                            <strong> Deliveries</strong>\r\n                        </h5>\r\n                        <label className=\"mx-1 pull-right mr-5\">\r\n                            <input className=\"mx-1 m-2 mt-3 \" type=\"radio\" name=\"DeliveryView\" value=\"DeliveryDetailView\"\r\n                                checked={this.state.deliveryView == 'DeliveryDetailView'}\r\n                                onClick={\r\n                                    (value) => this.state.deliveryView != 'DeliveryDetailView' ?                              \r\n                                    this.setView(value) : {}} />Delivery&Details View\r\n                        </label>\r\n                        <label className=\"mx-1 pull-right mr-5\">\r\n                            <input className=\"mx-1 m-2 mt-3 \" type=\"radio\" name=\"DeliveryView\" value=\"DeliveryView\"\r\n                                checked={this.state.deliveryView == 'DeliveryView'}\r\n                                onClick={(value) => this.state.deliveryView == 'DeliveryDetailView' ? this.setView(value) : {}}//this.setState({ deliveryView: 'DeliveryView' }) : {}}\r\n                            />Delivery View\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"p-1\">\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap\">\r\n                            <div>\r\n                                <button className=\"btn btn-mybtn px-5  \" onClick={this.addClicked}>Add New</button>\r\n                                <CSVLink\r\n                                    className=\"btn btn-mybtn px-3 ml-2\"\r\n                                    data={this.state.deliveryView == 'DeliveryView' ? data : data2}\r\n                                    headers={ this.state.deliveryView == 'DeliveryView' ? headers : headers2 } filename={\"deliveries-page.csv\"}\r\n                                    asyncOnClick={true}\r\n                                    onClick={() => {}}\r\n                                >Download this page\r\n                                </CSVLink>\r\n                                <button className=\"btn btn-mybtn px-3 ml-2\" onClick={this.downloadReport}>Download All</button>\r\n                                <CSVLink\r\n                                    data={this.state.alldata}\r\n                                    filename={\"deliveries-all.csv\"}\r\n                                    className=\"hidden\"\r\n                                    headers={this.state.deliveryView == 'DeliveryView' ? headers : headers2}\r\n                                    ref={this.csvLink}\r\n                                    target=\"_blank\"\r\n                                />\r\n                            </div>\r\n                            {\r\n                                this.state.pager &&\r\n                                <PaginationComponent {...this.state.pager}\r\n                                    search={this.state.deliveryView == 'DeliveryView' ? this.state.search : null}/>\r\n                            }\r\n                        </div>\r\n                        {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                        {\r\n                            this.state.message &&\r\n                            <div className=\"alert alert-success d-flex\">{this.state.message}\r\n                                <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={this.togglemsgbox}></i>\r\n                            </div>\r\n                        }        \r\n                       \r\n                        {\r\n                            this.state.deliveryView == 'DeliveryDetailView' &&                            \r\n                                    this.state.items.map(\r\n                                        (item, x) =>\r\n                                            <div className=\"panel-body\">\r\n                                                <table className=\"table  border table-s\">\r\n                                                    <tbody>\r\n                                                        <tr >\r\n                                                            <th className=\"wl pl-5 hoverable\"\r\n                                                                onClick={() => {\r\n                                                                    this.showdd(x)\r\n                                                                }}> Number : {item.number} </th>\r\n                                                            <th className=\"wl pl-3 hoverable\"\r\n                                                                onClick={() => {\r\n                                                                    this.showdd(x)\r\n                                                                }}\r\n                                                            > Date : {\r\n                                                                new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                    month: \"long\",\r\n                                                                    day: \"2-digit\",\r\n                                                                    year: \"numeric\",                                                                  \r\n                                                                }).format(new Date(item.date))\r\n                                                            }</th>\r\n                                                            <th className=\" wl hoverable\"\r\n                                                                onClick={() => {\r\n                                                                    this.showdd(x)\r\n                                                                }}> Supplier : {item.supplierName || '-'}</th>\r\n                                                            <th className=\"d-flex justify-content-end mr-1\">\r\n                                                                <button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClickedInner(item, x)}>Update</button>\r\n                                                                <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id, x)}>Delete</button>\r\n                                                            </th>\r\n                                                         </tr>\r\n                                                         <tr>\r\n                                                            <td colspan=\"4\">\r\n                                                                {this.state.ddShow && this.state.ddShow[x] &&\r\n                                                                    <>\r\n                                                                        {/*item.deliveryDetails && \r\n                                                                    <ListDeliveryDetailInnerComponent\r\n                                                                        item={item}\r\n                                                                        x={x}\r\n                                                                        pdShow={this.state.pdShow}\r\n                                                                        pdmessage={this.state.pdmessage}\r\n                                                                        setmessage={(msg) => this.setState({ message: msg })}\r\n                                                                        refresh={this.refresh}\r\n                                                                        items={this.state.items}\r\n                                                                        setStateItems={(value) => this.setState({ items: value })}\r\n                                                                        // pdUpdateShow={this.state.pdUpdateShow}\r\n                                                                        // setStatepdUpdateShow={(value) => this.setState({ pdUpdateShow: value })}\r\n                                                                        updatePdChildClicked={(pd, x, y, i) => this.updatePdChildClicked(pd, x, y, i)}\r\n                                                                        historyPush={(value) => this.props.history.push(value)}\r\n                                                                        setStatePdShow={(value) => this.setState({ pdShow: value })}\r\n                                                                        setStatePdMessage={(value) => this.setState({ pdmessage: value })}/>*/}\r\n                                                                        {\r\n                                                                            this.state.ddmessage && this.state.ddmessage[x] &&\r\n                                                                            <div className=\"alert alert-success d-flex\">{this.state.ddmessage[x]}\r\n                                                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={() => {\r\n                                                                                    let ddmessages = this.state.ddmessage;\r\n                                                                                    ddmessages[x] = null;\r\n                                                                                    this.setState({ ddmessage: ddmessages })\r\n                                                                                }}></i>\r\n                                                                            </div>\r\n                                                                    }\r\n                                                                    {\r\n                                                                        this.state.dderrormessage && this.state.dderrormessage[x] &&\r\n                                                                        <div className=\"alert alert-warning d-flex\">{this.state.dderrormessage[x]}\r\n                                                                            <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={() => {\r\n                                                                                let dderrormessages = this.state.dderrormessage;\r\n                                                                                dderrormessages[x] = null;\r\n                                                                                this.setState({ dderrormessage: dderrormessages })\r\n                                                                            }}></i>\r\n                                                                        </div>\r\n                                                                    }\r\n                                                                        <table className=\"table border x-Table \">\r\n                                                                            <tbody>\r\n                                                                                <tr>\r\n                                                                                    <td>Product</td>\r\n                                                                                    <td>Quantity</td>\r\n                                                                                    <td>Unit Price</td>\r\n                                                                                    <td>Total</td>\r\n                                                                                <td style={{ width: '140px', padding: '.2rem .5rem' }}>\r\n                                                                                    <button className=\"btn btn-mybtn pull-right\" style={{ padding: '.15rem .6rem' }}\r\n                                                                                     onClick={() => this.updateChildClicked(null, x, null)}>add one</button>\r\n                                                                                </td>\r\n                                                                                </tr>\r\n                                                                                {\r\n                                                                                    item.deliveryDetails.map(\r\n                                                                                        (dd, y) =>\r\n                                                                                            <>\r\n                                                                                                <tr key={dd.id}>\r\n                                                                                                    <td><p className=\"hoverable\"\r\n                                                                                                        onClick={() => {\r\n                                                                                                            this.getProductDetails(x, y, dd.id)\r\n                                                                                                        }}>{dd.productName}</p></td>\r\n                                                                                                    <td className=\"hoverable\"\r\n                                                                                                        onClick={() => {\r\n                                                                                                            this.getProductDetails(x, y, dd.id)\r\n                                                                                                        }}><p>{dd.quantity}</p></td>\r\n                                                                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                                        style: \"currency\",\r\n                                                                                                        currency: \"BGN\",\r\n                                                                                                        maximumFractionDigits: 2\r\n                                                                                                    }).format(dd.pricePerOne)}</td>\r\n                                                                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                                        style: \"currency\",\r\n                                                                                                        currency: \"BGN\",\r\n                                                                                                        maximumFractionDigits: 2\r\n                                                                                                    }).format(dd.pricePerOne * dd.quantity)}  </td>\r\n                                                                                                    <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateChildClicked(dd, x, y)}>Update</button>\r\n                                                                                                        <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteChildClicked(dd.id, x, y, item.id)}>Delete</button></td>\r\n                                                                                                </tr>\r\n                                                                                                {\r\n                                                                                                    this.state.pdShow[x] && this.state.pdShow[x][y] && this.state.pdShow[x][y].show\r\n                                                                                                    &&\r\n                                                                                                    <tr>\r\n                                                                                                        <td colspan=\"5\">\r\n                                                                                                            <>\r\n                                                                                                            {\r\n                                                                                                                this.state.pdmessage[x] && this.state.pdmessage[x][y] &&\r\n                                                                                                                <div className=\"alert alert-success d-flex\">{this.state.pdmessage[x][y]}\r\n                                                                                                                    <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                                                                                        onClick={() => {\r\n                                                                                                                            let pdmessages = this.state.pdmessage;\r\n                                                                                                                            pdmessages[x][y] = null;\r\n                                                                                                                            this.setState({ pdmessage: pdmessages })\r\n                                                                                                                        }}>\r\n                                                                                                                    </i>\r\n                                                                                                                </div>\r\n                                                                                                            }\r\n                                                                                                                {this.state.errorpdmessage &&\r\n                                                                                                                this.state.errorpdmessage[x] && this.state.errorpdmessage[x][y] &&\r\n                                                                                                                <div className=\"alert alert-warning d-flex\">{this.state.errorpdmessage[x][y]}\r\n                                                                                                                    <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                                                                                        onClick={() => {\r\n                                                                                                                            let errorpdmessages = this.state.errorpdmessage;\r\n                                                                                                                            errorpdmessages[x][y] = null;\r\n                                                                                                                            this.setState({ errorpdmessage: errorpdmessages })\r\n                                                                                                                        }}>\r\n                                                                                                                    </i>\r\n                                                                                                                </div>\r\n                                                                                                            }\r\n                                                                                                            <table className=\"ml-5 mb-3\" style={{ width: '80%' }}>\r\n                                                                                                                <tr><td style={{ width: '10%' }}>number</td>\r\n                                                                                                                    <td className=\"pl-5\">inventory number</td>\r\n                                                                                                                    <td style={{ width: '140px', padding: '.2rem .5rem'}}>                                                                                                                       \r\n                                                                                                                        <button className=\"btn btn-mybtn pull-right\" style={{ padding: '.15rem .6rem' }}\r\n                                                                                                                               onClick={() => this.updatePdChildClicked(null, x, y, null, dd.id)}>add one</button>                                                                                                                        \r\n                                                                                                                    </td></tr>\r\n                                                                                                                {this.state.pdShow[x][y].data.map((pd, i) =>\r\n                                                                                                                    <tr>\r\n                                                                                                                        <td >{i + 1}</td>\r\n                                                                                                                        <td className=\"pl-5 pb-3 hoverable\"\r\n                                                                                                                            onClick={() => {\r\n                                                                                                                                this.props.history.push(`/productDetails?Filter.id=${pd.value}`)\r\n                                                                                                                            }}>\r\n                                                                                                                            {pd.name}\r\n                                                                                                                        </td>\r\n                                                                                                                        <td><button className=\"btn btn-mybtn mr-1\" onClick={() => {\r\n                                                                                                                            this.updatePdChildClicked(pd, x, y, i)\r\n                                                                                                                        }}>Update</button>\r\n                                                                                                                            <button className=\"btn btn-mybtn btn-delete\"\r\n                                                                                                                                onClick={() => this.deletePDChildClicked(pd.value, x, y, dd.id)}>\r\n                                                                                                                                Delete</button></td>\r\n                                                                                                                    </tr>\r\n                                                                                                                )}\r\n                                                                                                                </table>\r\n                                                                                                                </>\r\n                                                                                                        </td>\r\n                                                                                                    </tr>\r\n                                                                                                }\r\n                                                                                            </>\r\n                                                                                    )}\r\n                                                                            </tbody>\r\n                                                                        </table>\r\n                                                                    </>\r\n                                                                }\r\n                                                                   \r\n                                                                \r\n                                                                <span class=\"pull-right\" style={{ marginRight: '100px' }}><strong>Total Bill : {new Intl.NumberFormat(\"en-GB\", {\r\n                                                                    style: \"currency\",\r\n                                                                    currency: \"BGN\",\r\n                                                                    maximumFractionDigits: 2\r\n                                                                }).format(item.total)} </strong> {}</span>\r\n                                                         </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>                                            \r\n                                         )}                      \r\n\r\n                        {                            \r\n                            this.state.deliveryView == 'DeliveryView' &&\r\n                             <table className=\"table border-bottom my-table\" >\r\n                                <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">number</th>\r\n                                            <th scope=\"col\" >date</th>\r\n                                            <th scope=\"col\" >supplier</th>                                   \r\n                                            <th >total</th>\r\n                                            <th scope=\"col\">Update &emsp;&nbsp; Delete</th>\r\n                                    </tr>\r\n                                </thead>                           \r\n                                <tbody>\r\n                                    {\r\n                                        this.state.items.map(\r\n                                            item =>\r\n                                                <tr>\r\n                                                    <td>{item.number}</td>\r\n                                                    <td>\r\n                                                        {new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                            month: \"long\",\r\n                                                            day: \"2-digit\",\r\n                                                            year: \"numeric\",\r\n                                                        }).format(new Date(item.date))}\r\n                                                    </td>\r\n                                                    <td >{item.supplierName || '-'}</td>\r\n                                                    <td >{\r\n                                                        new Intl.NumberFormat(\"en-GB\", {\r\n                                                            style: \"currency\",\r\n                                                            currency: \"BGN\",\r\n                                                            maximumFractionDigits: 2\r\n                                                        }).format(item.total)}</td>\r\n                                                    <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                        <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id)}>Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )}                                    \r\n                            </tbody>\r\n                        </table>\r\n                       }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListDeliveriesComponent"]},"metadata":{},"sourceType":"module"}