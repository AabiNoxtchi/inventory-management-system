{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserCategoryInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserCategoryDataService from '../service/UserCategoryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\n\nclass UserCategoryInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      let item = {\n        id: this.state.id,\n        categoryId: this.state.categoryId,\n        amortizationPercent: this.state.amortizationPercent\n      }; //this.state.categoryUpdateShow.category;\n\n      let productType = this.state.productType; // item.name = item.name ? item.name.trim() : item.name;\n\n      console.log(\"item to save = \" + JSON.stringify(item));\n\n      if (!item.categoryId || item.categoryId == \"undefined\" || productType === 'LTA' && (!item.amortizationPercent || item.amortizationPercent == \"undefined\")) {\n        let show = this.state.categoryUpdateShow;\n        show.error = \"All fields are required\";\n        this.setState({\n          categoryUpdateShow: show\n        });\n      } else {\n        UserCategoryDataService.save(item).then(response => {\n          let msg = this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? `Update successful` : `Save successful`;\n          this.props.updateClickedInner(null);\n          this.props.setMessage(msg);\n          this.props.refresh();\n        }).catch(error => {\n          let errormsg = error.response && error.response.data ? error.response.data.message ? error.response.data.message : error.response.data : error + '';\n          let show = this.state.categoryUpdateShow;\n          show.error = errormsg;\n          this.setState({\n            categoryUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.state = {\n      categoryUpdateShow: props.categoryUpdateShow,\n      names: [],\n      id: null,\n      categoryId: null,\n      amortizationPercent: null,\n      productType: null\n    };\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  refresh(search) {\n    // console.log(\"search = \" + search);\n    UserCategoryDataService.retrieve(this.state.categoryUpdateShow.category.id || -1).then(response => {\n      console.log(\"got response = \" + JSON.stringify(response));\n      this.setState({\n        //item:response.data\n        names: response.data.names,\n        id: response.data.id,\n        categoryId: response.data.categoryId,\n        amortizationPercent: response.data.amortizationPercent,\n        productType: this.state.categoryUpdateShow.category.category && this.state.categoryUpdateShow.category.category.productType\n      }); // console.log(\"data length = \" + this.state.filteredNumbers.length);\n    }).catch(error => console.log(\"error = \" + error));\n  }\n\n  onamortizationChange(value) {\n    let c = this.state.amortizationPercent; // if (c.category.productType === value.target.value) return;\n\n    c = value.target.value;\n    this.setState({\n      amortizationPercent: c\n    });\n  }\n\n  onCategoryChange(selected) {\n    let c = this.state.categoryId;\n    c = selected.value;\n    let type = this.state.productType;\n    type = this.state.names.filter(x => x.value == selected.value)[0].filterBy;\n    console.log(\"type = \" + type);\n    this.setState({\n      categoryId: c,\n      productType: type\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.categoryUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.categoryUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"40%\",\n          height: \"60%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? \"update\" : \"add\", \" category\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.categoryUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.categoryUpdateShow;\n              show.error = '';\n              this.setState({\n                categoryUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 25\n        }, this), console.log(\"state product type = \" + this.state.productType), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"name :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          items: this.state.names,\n          value: this.state.categoryId,\n          onChange: selected => this.onCategoryChange(selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"ml-5\",\n            children: \"amortization :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            className: \"form-control inline p-2\",\n            disabled: this.state.productType == 'STA',\n            value: this.state.amortizationPercent || '',\n            min: \"0\",\n            max: \"100\",\n            onChange: value => {\n              this.onamortizationChange(value);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 21\n          }, this), \"\\xA0%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5\",\n          onClick: this.saveUpdated,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserCategoryInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserCategoryInnerComponent.jsx"],"names":["React","Component","UserCategoryDataService","CustomSelect","UserCategoryInnerComponent","constructor","props","saveUpdated","item","id","state","categoryId","amortizationPercent","productType","console","log","JSON","stringify","show","categoryUpdateShow","error","setState","save","then","response","msg","category","updateClickedInner","setMessage","refresh","catch","errormsg","data","message","names","componentDidMount","search","retrieve","onamortizationChange","value","c","target","onCategoryChange","selected","type","filter","x","filterBy","render","width","height","length"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserCategoryDataService from '../service/UserCategoryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\nclass UserCategoryInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state =\r\n            {\r\n            categoryUpdateShow: props.categoryUpdateShow,\r\n            names: [],\r\n            id:null,\r\n            categoryId: null,\r\n            amortizationPercent: null,\r\n            productType:null\r\n\r\n            }\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh()\r\n    }\r\n\r\n    refresh(search) {\r\n        // console.log(\"search = \" + search);\r\n        UserCategoryDataService.retrieve(this.state.categoryUpdateShow.category.id || -1)\r\n            .then(response => {\r\n                console.log(\"got response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                    //item:response.data\r\n                    names: response.data.names,\r\n                    id: response.data.id,\r\n                    categoryId: response.data.categoryId,\r\n                    amortizationPercent: response.data.amortizationPercent,\r\n                    productType: this.state.categoryUpdateShow.category.category && this.state.categoryUpdateShow.category.category.productType\r\n\r\n                })\r\n                // console.log(\"data length = \" + this.state.filteredNumbers.length);\r\n            }).catch(error =>\r\n                console.log(\"error = \" + error)\r\n            )\r\n    }\r\n\r\n    saveUpdated = () => {\r\n        let item = { id:this.state.id, categoryId: this.state.categoryId, amortizationPercent: this.state.amortizationPercent }//this.state.categoryUpdateShow.category;\r\n        let productType = this.state.productType;\r\n        // item.name = item.name ? item.name.trim() : item.name;\r\n        console.log(\"item to save = \" + JSON.stringify(item));\r\n        if (!item.categoryId || item.categoryId == \"undefined\" ||\r\n            (productType === 'LTA' && (!item.amortizationPercent || item.amortizationPercent == \"undefined\"))) {\r\n            let show = this.state.categoryUpdateShow;\r\n            show.error = \"All fields are required\";\r\n            this.setState({ categoryUpdateShow: show })\r\n        } else {\r\n            UserCategoryDataService.save(item)\r\n                .then(response => {\r\n                    let msg = this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? `Update successful` : `Save successful`;\r\n                    this.props.updateClickedInner(null);\r\n                    this.props.setMessage(msg);\r\n                    this.props.refresh();\r\n                }).catch(error => {\r\n                    let errormsg = error.response && error.response.data ?\r\n                        error.response.data.message ? error.response.data.message : error.response.data : error + '';\r\n                    let show = this.state.categoryUpdateShow;\r\n                    show.error = errormsg;\r\n                    this.setState({ categoryUpdateShow: show })\r\n                })\r\n        }\r\n        \r\n\r\n    }\r\n\r\n    onamortizationChange(value) {\r\n        let c = this.state.amortizationPercent;\r\n       // if (c.category.productType === value.target.value) return;\r\n        c = value.target.value;\r\n        this.setState({\r\n            amortizationPercent: c\r\n        })\r\n    }\r\n    onCategoryChange(selected) {\r\n        let c = this.state.categoryId;\r\n        c = selected.value;\r\n        let type = this.state.productType;\r\n        type = (this.state.names.filter(x => x.value == selected.value))[0].filterBy;\r\n        console.log(\"type = \"+type)\r\n        this.setState({\r\n            categoryId: c,\r\n            productType:type\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.categoryUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.categoryUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"40%\", height: \"60%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateClickedInner(null)}>&times;</span>\r\n                    <h2>{this.state.categoryUpdateShow.category.id && this.state.categoryUpdateShow.category.id > 0 ? \"update\" : \"add\"} category</h2>\r\n                    {this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.categoryUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.categoryUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ categoryUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    {console.log(\"state product type = \" + this.state.productType)}\r\n                    <h6 className={this.state.categoryUpdateShow.error && this.state.categoryUpdateShow.error.length > 1 ?\r\n                        \"ml-5\" : \"mt-5 ml-5\"}>name :</h6>\r\n                    <CustomSelect\r\n                        items={this.state.names}\r\n                        value={this.state.categoryId}\r\n                        onChange={(selected) => this.onCategoryChange(selected)}\r\n                    />\r\n                    <div>\r\n                    <h6 className=\"ml-5\">amortization :</h6>\r\n                    <input type=\"number\" className=\"form-control inline p-2\"\r\n                        disabled={this.state.productType=='STA'}\r\n                        value={this.state.amortizationPercent || ''}\r\n                        min=\"0\"\r\n                        max=\"100\"\r\n                        onChange={(value) => {\r\n                            this.onamortizationChange(value)\r\n                            }} />&nbsp;%\r\n                        </div>\r\n                    \r\n                    <button className=\"btn btn-mybtn px-5\" onClick={this.saveUpdated}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClickedInner(null)}>Cancel</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserCategoryInnerComponent"]},"metadata":{},"sourceType":"module"}