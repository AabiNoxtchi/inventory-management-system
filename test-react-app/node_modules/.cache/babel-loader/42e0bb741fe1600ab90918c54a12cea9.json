{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserProfileInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\n\nclass UserProfileInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {};\n\n    this.onProductChange = selected => {\n      console.log(\"selected.value = \" + selected.value);\n      this.getNewSearch('productId', selected.value); // let search = this.getNewSearch('productId', selected.value);\n      //this.refresh(search)\n    };\n\n    this.getNewSearch = (name, value) => {\n      let search = this.state.lastSearch;\n      let newPath = ``;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n\n        let searchItems = search.split('&');\n\n        for (let i = 0; i < searchItems.length; i++) {\n          if (!searchItems[i].startsWith(name)) newPath += searchItems[i] + '&';\n        }\n      }\n\n      if (value && value != 'undefined') newPath += name + '=' + value;else {\n        if (name == 'notIn') {\n          let ids = '';\n          this.state.selectedPds.map(pd => ids += pd.value + ',');\n          ids = ids.substring(0, ids.length - 1);\n          newPath += name + '=' + ids;\n        } else newPath = newPath.substring(0, newPath.length - 1);\n      }\n      console.log('newPath =' + newPath);\n      newPath = '?' + newPath;\n      this.setState({\n        lastSearch: newPath\n      });\n      this.refresh(newPath); // return newPath;\n    };\n\n    this.oninventoryAdd = selected => {\n      console.log(\"in add inventory\");\n      if (selected.name == '') return;\n      let selectedPds = this.state.selectedPds;\n      selectedPds.push({\n        name: selected.label,\n        value: selected.value\n      });\n      this.setState({\n        selectedPds: selectedPds\n      });\n      this.getNewSearch('notIn');\n    };\n\n    this.onFilterDateChange = date => {\n      console.log(\"2 = \" + date);\n      if (date != null) console.log(\"type of 2\" + typeof date);\n      console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\n      if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof this.state.selectedDate);\n      if (this.isDateEqual(this.state.selectedDate, date)) return;\n\n      if (date) {\n        date = date.toISOString();\n        date = date.substring(0, date.indexOf('T'));\n      }\n      /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n          month: \"numeric\",\r\n          day: \"2-digit\",\r\n          year: \"numeric\",\r\n      }).format(new Date(date));*/\n\n\n      console.log(\"date = \" + date);\n      this.setState({\n        selectedDate: date\n      });\n      this.getNewSearch('dateCreatedAfter', date); // let search = \n    };\n\n    this.onDateGivenChange = date => {\n      console.log(\"date = \" + date);\n      let profileShow = this.state.profileShow;\n      profileShow.profile.givenAt = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.onDateReturnedChange = date => {\n      console.log(\"date = \" + date);\n      let profileShow = this.state.profileShow;\n      profileShow.profile.date = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.isDateEqual = (date1, date2) => {\n      //date2 string\n      // date1 string or date \n      console.log(\"typeof date1 = \" + typeof date1);\n      console.log(\"typeof date2 = \" + typeof date2);\n      console.log(\"date1 = \" + date1);\n      console.log(\" date2 = \" + date2);\n      if (date1 == date2) return true;else {\n        date1 = new Date(date1);\n        date2 = new Date(date2);\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) return true;\n      }\n      return false;\n    };\n\n    this.state = {\n      profileShow: props.profileShow,\n      items: props.items,\n      message: props.message,\n      filter: props.filter,\n      filteredNumbers: [],\n      lastSearch: '?isDiscarded=false&isAvailable=true&freeInventory=true',\n      selectedDate: null,\n      filteredcount: '',\n      selectedPds: []\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"user profile inner component did mount \"); // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\n\n    this.refresh(this.state.lastSearch);\n  }\n\n  refresh(search) {\n    ProductDetailDataService.retrieveAllNumbers(search).then(response => {\n      console.log(\"got response\");\n      this.setState({\n        filteredNumbers: response.data,\n        filteredcount: response.data.length\n      });\n      console.log(\"data length = \" + this.state.filteredNumbers.length);\n    }).catch(error => console.log(\"error = \" + error));\n  }\n\n  oninventoryRemove(i) {\n    console.log(\"in removeiventory\");\n    let selectedPds = this.state.selectedPds;\n    selectedPds.splice(i, 1);\n    this.setState({\n      selectedPds: selectedPds\n    });\n    this.getNewSearch('notIn');\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"modal d-block \" : \"d-none\",\n        style: {\n          width: \"80%\",\n          height: \"60%\",\n          overflow: \"visible\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close pt-3\",\n          onClick: () => this.props.updateClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.profileShow.up ? 'Update' : 'Add', \" profile \\u2003(\", this.state.profileShow.profile.userName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-3 inline w100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border pt-1 b-r r-c foo\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"move-top top-l\",\n              children: \"filter for inventory select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40 pr-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"product : \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filter.productNames,\n                onChange: selected => this.onProductChange(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w20\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"\",\n                children: \"created after :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline w100\",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control w100 p-2 ml-0\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  isClearable: true,\n                  placeholderText: \"...\",\n                  selected: this.state.selectedDate && new Date(this.state.selectedDate) || null,\n                  onChange: selected => {\n                    this.onFilterDateChange(selected);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"move-top top-r\",\n              children: [\" \", this.state.filteredcount, \" items found\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"inline\",\n                children: \"inventory :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filteredNumbers,\n                onChange: selected => this.oninventoryAdd(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 21\n        }, this), this.state.profileShow.error && this.state.profileShow.error.length > 1 &&\n        /*#__PURE__*/\n        // error div\n        _jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.profileShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.profileShow;\n              show.error = '';\n              this.setState({\n                profileShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50 m-0 pl-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 pl-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date given :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2 p-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: new Date()\n                  /*isClearable\r\n                  placeholderText=\"select Date!\"*/\n                  ,\n                  selected: this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n                  onChange: date => {\n                    this.onDateGivenChange(date); //console.log(\"date changed = \" + date);                               \n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 25\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date returned :\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2 p-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  disabled: this.state.profileShow.profile.id && this.state.profileShow.profile.id > 0 ? '' : 'disabled'\n                  /*isClearable\r\n                  placeholderText=\"select Date!\"*/\n                  ,\n                  selected: this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt) || null,\n                  onChange: date => {\n                    this.onDateReturnedChange(date); //console.log(\"date changed = \" + date);                               \n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 275,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-3 mb-5 d-flex justify-content-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5\",\n                onClick: this.saveUpdated,\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 292,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5\",\n                onClick: () => this.props.updateClicked(null),\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 291,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50 mb-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"\",\n              children: \"selected inventory :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), this.state.selectedPds && this.state.selectedPds.map((pd, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [i + 1, \" :\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n                value: pd.name,\n                className: \"form-control inline w80 m-0 p-2 pl-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 50\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete m-0 ml-1\",\n                type: \"button\",\n                onClick: () => {\n                  this.oninventoryRemove(i);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 309,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 306,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 37\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserProfileInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserProfileInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","UserProfileDataService","DatePicker","CustomSelect","ProductDetailFilter","UserProfileInnerComponent","constructor","props","saveUpdated","onProductChange","selected","console","log","value","getNewSearch","name","search","state","lastSearch","newPath","length","charAt","substring","searchItems","split","i","startsWith","ids","selectedPds","map","pd","setState","refresh","oninventoryAdd","push","label","onFilterDateChange","date","selectedDate","isDateEqual","toISOString","indexOf","onDateGivenChange","profileShow","profile","givenAt","onDateReturnedChange","date1","date2","Date","getFullYear","getMonth","getDate","items","message","filter","filteredNumbers","filteredcount","bind","componentDidMount","retrieveAllNumbers","then","response","data","catch","error","oninventoryRemove","splice","render","show","width","height","overflow","updateClicked","up","userName","productNames","id","returnedAt"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport UserProfileDataService from '../service/UserProfileDataService'\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\r\n\r\n\r\nclass UserProfileInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                profileShow: props.profileShow,\r\n                items: props.items,\r\n                message: props.message,\r\n                filter: props.filter,\r\n            filteredNumbers: [],\r\n            lastSearch: '?isDiscarded=false&isAvailable=true&freeInventory=true',\r\n            selectedDate: null,\r\n            filteredcount: '',\r\n            selectedPds:[]\r\n\r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(\"user profile inner component did mount \")\r\n       // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\r\n        this.refresh(this.state.lastSearch)\r\n       \r\n    }\r\n\r\n    refresh(search) {\r\n\r\n        ProductDetailDataService.retrieveAllNumbers(search)\r\n            .then(response => {\r\n                console.log(\"got response\");\r\n                this.setState({\r\n                    filteredNumbers: response.data,\r\n                    filteredcount: response.data.length\r\n                })\r\n                console.log(\"data length = \" + this.state.filteredNumbers.length);\r\n            }).catch(error =>\r\n                console.log(\"error = \" + error)\r\n                )\r\n    }\r\n\r\n    saveUpdated = () => {\r\n     \r\n    }\r\n\r\n    onProductChange = (selected) => {\r\n\r\n        console.log(\"selected.value = \" + selected.value);\r\n        this.getNewSearch('productId', selected.value);\r\n       // let search = this.getNewSearch('productId', selected.value);\r\n        //this.refresh(search)\r\n        \r\n\r\n\r\n    }\r\n    getNewSearch = (name, value) => {\r\n\r\n        let search = this.state.lastSearch;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (!searchItems[i].startsWith(name))\r\n                    newPath += searchItems[i] + '&'               \r\n            }\r\n        }\r\n\r\n      \r\n        if (value && value != 'undefined')\r\n            newPath += name + '=' + value;\r\n        else {\r\n            if (name == 'notIn') {\r\n                let ids = ''\r\n                this.state.selectedPds.map(pd => ids += pd.value + ',')\r\n                ids = ids.substring(0, ids.length - 1);\r\n                newPath+= name+'='+ids\r\n            }\r\n            else\r\n                newPath = newPath.substring(0, newPath.length - 1);\r\n        }\r\n        console.log('newPath =' + newPath);\r\n         newPath = '?' + newPath\r\n        this.setState({ lastSearch: newPath })\r\n        this.refresh(newPath)\r\n       // return newPath;\r\n\r\n\r\n    }\r\n    oninventoryAdd = (selected) => {\r\n        console.log(\"in add inventory\")\r\n        if (selected.name == '') return;\r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.push({ name: selected.label, value: selected.value })\r\n        this.setState({ selectedPds: selectedPds })\r\n        this.getNewSearch('notIn')\r\n\r\n    }\r\n    oninventoryRemove (i) {\r\n       console.log(\"in removeiventory\")\r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.splice(i, 1);\r\n        this.setState({ selectedPds: selectedPds })\r\n        this.getNewSearch('notIn')\r\n    }\r\n\r\n\r\n    onFilterDateChange = (date) => {\r\n        console.log(\"2 = \" + date);\r\n        if (date != null) console.log(\"type of 2\" + typeof (date));\r\n        console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\r\n        if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof(this.state.selectedDate));\r\n        \r\n\r\n        if (this.isDateEqual(this.state.selectedDate, date)) return;\r\n        \r\n       if(date) {\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n        } \r\n        /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n            month: \"numeric\",\r\n            day: \"2-digit\",\r\n            year: \"numeric\",\r\n        }).format(new Date(date));*/\r\n        console.log(\"date = \" + date);\r\n        this.setState({ selectedDate: date });\r\n        this.getNewSearch('dateCreatedAfter', date);\r\n       // let search = \r\n        \r\n        \r\n    }\r\n\r\n    onDateGivenChange = (date) => {\r\n        console.log(\"date = \" + date);\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.givenAt = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n    onDateReturnedChange = (date) => {\r\n        console.log(\"date = \" + date);\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.date = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n\r\n    isDateEqual = (date1, date2) => {\r\n        //date2 string\r\n        // date1 string or date \r\n        console.log(\"typeof date1 = \" + typeof date1);\r\n        console.log(\"typeof date2 = \" + typeof date2);\r\n        console.log(\"date1 = \" + date1);\r\n        console.log(\" date2 = \" + date2);\r\n        if (date1 == date2) return true       \r\n        else {\r\n            date1 = new Date(date1);\r\n            date2 = new Date(date2);\r\n            if (date1.getFullYear() === date2.getFullYear() &&\r\n                date1.getMonth() === date2.getMonth() &&\r\n                date1.getDate() === date2.getDate())\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.profileShow.show ? \"modal d-block \" : \"d-none\"} style={{ width: \"80%\", height: \"60%\", overflow: \"visible\" }}>\r\n\r\n\r\n                    <span class=\"close pt-3\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                    <h2>{this.state.profileShow.up ? 'Update' : 'Add'} profile &emsp;({this.state.profileShow.profile.userName})</h2>\r\n                   \r\n                    <div className=\"mt-3 inline w100\">\r\n                        <div className=\"border pt-1 b-r r-c foo\"> {/*********************** small filter **************************/}\r\n                            <label className=\"move-top top-l\">filter for inventory select</label>\r\n\r\n                            <div className=\"inline w40 pr-1\">\r\n                                <h6>product : </h6>\r\n                                <CustomSelect\r\n                                    className={\"inline w100 ml-0\"}\r\n                                    items={this.state.filter.productNames}\r\n                                    onChange={(selected) => this.onProductChange(selected)}\r\n                                />\r\n                            </div>\r\n\r\n                            <div className=\"inline w20\">\r\n                                <h6 className=\"\">created after :</h6>\r\n                                <div className=\"inline w100\">\r\n                                    <DatePicker\r\n                                        className=\"form-control w100 p-2 ml-0\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        isClearable\r\n                                        placeholderText=\"...\"\r\n                                        selected={this.state.selectedDate && new Date(this.state.selectedDate) || null}\r\n                                        onChange={selected => {\r\n                                            this.onFilterDateChange(selected)\r\n                                        }} />\r\n                                </div>\r\n                            </div>\r\n\r\n                            <span className=\"move-top top-r\"> {this.state.filteredcount} items found</span>\r\n                            <div className=\"inline w40\">\r\n                                <h6 className=\"inline\">inventory :&nbsp;</h6>\r\n                                <CustomSelect\r\n                                    className={\"inline w100 ml-0\"}\r\n                                    items={this.state.filteredNumbers}\r\n                                    onChange={(selected) => this.oninventoryAdd(selected)}\r\n                                />\r\n                            </div>\r\n\r\n                        </div>\r\n                    </div>{/*******************    filter over  ******************/}\r\n\r\n                    {this.state.profileShow.error && this.state.profileShow.error.length > 1 && // error div\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.profileShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.profileShow;\r\n                                    show.error = '';\r\n                                    this.setState({ profileShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>\r\n                    }\r\n                    {/***************  form  ********************/}\r\n                    <div className={this.state.profileShow.error && this.state.profileShow.error.length > 1 ?\r\n                        \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\"}>\r\n\r\n                        <div className=\"inline w50 m-0 pl-5\">{/*************** form right **************/}\r\n\r\n                            <div className=\"inline m-0 pl-5\">\r\n                    <h6 >date given :</h6> \r\n                    <div>\r\n                        <DatePicker\r\n                                        className=\"form-control inline-2 p-2\"\r\n                            dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        maxDate={new Date()}\r\n                            /*isClearable\r\n                            placeholderText=\"select Date!\"*/\r\n                            selected={(this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt))|| new Date()}\r\n                            onChange={date => {\r\n                                this.onDateGivenChange(date);\r\n                                //console.log(\"date changed = \" + date);                               \r\n                            }} />\r\n                    </div>\r\n                    </div>\r\n\r\n                            <div className=\"inline m-0 px-5\">\r\n                        <h6 >date returned :</h6>\r\n                        <div>\r\n                            <DatePicker\r\n                                        className=\"form-control inline-2 p-2\"\r\n                                dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        disabled={this.state.profileShow.profile.id && this.state.profileShow.profile.id > 0 ? '':'disabled'}\r\n                            /*isClearable\r\n                            placeholderText=\"select Date!\"*/\r\n                                        selected={(this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt)) || \r\n                                null}\r\n                                onChange={date => {\r\n                                    this.onDateReturnedChange(date);\r\n                                    //console.log(\"date changed = \" + date);                               \r\n                                }} />\r\n                        </div>\r\n                            </div>\r\n\r\n                            <div className=\"mt-3 mb-5 d-flex justify-content-center\">\r\n                                <button className=\"btn btn-mybtn px-5\" onClick={this.saveUpdated}>Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                            </div>\r\n                        \r\n                        </div> {/*************** form right over  **************/}\r\n\r\n                        <div className=\"inline w50 mb-5\">{/*************** form left **************/}\r\n                           \r\n                            <h6 className=\"\">selected inventory :</h6>\r\n                            {this.state.selectedPds &&\r\n                                this.state.selectedPds.map((pd, i) =>\r\n                                    <div>                                        \r\n                                    {i+1} :&nbsp;<input value={pd.name} className='form-control inline w80 m-0 p-2 pl-3' />\r\n                                       \r\n                                        <button className=\"btn btn-mybtn btn-delete m-0 ml-1\" type=\"button\"\r\n                                            onClick={() => {\r\n                                                this.oninventoryRemove(i);\r\n                                            }}><i class=\"fa fa-close ml-auto\">                                                \r\n                                            </i></button>\r\n                                    </div>\r\n                                )}                            \r\n                        </div>\r\n                    </div>\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileInnerComponent"]},"metadata":{},"sourceType":"module"}