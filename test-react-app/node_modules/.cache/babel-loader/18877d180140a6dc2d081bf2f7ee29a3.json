{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListDeliveriesComponent.jsx\";\nimport React, { Component } from 'react';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport PaginationComponent from './PaginationComponent';\nimport DeliveryFilter from './Filters/DeliveryFilter';\nimport '../myStyles/Style.css';\nimport { CSVLink } from \"react-csv\";\nconst headers = [{\n  label: \"number\",\n  key: \"number\"\n}, {\n  label: \"date\",\n  key: \"date\"\n}, {\n  label: \"supplier\",\n  key: \"supplierName\"\n}, {\n  label: \"total bill\",\n  key: \"total\"\n}];\nconst headers2 = [{\n  label: \"delivery\",\n  key: \"number\"\n}, {\n  label: \"date\",\n  key: \"date\"\n}, {\n  label: \"supplier\",\n  key: \"supplierName\"\n}, {\n  label: \"product\",\n  key: \"productName\"\n}, {\n  label: \"quantity\",\n  key: \"quantity\"\n}, {\n  label: \"unit price\",\n  key: \"pricePerUnit\"\n}];\n\nclass ListDeliveriesComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.getSearchString = () => {\n      let search = window.location.search || '';\n      let index = search.indexOf(\"&deliveryView=DeliveryDetailView&\");\n\n      if (index > 0) {\n        search = search.replace(\"&deliveryView=DeliveryDetailView&\", \"\"); // this.setState({ deliveryView: 'DeliveryDetailView' })\n      } else {\n        index = search.indexOf(\"deliveryView=DeliveryDetailView&\");\n\n        if (index > 0) {\n          search = search.replace(\"deliveryView=DeliveryDetailView&\", \"\"); // this.setState({ deliveryView: 'DeliveryDetailView' })\n        }\n\n        index = search.indexOf(\"&deliveryView=DeliveryDetailView\");\n\n        if (index > 0) {\n          search = search.replace(\"&deliveryView=DeliveryDetailView\", \"\"); // this.setState({ deliveryView: 'DeliveryDetailView' })\n        } else {\n          index = search.indexOf(\"deliveryView=DeliveryDetailView\");\n\n          if (index > 0) {\n            search = search.replace(\"deliveryView=DeliveryDetailView\", \"\"); // this.setState({ deliveryView: 'DeliveryDetailView' })\n          }\n        }\n      }\n\n      if (search == '?') search = '';\n      console.log(\"search = \" + search);\n      return search;\n    };\n\n    this.downloadReport = () => {\n      let newSearch = this.getSearchAll();\n      DeliveryDataService.retrieveAll(newSearch).then(response => {\n        //console.log(\"data has childs = \" + (response.data.deliveryDetails != null));\n        let data = response.data.items || response.data.daoitems;\n        this.setState({\n          alldata: data.map(row => ({ ...row,\n            date: new Intl.DateTimeFormat(\"en-GB\", {\n              month: \"numeric\",\n              day: \"2-digit\",\n              year: \"numeric\"\n            }).format(new Date(row.date))\n          }))\n        });\n        this.csvLink.current.link.click();\n      });\n    };\n\n    this.getSearchAll = () => {\n      let search = this.state.search;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n      }\n\n      search.replace(/\\s+/g, '');\n      let newSearch = '';\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager')) continue;else newSearch += searchItems[i] + '&';\n      }\n\n      newSearch = '?' + newSearch;\n      newSearch += 'Pager.itemsPerPage=2147483647';\n      return newSearch;\n    };\n\n    this.deletePDChildClicked = (value, x, y, id) => {\n      if (this.state.items[x].deliveryDetails[y].quantity == 1) {\n        let show = this.state.pdShow;\n\n        if (this.state.items[x].deliveryDetails.length == 1) {\n          show.splice(x, 1);\n        } else {\n          show[x].splice(y, 1);\n        }\n\n        this.setState({\n          pdShow: show\n        });\n        this.deleteChildClicked(id);\n      } else {\n        ProductDetailDataService.delete(value).then(response => {\n          ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id).then(response => {\n            let show = this.state.pdShow;\n            show[x][y].data = response.data;\n            let items = this.state.items;\n            items[x].deliveryDetails[y].quantity = items[x].deliveryDetails[y].quantity - 1;\n            items[x].total = items[x].total - items[x].deliveryDetails[y].pricePerOne;\n            let pdmessages = this.state.pdmessage;\n            if (pdmessages[x] == null) pdmessages[x] = [];\n            pdmessages[x][y] = `Delete successful`;\n            this.setState({\n              items: items,\n              pdShow: show,\n              pdmessage: pdmessages\n            });\n          });\n        });\n      }\n    };\n\n    this.saveUpdatedPd = () => {\n      if (this.state.pdUpdateShow.pd.name == this.state.pdShow[this.state.pdUpdateShow.x][this.state.pdUpdateShow.y].data[this.state.pdUpdateShow.i].name) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number hasn't changed\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else {\n        ProductDetailDataService.updateNumber(this.state.pdUpdateShow.pd).then(response => {\n          this.updatePdChildClicked(null);\n          let x = this.state.pdUpdateShow.x;\n          let y = this.state.pdUpdateShow.y;\n          let pdshow = this.state.pdShow;\n          pdshow[x][y].data[this.state.pdUpdateShow.i].name = response.data;\n          let pdmessages = this.state.pdmessage;\n          if (pdmessages[x] == null) pdmessages[x] = [];\n          pdmessages[x][y] = `Update successful`;\n          this.setState({\n            pdShow: pdshow,\n            pdmessage: pdmessages\n          });\n        }).catch(error => {\n          let show = this.state.pdUpdateShow;\n          show.error = '' + error.response.data;\n          this.setState({\n            pdUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.state = {\n      items: [],\n      message: null,\n      pager: null,\n      filter: null,\n      search: window.location.search || '',\n      alldata: [],\n      pdShow: [],\n      pdmessage: [],\n      pdUpdateShow: {\n        pd: {},\n        show: false\n      }\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.deleteChildClicked = this.deleteChildClicked.bind(this);\n    this.updateClicked = this.updateClicked.bind(this);\n    this.addClicked = this.addClicked.bind(this);\n    this.csvLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    console.log(\"version = \" + React.version);\n    this.refresh();\n  }\n\n  refresh() {\n    DeliveryDataService.retrieveAll(this.state.search).then(response => {\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: response.data.filter,\n        deliveryView: response.data.deliveryView || 'DeliveryView' //'deliveryView',\n        //search: this.getSearchString()\n\n      });\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\n      });\n    });\n  }\n\n  deleteClicked(id) {\n    DeliveryDataService.delete(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    });\n  }\n\n  deleteChildClicked(id) {\n    //child id\n    DeliveryDataService.deleteChild(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    });\n  }\n\n  updateClicked(id) {\n    this.state.deliveryView == 'DeliveryDetailView' ? this.props.history.push(`/deliveries/${id}/DeliveryDetailView`) : this.props.history.push(`/deliveries/${id}`);\n  }\n\n  updatePdChildClicked(pd, x, y, i) {\n    let show = this.state.pdUpdateShow;\n    show.show = !show.show;\n\n    if (show.show == true) {\n      show.pd = JSON.parse(JSON.stringify(pd));\n      show.x = x;\n      show.y = y;\n      show.i = i;\n    } else {\n      show.error = '';\n    }\n\n    this.setState({\n      pdUpdateShow: show\n    });\n  }\n\n  addClicked() {\n    this.props.history.push(`/deliveries/-1`);\n  }\n\n  setView(value) {\n    /*if (value.target.value === 'DeliveryDetailView' && this.state.deliveryView !== 'DeliveryDetailView') {\r\n        let search = this.state.search;           \r\n        let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryDetailView' : '?deliveryView=DeliveryDetailView';\r\n        window.location.href = ``+window.location.pathname+newsearch;          \r\n    }  */\n\n    /* if (value.target.value === 'DeliveryView' && this.state.deliveryView == 'DeliveryDetailView') {\r\n         let search = this.state.search;\r\n         let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryView' : '?deliveryView=DeliveryView';\r\n         window.location.href = `` + window.location.pathname + newsearch;\r\n     } */\n    let path = window.location.pathname;\n    let newPath = ``;\n    let search = window.location.search;\n\n    if (search.length < 1) {\n      newPath = path + `?deliveryView=${value.target.value}`;\n    } else {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('deliveryView')) continue;else newPath += searchItems[i] + '&';\n      }\n\n      newPath = path + '?' + newPath + 'deliveryView=' + value.target.value;\n    }\n\n    window.location.href = newPath;\n  }\n\n  getProductDetails(x, y, id) {\n    if (this.state.pdShow[x] == undefined || this.state.pdShow[x][y] == undefined) {\n      let show = this.state.pdShow;\n      if (this.state.pdShow[x] == undefined) show[x] = [];\n      ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id).then(response => {\n        console.log(\"pds = \" + JSON.stringify(response.data));\n        show[x][y] = {};\n        show[x][y].show = true;\n        show[x][y].data = response.data;\n        this.setState({\n          pdShow: show\n        });\n      });\n    } else {\n      let show = this.state.pdShow;\n      show[x][y].show = !show[x][y].show;\n      this.setState({\n        pdShow: show\n      });\n    }\n  }\n\n  render() {\n    const data = this.state.items.map(row => ({ ...row,\n      date: new Intl.DateTimeFormat(\"en-GB\", {\n        month: \"numeric\",\n        day: \"2-digit\",\n        year: \"numeric\"\n      }).format(new Date(row.date))\n    }));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3\",\n      children: [console.log(\"rendering\"), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.updatePdChildClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 343,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory number \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 21\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-success d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 346,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 345,\n          columnNumber: 99\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: this.state.pdUpdateShow.pd.name,\n          onChange: value => {\n            let show = this.state.pdUpdateShow;\n            show.pd.name = value.target.value;\n            this.setState({\n              pdUpdateShow: show\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 355,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5 mt-3 ml-5\",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 360,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 mt-3 ml-3\",\n          onClick: () => this.updatePdChildClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 17\n      }, this), this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"alert alert-warning\",\n        children: this.state.errormsg\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 41\n      }, this), this.state.filter && /*#__PURE__*/_jsxDEV(DeliveryFilter, { ...this.state.filter,\n        search: this.state.deliveryView == 'DeliveryView' ? this.state.search : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 d-inline-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Deliveries\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 370,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 369,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mx-1 pull-right mr-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mx-1 m-2 mt-3 \",\n              type: \"radio\",\n              name: \"DeliveryView\",\n              value: \"DeliveryDetailView\",\n              checked: this.state.deliveryView == 'DeliveryDetailView',\n              onClick: value => this.state.deliveryView != 'DeliveryDetailView' ? this.setView(value) : {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 29\n            }, this), \"Delivery&Details View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"mx-1 pull-right mr-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"mx-1 m-2 mt-3 \",\n              type: \"radio\",\n              name: \"DeliveryView\",\n              value: \"DeliveryView\",\n              checked: this.state.deliveryView == 'DeliveryView',\n              onClick: value => this.state.deliveryView == 'DeliveryDetailView' ? this.setView(value) : {} //this.setState({ deliveryView: 'DeliveryView' }) : {}}\n\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 380,\n              columnNumber: 29\n            }, this), \"Delivery View\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 379,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5  \",\n                onClick: this.addClicked,\n                children: \"Add New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 389,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                data: data,\n                headers: headers,\n                filename: \"deliveries-page.csv\",\n                asyncOnClick: true,\n                onClick: () => {},\n                children: \"Download this page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 390,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                onClick: this.downloadReport,\n                children: \"Download All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 397,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                data: this.state.alldata,\n                filename: \"deliveries-all.csv\",\n                className: \"hidden\",\n                headers: this.state.deliveryView == 'DeliveryView' ? headers : headers2,\n                ref: this.csvLink,\n                target: \"_blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 398,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 388,\n              columnNumber: 29\n            }, this), this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager,\n              search: this.state.deliveryView == 'DeliveryView' ? this.state.search : null\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 387,\n            columnNumber: 25\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success d-flex\",\n            children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: this.togglemsgbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 416,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 415,\n            columnNumber: 29\n          }, this), this.state.deliveryView == 'DeliveryDetailView' && this.state.items.map((item, x) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"panel-body\",\n            children: /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table  border table-s\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"w-25 pl-3\",\n                    children: [\" Number : \", item.number, \" \"]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 427,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"w-25 pl-3\",\n                    children: [\" Date : \", new Intl.DateTimeFormat(\"en-GB\", {\n                      month: \"long\",\n                      day: \"2-digit\",\n                      year: \"numeric\"\n                    }).format(new Date(item.date))]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 428,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \" w-25\",\n                    children: [\" Supplier : \", item.supplierName]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 435,\n                    columnNumber: 61\n                  }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                    className: \"d-flex justify-content-end\",\n                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn mr-1\",\n                      onClick: () => this.updateClicked(item.id),\n                      children: \"Update\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 437,\n                      columnNumber: 65\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      className: \"btn btn-mybtn btn-delete\",\n                      onClick: () => this.deleteClicked(item.id),\n                      children: \"Delete\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 438,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 436,\n                    columnNumber: 61\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 57\n                }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: /*#__PURE__*/_jsxDEV(\"td\", {\n                    colspan: \"4\",\n                    children: [item.deliveryDetails && /*#__PURE__*/_jsxDEV(\"table\", {\n                      className: \"table border x-Table \",\n                      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                            children: \"Product\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 447,\n                            columnNumber: 81\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: \"Quantity\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 448,\n                            columnNumber: 81\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: \"Unit Price\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 449,\n                            columnNumber: 81\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            children: \"Total\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 450,\n                            columnNumber: 81\n                          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                            style: {\n                              width: '140px'\n                            }\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 451,\n                            columnNumber: 81\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 446,\n                          columnNumber: 77\n                        }, this), item.deliveryDetails.map((dd, y) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                              children: dd.productName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 458,\n                              columnNumber: 92\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              className: \"hoverable\",\n                              onClick: () => {\n                                this.getProductDetails(x, y, dd.id);\n                              },\n                              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                                children: dd.quantity\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 462,\n                                columnNumber: 99\n                              }, this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 459,\n                              columnNumber: 92\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: new Intl.NumberFormat(\"en-GB\", {\n                                style: \"currency\",\n                                currency: \"BGN\",\n                                maximumFractionDigits: 2\n                              }).format(dd.pricePerOne)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 463,\n                              columnNumber: 89\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: new Intl.NumberFormat(\"en-GB\", {\n                                style: \"currency\",\n                                currency: \"BGN\",\n                                maximumFractionDigits: 2\n                              }).format(dd.pricePerOne * dd.quantity)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 468,\n                              columnNumber: 89\n                            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                className: \"btn btn-mybtn mr-1\",\n                                onClick: () => this.updateClicked(item.id),\n                                children: \"Update\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 473,\n                                columnNumber: 93\n                              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                className: \"btn btn-mybtn btn-delete\",\n                                onClick: () => this.deleteChildClicked(dd.id),\n                                children: \"Delete\"\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 474,\n                                columnNumber: 93\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 473,\n                              columnNumber: 89\n                            }, this)]\n                          }, dd.id, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 457,\n                            columnNumber: 88\n                          }, this), this.state.pdShow[x] && this.state.pdShow[x][y] && this.state.pdShow[x][y].show && /*#__PURE__*/_jsxDEV(\"tr\", {\n                            children: /*#__PURE__*/_jsxDEV(\"td\", {\n                              colspan: \"5\",\n                              children: [this.state.pdmessage[x] && this.state.pdmessage[x][y] && /*#__PURE__*/_jsxDEV(\"div\", {\n                                className: \"alert alert-success d-flex\",\n                                children: [this.state.pdmessage[x][y], /*#__PURE__*/_jsxDEV(\"i\", {\n                                  class: \"fa fa-close ml-auto pr-3 pt-1\",\n                                  onClick: () => {\n                                    let pdmessages = this.state.pdmessage;\n                                    pdmessages[x][y] = null;\n                                    this.setState({\n                                      pdmessage: pdmessages\n                                    });\n                                  }\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 484,\n                                  columnNumber: 108\n                                }, this)]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 483,\n                                columnNumber: 104\n                              }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n                                className: \"ml-5 mb-3\",\n                                style: {\n                                  width: '80%'\n                                },\n                                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      width: '10%'\n                                    },\n                                    children: \"number\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 494,\n                                    columnNumber: 108\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    className: \"pl-5\",\n                                    children: \"inventory number\"\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 495,\n                                    columnNumber: 108\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    style: {\n                                      width: '140px'\n                                    }\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 496,\n                                    columnNumber: 108\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 494,\n                                  columnNumber: 104\n                                }, this), this.state.pdShow[x][y].data.map((pd, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                                    children: i + 1\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 499,\n                                    columnNumber: 112\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    className: \"pl-5 pb-3 hoverable\",\n                                    children: pd.name\n                                  }, void 0, false, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 500,\n                                    columnNumber: 112\n                                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                                    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"btn btn-mybtn mr-1\",\n                                      onClick: () => {\n                                        this.updatePdChildClicked(pd, x, y, i);\n                                      },\n                                      children: \"Update\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 503,\n                                      columnNumber: 116\n                                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                                      className: \"btn btn-mybtn btn-delete\",\n                                      onClick: () => this.deletePDChildClicked(pd.value, x, y, dd.id),\n                                      children: \"Delete\"\n                                    }, void 0, false, {\n                                      fileName: _jsxFileName,\n                                      lineNumber: 506,\n                                      columnNumber: 116\n                                    }, this)]\n                                  }, void 0, true, {\n                                    fileName: _jsxFileName,\n                                    lineNumber: 503,\n                                    columnNumber: 112\n                                  }, this)]\n                                }, void 0, true, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 498,\n                                  columnNumber: 108\n                                }, this))]\n                              }, void 0, true, {\n                                fileName: _jsxFileName,\n                                lineNumber: 493,\n                                columnNumber: 100\n                              }, this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 480,\n                              columnNumber: 96\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 479,\n                            columnNumber: 92\n                          }, this)]\n                        }, void 0, true))]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 445,\n                        columnNumber: 73\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 444,\n                      columnNumber: 69\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      class: \"pull-right\",\n                      style: {\n                        marginRight: '100px'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: [\"Total Bill : \", new Intl.NumberFormat(\"en-GB\", {\n                          style: \"currency\",\n                          currency: \"BGN\",\n                          maximumFractionDigits: 2\n                        }).format(item.total), \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 520,\n                        columnNumber: 123\n                      }, this), \" \"]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 520,\n                      columnNumber: 65\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 442,\n                    columnNumber: 61\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 441,\n                  columnNumber: 58\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 53\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 424,\n              columnNumber: 49\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 423,\n            columnNumber: 45\n          }, this)), this.state.deliveryView == 'DeliveryView' && /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border-bottom my-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 597,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"date\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 598,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"supplier\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 599,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"total\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 600,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  scope: \"col\",\n                  children: \"Update \\u2003\\xA0 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 601,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 596,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 595,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"hoverable\",\n                  children: item.number\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 609,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.DateTimeFormat(\"en-GB\", {\n                    month: \"long\",\n                    day: \"2-digit\",\n                    year: \"numeric\"\n                  }).format(new Date(item.date))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 610,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.supplierName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 617,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(item.total)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 618,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.updateClicked(item.id),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 624,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    onClick: () => this.deleteClicked(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 625,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 624,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 608,\n                columnNumber: 49\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 604,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 594,\n            columnNumber: 30\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 386,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 338,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListDeliveriesComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListDeliveriesComponent.jsx"],"names":["React","Component","DeliveryDataService","ProductDetailDataService","PaginationComponent","DeliveryFilter","CSVLink","headers","label","key","headers2","ListDeliveriesComponent","constructor","props","getSearchString","search","window","location","index","indexOf","replace","console","log","downloadReport","newSearch","getSearchAll","retrieveAll","then","response","data","items","daoitems","setState","alldata","map","row","date","Intl","DateTimeFormat","month","day","year","format","Date","csvLink","current","link","click","state","length","charAt","substring","searchItems","split","i","startsWith","deletePDChildClicked","value","x","y","id","deliveryDetails","quantity","show","pdShow","splice","deleteChildClicked","delete","retrieveAllNumbers","total","pricePerOne","pdmessages","pdmessage","saveUpdatedPd","pdUpdateShow","pd","name","error","updateNumber","updatePdChildClicked","pdshow","catch","togglemsgbox","message","pager","filter","refresh","bind","deleteClicked","updateClicked","addClicked","createRef","componentDidMount","version","deliveryView","errormsg","deleteChild","history","push","JSON","parse","stringify","setView","path","pathname","newPath","target","href","getProductDetails","undefined","render","item","number","supplierName","width","dd","productName","NumberFormat","style","currency","maximumFractionDigits","marginRight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport DeliveryFilter from './Filters/DeliveryFilter';\r\nimport '../myStyles/Style.css';\r\nimport { CSVLink } from \"react-csv\";\r\n\r\nconst headers = [\r\n    { label: \"number\", key: \"number\" },\r\n    { label: \"date\", key: \"date\" },\r\n    { label: \"supplier\", key: \"supplierName\" },\r\n    { label: \"total bill\", key: \"total\" },  \r\n];\r\nconst headers2 = [\r\n    { label: \"delivery\", key: \"number\" },\r\n    { label: \"date\", key: \"date\" },\r\n    { label: \"supplier\", key: \"supplierName\" },    \r\n    { label: \"product\", key: \"productName\" },\r\n    { label: \"quantity\", key: \"quantity\" },\r\n    { label: \"unit price\", key: \"pricePerUnit\" },\r\n];\r\n\r\nclass ListDeliveriesComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            message: null,\r\n            pager: null,\r\n            filter: null,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n            pdShow: [],\r\n            pdmessage: [],\r\n            pdUpdateShow: {\r\n                pd: {}, show: false\r\n            }\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n        this.deleteChildClicked = this.deleteChildClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n        this.addClicked = this.addClicked.bind(this)\r\n        this.csvLink = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"version = \"+React.version);\r\n        this.refresh();\r\n    }\r\n\r\n    refresh() {\r\n        DeliveryDataService.retrieveAll(this.state.search)\r\n            .then(\r\n           response => {              \r\n                    this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: response.data.filter,\r\n                        deliveryView: response.data.deliveryView || 'DeliveryView' ,//'deliveryView',\r\n                        //search: this.getSearchString()\r\n               });\r\n           }).catch((error) => {\r\n               this.setState({                  \r\n                   errormsg:  ''+ error == 'Error: Request failed with status code 401' ?  'need to login again !!!' : '' + error\r\n               })\r\n           })\r\n    }\r\n\r\n    getSearchString = () => {\r\n        let search = window.location.search || '';\r\n        let index = search.indexOf(\"&deliveryView=DeliveryDetailView&\");\r\n        if (index > 0) {\r\n            search = search.replace(\"&deliveryView=DeliveryDetailView&\", \"\");\r\n            \r\n            // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n        }\r\n        else {\r\n            index = search.indexOf(\"deliveryView=DeliveryDetailView&\");\r\n            if (index > 0) {\r\n                search = search.replace(\"deliveryView=DeliveryDetailView&\", \"\");\r\n                // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n            }\r\n            index = search.indexOf(\"&deliveryView=DeliveryDetailView\");\r\n            if (index > 0) {\r\n                search = search.replace(\"&deliveryView=DeliveryDetailView\", \"\");\r\n                // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n            }\r\n            else {\r\n                index = search.indexOf(\"deliveryView=DeliveryDetailView\");\r\n                if (index > 0) {\r\n                    search = search.replace(\"deliveryView=DeliveryDetailView\", \"\")\r\n                    // this.setState({ deliveryView: 'DeliveryDetailView' })\r\n                }\r\n            }\r\n        }\r\n       \r\n        if (search == '?') search = '';\r\n        console.log(\"search = \" + search);\r\n        return search\r\n    }\r\n\r\n   /* getRetrieveSearchString = () => {\r\n        let search = this.state.search;\r\n        if (this.state.deliveryView == 'DeliveryDetailView') {\r\n            console.log(\"search = \"+search)\r\n        }\r\n       \r\n            return search\r\n       \r\n    }*/\r\n\r\n    downloadReport = () => {\r\n        let newSearch = this.getSearchAll();\r\n        DeliveryDataService.retrieveAll(newSearch)\r\n            .then(response => {\r\n                //console.log(\"data has childs = \" + (response.data.deliveryDetails != null));\r\n                let data = response.data.items || response.data.daoitems;\r\n                this.setState({\r\n                    alldata: data.map(row => ({\r\n                        ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                            month: \"numeric\",\r\n                            day: \"2-digit\",\r\n                            year: \"numeric\",\r\n                        }).format(new Date(row.date))\r\n                    })) });\r\n                this.csvLink.current.link.click()\r\n            })\r\n    }\r\n\r\n    getSearchAll = () => {\r\n        let search = this.state.search;       \r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n        }\r\n        search.replace(/\\s+/g, '');\r\n        let newSearch = '';\r\n        let searchItems = search.split('&');\r\n        for (let i = 0; i < searchItems.length; i++) {\r\n            if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager'))\r\n                continue\r\n            else\r\n                newSearch += searchItems[i] + '&'\r\n        }\r\n        newSearch = '?' + newSearch;\r\n        newSearch += 'Pager.itemsPerPage=2147483647';       \r\n        return newSearch;\r\n    }\r\n\r\n    deleteClicked(id) {\r\n        DeliveryDataService.delete(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n            )\r\n    }\r\n\r\n    deleteChildClicked(id) {//child id\r\n        DeliveryDataService.deleteChild(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n            )\r\n    }\r\n\r\n    deletePDChildClicked = (value, x, y, id) => {       \r\n        if (this.state.items[x].deliveryDetails[y].quantity == 1) {\r\n            let show = this.state.pdShow;\r\n            if (this.state.items[x].deliveryDetails.length == 1) {               \r\n                show.splice(x, 1);               \r\n            } else {               \r\n                show[x].splice(y, 1);\r\n            }\r\n            this.setState({ pdShow: show })\r\n            this.deleteChildClicked(id)            \r\n        }\r\n        else {\r\n            ProductDetailDataService.delete(value)\r\n                .then(\r\n                    response => {                       \r\n                        ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id)\r\n                            .then(response => {\r\n                                let show = this.state.pdShow;\r\n                                show[x][y].data = response.data;\r\n                                let items = this.state.items;\r\n                                items[x].deliveryDetails[y].quantity = items[x].deliveryDetails[y].quantity - 1;\r\n                                items[x].total = items[x].total - items[x].deliveryDetails[y].pricePerOne;\r\n                                let pdmessages = this.state.pdmessage;                               \r\n                                if (pdmessages[x] == null) pdmessages[x] = [];\r\n                                pdmessages[x][y] = `Delete successful`;\r\n\r\n                                this.setState({\r\n                                    items: items,\r\n                                    pdShow: show,\r\n                                    pdmessage: pdmessages\r\n                                })\r\n                            })                       \r\n                    })\r\n        }\r\n    }\r\n\r\n    updateClicked(id) {\r\n        this.state.deliveryView == 'DeliveryDetailView' ? \r\n            this.props.history.push(`/deliveries/${id}/DeliveryDetailView`) :\r\n            this.props.history.push(`/deliveries/${id}`)\r\n    }\r\n\r\n    updatePdChildClicked(pd ,x ,y, i) {        \r\n        let show = this.state.pdUpdateShow ;       \r\n        show.show = !show.show;\r\n        if (show.show == true) {          \r\n            show.pd = JSON.parse(JSON.stringify(pd))\r\n            show.x = x;\r\n            show.y = y;\r\n            show.i = i\r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            pdUpdateShow: show\r\n        });      \r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n        if (this.state.pdUpdateShow.pd.name == this.state.pdShow[this.state.pdUpdateShow.x][this.state.pdUpdateShow.y].data[this.state.pdUpdateShow.i].name) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {           \r\n            ProductDetailDataService.updateNumber(this.state.pdUpdateShow.pd)\r\n                .then(response => {\r\n                    this.updatePdChildClicked(null);\r\n                   \r\n                    let x = this.state.pdUpdateShow.x;\r\n                    let y = this.state.pdUpdateShow.y;\r\n                    \r\n                    let pdshow = this.state.pdShow;\r\n                    pdshow[x][y].data[this.state.pdUpdateShow.i].name = response.data;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;                    \r\n\r\n                    this.setState({                       \r\n                        pdShow: pdshow,\r\n                        pdmessage: pdmessages\r\n                    })\r\n                }).catch(error => {\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = '' + error.response.data;\r\n                    this.setState({ pdUpdateShow: show })\r\n                })\r\n        }\r\n    }\r\n\r\n    addClicked() {\r\n        this.props.history.push(`/deliveries/-1`)\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null })\r\n    }\r\n\r\n    setView(value) {\r\n        /*if (value.target.value === 'DeliveryDetailView' && this.state.deliveryView !== 'DeliveryDetailView') {\r\n            let search = this.state.search;           \r\n            let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryDetailView' : '?deliveryView=DeliveryDetailView';\r\n            window.location.href = ``+window.location.pathname+newsearch;          \r\n        }  */   \r\n       /* if (value.target.value === 'DeliveryView' && this.state.deliveryView == 'DeliveryDetailView') {\r\n            let search = this.state.search;\r\n            let newsearch = search.length > 0 ? search + '&deliveryView=DeliveryView' : '?deliveryView=DeliveryView';\r\n            window.location.href = `` + window.location.pathname + newsearch;\r\n        } */\r\n        let path = window.location.pathname;\r\n        let newPath = ``;\r\n        let search =  window.location.search;\r\n        if (search.length < 1) {\r\n            newPath = path + `?deliveryView=${value.target.value}`;\r\n        }\r\n        else {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (searchItems[i].startsWith('deliveryView'))\r\n                    continue\r\n                else\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n            newPath = path + '?' + newPath + 'deliveryView=' + value.target.value;\r\n        }\r\n        window.location.href = newPath;\r\n       \r\n    }\r\n\r\n    getProductDetails( x, y, id) {\r\n      \r\n        if (this.state.pdShow[x] == undefined || this.state.pdShow[x][y] == undefined) {\r\n             let show = this.state.pdShow;\r\n            if (this.state.pdShow[x] == undefined) show[x] = [];\r\n\r\n            ProductDetailDataService.retrieveAllNumbers(\"?deliveryDetailId=\" + id )\r\n                .then(response => {\r\n                    console.log(\"pds = \" + JSON.stringify(response.data));\r\n                    show[x][y] = {}\r\n                    show[x][y].show = true;\r\n                    show[x][y].data = response.data;\r\n                this.setState({ pdShow: show });\r\n            })\r\n        }\r\n        else {\r\n            let show = this.state.pdShow;\r\n            show[x][y].show = !show[x][y].show;\r\n            this.setState({ pdShow: show })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const data = this.state.items.map(row => ({\r\n            ...row, date: new Intl.DateTimeFormat(\"en-GB\", {\r\n                month: \"numeric\",\r\n                day: \"2-digit\",\r\n                year: \"numeric\",\r\n            }).format(new Date(row.date))\r\n        })); \r\n\r\n       \r\n        return (\r\n            <div className=\"px-3\">\r\n                {console.log(\"rendering\")}\r\n               \r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"}>\r\n                    <span class=\"close\" onClick={() => this.updatePdChildClicked(null)}>&times;</span>\r\n                    <h2>update inventory number </h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && <div className=\"alert alert-success d-flex\">{this.state.pdUpdateShow.error}\r\n                        <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                            onClick={() => {\r\n                                let show = this.state.pdUpdateShow;\r\n                                show.error = '';\r\n                                this.setState({ pdUpdateShow: show })\r\n                            }}>\r\n                        </i>\r\n                    </div>}\r\n                    <p >number : </p>\r\n                    <input type=\"text\" value={this.state.pdUpdateShow.pd.name} onChange={(value) => {\r\n                        let show = this.state.pdUpdateShow;\r\n                        show.pd.name = value.target.value;\r\n                        this.setState({ pdUpdateShow: show })\r\n                    }} />\r\n                    <button className=\"btn btn-mybtn px-5 mt-3 ml-5\" onClick={ this.saveUpdatedPd }>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 mt-3 ml-3\" onClick={() => this.updatePdChildClicked(null)}>Cancel</button>                   \r\n                   </div>\r\n               \r\n                {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                {this.state.filter && <DeliveryFilter {...this.state.filter}\r\n                    search={this.state.deliveryView == 'DeliveryView' ? this.state.search : null}/>}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                        <h5 className=\"panel-title p-2 d-inline-flex\">\r\n                            <strong> Deliveries</strong>\r\n                        </h5>\r\n                        <label className=\"mx-1 pull-right mr-5\">\r\n                            <input className=\"mx-1 m-2 mt-3 \" type=\"radio\" name=\"DeliveryView\" value=\"DeliveryDetailView\"\r\n                                checked={this.state.deliveryView == 'DeliveryDetailView'}\r\n                                onClick={\r\n                                    (value) => this.state.deliveryView != 'DeliveryDetailView' ?                              \r\n                                    this.setView(value) : {}} />Delivery&Details View\r\n                        </label>\r\n                        <label className=\"mx-1 pull-right mr-5\">\r\n                            <input className=\"mx-1 m-2 mt-3 \" type=\"radio\" name=\"DeliveryView\" value=\"DeliveryView\"\r\n                                checked={this.state.deliveryView == 'DeliveryView'}\r\n                                onClick={(value) => this.state.deliveryView == 'DeliveryDetailView' ? this.setView(value) : {}}//this.setState({ deliveryView: 'DeliveryView' }) : {}}\r\n                            />Delivery View\r\n                        </label>\r\n                    </div>\r\n                    <div className=\"p-1\">\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap\">\r\n                            <div>\r\n                                <button className=\"btn btn-mybtn px-5  \" onClick={this.addClicked}>Add New</button>\r\n                                <CSVLink\r\n                                    className=\"btn btn-mybtn px-3 ml-2\"\r\n                                    data={data} headers={headers} filename={\"deliveries-page.csv\"}\r\n                                    asyncOnClick={true}\r\n                                    onClick={() => {}}\r\n                                >Download this page\r\n                                </CSVLink>\r\n                                <button className=\"btn btn-mybtn px-3 ml-2\" onClick={this.downloadReport}>Download All</button>\r\n                                <CSVLink\r\n                                    data={this.state.alldata}\r\n                                    filename={\"deliveries-all.csv\"}\r\n                                    className=\"hidden\"\r\n                                    headers={this.state.deliveryView == 'DeliveryView' ? headers : headers2}\r\n                                    ref={this.csvLink}\r\n                                    target=\"_blank\"\r\n                                />\r\n                            </div>\r\n                            {\r\n                                this.state.pager &&\r\n                                <PaginationComponent {...this.state.pager}\r\n                                    search={this.state.deliveryView == 'DeliveryView' ? this.state.search : null}/>\r\n                            }\r\n                        </div>\r\n                        {\r\n                            this.state.message &&\r\n                            <div className=\"alert alert-success d-flex\">{this.state.message}\r\n                                <i class=\"fa fa-close ml-auto pr-3 pt-1\" onClick={this.togglemsgbox}></i>\r\n                            </div>\r\n                        }                       \r\n                        {\r\n                            this.state.deliveryView == 'DeliveryDetailView' &&                            \r\n                                    this.state.items.map(\r\n                                        (item, x) =>\r\n                                            <div className=\"panel-body\">\r\n                                                <table className=\"table  border table-s\">\r\n                                                    <tbody>\r\n                                                        <tr>\r\n                                                            <th className=\"w-25 pl-3\"> Number : {item.number} </th>\r\n                                                            <th className=\"w-25 pl-3\"> Date : {\r\n                                                                new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                    month: \"long\",\r\n                                                                    day: \"2-digit\",\r\n                                                                    year: \"numeric\",                                                                  \r\n                                                                }).format(new Date(item.date))\r\n                                                            }</th>\r\n                                                            <th className=\" w-25\"> Supplier : {item.supplierName}</th>\r\n                                                            <th className=\"d-flex justify-content-end\">\r\n                                                                <button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                                <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id)}>Delete</button>\r\n                                                            </th>\r\n                                                         </tr>\r\n                                                         <tr>\r\n                                                            <td colspan=\"4\">\r\n                                                                {item.deliveryDetails &&\r\n                                                                    <table className=\"table border x-Table \">\r\n                                                                        <tbody>\r\n                                                                            <tr>\r\n                                                                                <td>Product</td>\r\n                                                                                <td>Quantity</td>\r\n                                                                                <td>Unit Price</td>\r\n                                                                                <td>Total</td>\r\n                                                                                <td style={{ width: '140px' }}></td>\r\n                                                                            </tr>\r\n                                                                        {\r\n                                                                            item.deliveryDetails.map(\r\n                                                                               (dd, y) => \r\n                                                                                    <>\r\n                                                                                       <tr key={dd.id}>                                                                                           \r\n                                                                                           <td>{dd.productName}</td>\r\n                                                                                           <td className=\"hoverable\"\r\n                                                                                               onClick={() => {\r\n                                                                                                   this.getProductDetails(x, y, dd.id)\r\n                                                                                               }}><p>{dd.quantity}</p></td>\r\n                                                                                        <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                            style: \"currency\",\r\n                                                                                            currency: \"BGN\",\r\n                                                                                            maximumFractionDigits: 2\r\n                                                                                        }).format(dd.pricePerOne)}</td>\r\n                                                                                        <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                            style: \"currency\",\r\n                                                                                            currency: \"BGN\",\r\n                                                                                            maximumFractionDigits: 2\r\n                                                                                        }).format(dd.pricePerOne * dd.quantity)}</td>\r\n                                                                                        <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                                                            <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteChildClicked(dd.id)}>Delete</button></td>\r\n                                                                                       </tr>\r\n                                                                                       {\r\n                                                                                           this.state.pdShow[x] && this.state.pdShow[x][y] && this.state.pdShow[x][y].show\r\n                                                                                           &&\r\n                                                                                           <tr>\r\n                                                                                               <td colspan=\"5\">\r\n                                                                                                   {\r\n                                                                                                       this.state.pdmessage[x] && this.state.pdmessage[x][y] &&\r\n                                                                                                       <div className=\"alert alert-success d-flex\">{this.state.pdmessage[x][y]}\r\n                                                                                                           <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                                                                               onClick={() => {\r\n                                                                                                                   let pdmessages = this.state.pdmessage;\r\n                                                                                                                   pdmessages[x][y] = null;\r\n                                                                                                                   this.setState({ pdmessage: pdmessages })\r\n                                                                                                               }}>\r\n                                                                                                           </i>\r\n                                                                                                       </div>\r\n                                                                                                   }   \r\n                                                                                                   <table className=\"ml-5 mb-3\" style={{ width: '80%' }}>\r\n                                                                                                       <tr><td style={{ width: '10%' }}>number</td>\r\n                                                                                                           <td className=\"pl-5\">inventory number</td>\r\n                                                                                                           <td style={{ width: '140px' }}></td></tr>\r\n                                                                                                       {this.state.pdShow[x][y].data.map((pd, i) =>\r\n                                                                                                           <tr>\r\n                                                                                                               <td >{i + 1}</td>\r\n                                                                                                               <td className=\"pl-5 pb-3 hoverable\">\r\n                                                                                                                  {pd.name}\r\n                                                                                                               </td>\r\n                                                                                                               <td><button className=\"btn btn-mybtn mr-1\" onClick={() => {                                                                                                                 \r\n                                                                                                                   this.updatePdChildClicked(pd, x, y, i)\r\n                                                                                                               }}>Update</button>\r\n                                                                                                                   <button className=\"btn btn-mybtn btn-delete\"\r\n                                                                                                                       onClick={() => this.deletePDChildClicked(pd.value, x, y, dd.id)}>\r\n                                                                                                                       Delete</button></td>\r\n                                                                                                           </tr>\r\n                                                                                                       )}\r\n                                                                                                   </table>\r\n                                                                                               </td>\r\n                                                                                           </tr>\r\n                                                                                       }                                                                                                                                                                            \r\n                                                                                    </>\r\n                                                                            )}\r\n                                                                        </tbody>\r\n                                                                    </table>\r\n                                                                }\r\n                                                                <span class=\"pull-right\" style={{ marginRight: '100px' }}><strong>Total Bill : {new Intl.NumberFormat(\"en-GB\", {\r\n                                                                    style: \"currency\",\r\n                                                                    currency: \"BGN\",\r\n                                                                    maximumFractionDigits: 2\r\n                                                                }).format(item.total)} </strong> {}</span>\r\n                                                         </td>\r\n                                                        </tr>\r\n                                                    </tbody>\r\n                                                </table>\r\n                                            </div>                                            \r\n                                         )}\r\n                        {\r\n                            /*\r\n                         * this.state.deliveryView == 'deliveryDetailView' &&\r\n                        <table className=\"table border-bottom my-table\" >\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\" className=\"px100\">number</th>\r\n                                    <th scope=\"col\" className=\"ws\">date</th>\r\n                                    <th scope=\"col\" className=\"wms\">supplier</th>\r\n                                    <th scope=\"col\">product</th>\r\n                                    <th scope=\"col\" className=\"wxxs\">quantity</th>\r\n                                    <th scope=\"col\" className=\"wxs\">unit price</th>\r\n                                    <th className=\"wxs\">total</th>\r\n                                    <th scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>                           \r\n                            <tbody>\r\n                                {this.state.items.map(\r\n                                        item => \r\n                                            <tr>\r\n                                                <td colspan=\"8\" className=\"p0\">\r\n                                                    <table className=\"table my-table mb-0\" >\r\n                                                          <tbody className=\"bold-border\">\r\n                                                            {item.deliveryDetails.map(\r\n                                                                    dd =>\r\n                                                                        <tr scope=\"row\" key={dd.id}>\r\n                                                                            <td className=\"px100\">{item.number}</td>\r\n                                                                            <td className=\"ws\">\r\n                                                                                {new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                                                    month: \"long\",\r\n                                                                                    day: \"2-digit\",\r\n                                                                                    year: \"numeric\",\r\n                                                                                }).format(new Date(item.date))}\r\n                                                                            </td>\r\n                                                                            <td className=\"wms\">{item.supplier.name}</td>\r\n                                                                            <td>{dd.productName}</td>\r\n                                                                            <td className=\"wxxs\">{dd.quantity}</td>\r\n                                                                            <td className=\"wxs\">{new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                style: \"currency\",\r\n                                                                                currency: \"BGN\",\r\n                                                                                maximumFractionDigits: 2\r\n                                                                            }).format(dd.pricePerOne)}</td>\r\n                                                                            <td className=\"wxs\">{\r\n                                                                                new Intl.NumberFormat(\"en-GB\", {\r\n                                                                                    style: \"currency\",\r\n                                                                                    currency: \"BGN\",\r\n                                                                                    maximumFractionDigits: 2\r\n                                                                                }).format(dd.pricePerOne * dd.quantity)}</td>\r\n                                                                            <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                                                <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteChildClicked(dd.id)}>Delete</button></td>\r\n                                                                        </tr>\r\n                                                                )}\r\n                                                        </tbody>\r\n                                                    </table>\r\n                                                </td>\r\n                                            </tr>                                      \r\n               )}\r\n                            </tbody>\r\n                        </table>\r\n                       */ }\r\n\r\n                        {                            \r\n                            this.state.deliveryView == 'DeliveryView' &&\r\n                             <table className=\"table border-bottom my-table\" >\r\n                                <thead>\r\n                                        <tr>\r\n                                            <th scope=\"col\">number</th>\r\n                                            <th scope=\"col\" >date</th>\r\n                                            <th scope=\"col\" >supplier</th>                                   \r\n                                            <th >total</th>\r\n                                            <th scope=\"col\">Update &emsp;&nbsp; Delete</th>\r\n                                    </tr>\r\n                                </thead>                           \r\n                                <tbody>\r\n                                    {\r\n                                        this.state.items.map(\r\n                                            item =>\r\n                                                <tr>\r\n                                                    <td className=\"hoverable\">{item.number}</td>\r\n                                                    <td >\r\n                                                        {new Intl.DateTimeFormat(\"en-GB\", {\r\n                                                            month: \"long\",\r\n                                                            day: \"2-digit\",\r\n                                                            year: \"numeric\",\r\n                                                        }).format(new Date(item.date))}\r\n                                                    </td>\r\n                                                    <td >{item.supplierName}</td>\r\n                                                    <td >{\r\n                                                        new Intl.NumberFormat(\"en-GB\", {\r\n                                                            style: \"currency\",\r\n                                                            currency: \"BGN\",\r\n                                                            maximumFractionDigits: 2\r\n                                                        }).format(item.total)}</td>\r\n                                                    <td><button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                        <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id)}>Delete</button>\r\n                                                    </td>\r\n                                                </tr>\r\n                                        )}                                    \r\n                            </tbody>\r\n                        </table>\r\n                       }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListDeliveriesComponent"]},"metadata":{},"sourceType":"module"}