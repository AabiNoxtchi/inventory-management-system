{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserProfileInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\n\nclass UserProfileInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      /*  let x = this.state.deliveryUpdateShow.x;\r\n        let items = this.state.items;\r\n        let item = items[x];\r\n          let show = this.state.deliveryUpdateShow;\r\n        let supplierId = show.delivery.supplierId;\r\n        let date = show.delivery.date;\r\n          // console.log(\"date.toISOString() = \" + date.toISOString());\r\n        // console.log(\"date = \" + date);\r\n        // console.log(\"new Date(item.date) = \" + new Date(item.date));\r\n        //console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\r\n          if (!date || !supplierId) {\r\n            show.error = \"required fields can't be empty !!!\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else if (supplierId == item.supplierId && this.isDateEqual(date, item.date)) {\r\n            show.error = \"delivery hasn't changed\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else {\r\n            console.log(\"all good\");\r\n            let item = show.delivery;\r\n            //console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n            DeliveryDataService.save(item)\r\n                .then((response) => {\r\n                    console.log(\"delivery submit response = \" + response.data);\r\n                    //item.supplierName = (this.state.suppliers.filter(s => s.value == item.supplierId))[0].name;\r\n                    items[x] = item;\r\n                    //message = \"update successful\"\r\n                    this.props.setItems(items);\r\n                    this.props.updateClickedInner(null);\r\n                    let msg = this.state.message;\r\n                    msg = \"update successful\";\r\n                    this.props.setMessage(msg);\r\n                    //this.props.setdeliveryUpdateShow(null)\r\n                        //let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n                    // this.props.history.push(path)\r\n                }).catch((error) => {\r\n                    console.log(\"delivery submit error= \" + error.data);\r\n                    show.error = \"errors occured : \" + error + \" !!!\";\r\n                    this.setState({ deliveryUpdateShow: show })\r\n                })\r\n        }*/\n    };\n\n    this.onProductChange = selected => {\n      console.log(\"selected.value = \" + selected.value);\n      this.getNewSearch('productId', selected.value); // let search = this.getNewSearch('productId', selected.value);\n      //this.refresh(search)\n    };\n\n    this.getNewSearch = (name, value) => {\n      let search = this.state.lastSearch;\n      let newPath = ``;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n\n        let searchItems = search.split('&');\n\n        for (let i = 0; i < searchItems.length; i++) {\n          if (!searchItems[i].startsWith(name)) newPath += searchItems[i] + '&';\n        }\n      }\n\n      if (value && value != 'undefined') newPath += name + '=' + value;else newPath = newPath.substring(0, newPath.length - 1);\n      console.log('newPath =' + newPath);\n      newPath = '?' + newPath;\n      this.setState({\n        lastSearch: newPath\n      });\n      this.refresh(newPath); // return newPath;\n    };\n\n    this.oninventoryAdd = selected => {\n      if (selected.name == '') return;\n      let selectedPds = this.state.selectedPds;\n      selectedPds.push({\n        name: selected.label,\n        value: selected.value\n      });\n      this.setState({\n        selectedPds: selectedPds\n      });\n    };\n\n    this.oninventoryRemove = i => {\n      let selectedPds = this.state.selectedPds;\n      selectedPds.splice(i, 1);\n      this.setState({\n        selectedPds: selectedPds\n      });\n    };\n\n    this.onDateChange = date => {\n      console.log(\"2 = \" + date);\n      if (date != null) console.log(\"type of 2\" + typeof date);\n      console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\n      if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof this.state.selectedDate);\n      if (this.isDateEqual(this.state.selectedDate, date)) return;\n\n      if (date) {\n        date = date.toISOString();\n        date = date.substring(0, date.indexOf('T'));\n      }\n      /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n          month: \"numeric\",\r\n          day: \"2-digit\",\r\n          year: \"numeric\",\r\n      }).format(new Date(date));*/\n\n\n      console.log(\"date = \" + date);\n      this.setState({\n        selectedDate: date\n      });\n      this.getNewSearch('dateCreatedAfter', date); // let search = \n    };\n\n    this.isDateEqual = (date1, date2) => {\n      //date2 string\n      // date1 string or date \n      console.log(\"typeof date1 = \" + typeof date1);\n      console.log(\"typeof date2 = \" + typeof date2);\n      console.log(\"date1 = \" + date1);\n      console.log(\" date2 = \" + date2);\n      if (date1 == date2) return true;else {\n        date1 = new Date(date1);\n        date2 = new Date(date2);\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) return true;\n      }\n      return false;\n    };\n\n    this.state = {\n      profileShow: props.profileShow,\n      items: props.items,\n      message: props.message,\n      filter: props.filter,\n      filteredNumbers: null,\n      lastSearch: '?isDiscarded=false&isAvailable=true&freeInventory=true',\n      selectedDate: null,\n      filteredcount: '',\n      selectedPds: []\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"user profile inner component did mount \"); // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\n\n    this.refresh(this.state.lastSearch);\n  }\n\n  refresh(search) {\n    ProductDetailDataService.retrieveAllNumbers(search).then(response => {\n      console.log(\"got response\");\n      this.setState({\n        filteredNumbers: response.data,\n        filteredcount: response.data.length\n      });\n      console.log(\"data length = \" + this.state.filteredNumbers.length);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"modal d-block \" : \"d-none\",\n        style: {\n          width: \"90%\",\n          height: \"90%\",\n          overflow: \"auto\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close pt-3\",\n          onClick: () => this.props.updateClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.profileShow.up ? 'Update' : 'Add', \" profile \\u2003(\", this.state.profileShow.profile.userName, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), this.state.profileShow.error && this.state.profileShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.profileShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.profileShow;\n              show.error = '';\n              this.setState({\n                profileShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"ml-5 inline\" : \"mt-5 ml-5 inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"date given :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control inline-2-5 p-2\",\n              dateFormat: \"dd MMMM yyyy\",\n              locale: \"en-GB\"\n              /*isClearable\r\n              placeholderText=\"select Date!\"*/\n              ,\n              selected: this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n              onChange: date => {\n                this.onDateChange(date); //console.log(\"date changed = \" + date);                               \n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"ml-5 inline\" : \"mt-5 ml-5 inline\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            children: \"date returned :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(DatePicker, {\n              className: \"form-control inline-2-5 p-2\",\n              dateFormat: \"dd MMMM yyyy\",\n              locale: \"en-GB\",\n              disabled: true\n              /*isClearable\r\n              placeholderText=\"select Date!\"*/\n              ,\n              selected: this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt) || null,\n              onChange: date => {\n                this.onDateChange(date); //console.log(\"date changed = \" + date);                               \n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"border mx-5 mt-5 pt-3 b-r r-c foo w84\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"move-top top-l\",\n            children: \"filter for inventory select\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline px-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"\",\n              children: \"product : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 26\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4 ml-0\",\n              items: this.state.filter.productNames,\n              onChange: selected => this.onProductChange(selected)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 26\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"\",\n              children: \"created after :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline\",\n              children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control inline-2-5 p-2 ml-0\",\n                dateFormat: \"dd MMMM yyyy\",\n                locale: \"en-GB\",\n                isClearable: true,\n                placeholderText: \"...\",\n                selected: this.state.selectedDate && new Date(this.state.selectedDate) || null,\n                onChange: selected => {\n                  this.onDateChange(selected);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 271,\n                columnNumber: 25\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"move-top top-r\",\n            children: [\" \", this.state.filteredcount, \" items found\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline pl-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"\",\n              children: \"inventory : \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4 ml-0\",\n              items: this.state.filteredNumbers || this.state.filter.inventoryNumbers,\n              onChange: selected => this.oninventoryAdd(selected)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 284,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline ml-5 mt-3 w60\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"\",\n            children: \"selected inventory :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 21\n          }, this), this.state.selectedPds && this.state.selectedPds.map((pd, i) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              value: pd.name,\n              className: \"form-control inline w90 m-0 p-2 pl-3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete m-0 ml-1\",\n              type: \"button\",\n              onClick: () => {\n                this.oninventoryRemove(i);\n              },\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 294,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline mt-3 w40\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            onClick: this.saveUpdated,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 318,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5\",\n            onClick: () => this.props.updateClicked(null),\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 319,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 316,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserProfileInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserProfileInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","UserProfileDataService","DatePicker","CustomSelect","ProductDetailFilter","UserProfileInnerComponent","constructor","props","saveUpdated","onProductChange","selected","console","log","value","getNewSearch","name","search","state","lastSearch","newPath","length","charAt","substring","searchItems","split","i","startsWith","setState","refresh","oninventoryAdd","selectedPds","push","label","oninventoryRemove","splice","onDateChange","date","selectedDate","isDateEqual","toISOString","indexOf","date1","date2","Date","getFullYear","getMonth","getDate","profileShow","items","message","filter","filteredNumbers","filteredcount","bind","componentDidMount","retrieveAllNumbers","then","response","data","render","show","width","height","overflow","updateClicked","up","profile","userName","error","givenAt","returnedAt","productNames","inventoryNumbers","map","pd"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport UserProfileDataService from '../service/UserProfileDataService'\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport ProductDetailFilter from './Filters/ProductDetailFilter';\r\n\r\n\r\nclass UserProfileInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                profileShow: props.profileShow,\r\n                items: props.items,\r\n                message: props.message,\r\n                filter: props.filter,\r\n            filteredNumbers: null,\r\n            lastSearch: '?isDiscarded=false&isAvailable=true&freeInventory=true',\r\n            selectedDate: null,\r\n            filteredcount: '',\r\n            selectedPds:[]\r\n\r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        console.log(\"user profile inner component did mount \")\r\n       // let search = '?isDiscarded=false&isAvailable=true&freeInventory=true';\r\n        this.refresh(this.state.lastSearch)\r\n       \r\n    }\r\n\r\n    refresh(search) {\r\n\r\n        ProductDetailDataService.retrieveAllNumbers(search)\r\n            .then(response => {\r\n                console.log(\"got response\");\r\n                this.setState({\r\n                    filteredNumbers: response.data,\r\n                    filteredcount: response.data.length\r\n                })\r\n                console.log(\"data length = \" + this.state.filteredNumbers.length);\r\n            })\r\n    }\r\n\r\n    saveUpdated = () => {\r\n      /*  let x = this.state.deliveryUpdateShow.x;\r\n        let items = this.state.items;\r\n        let item = items[x];\r\n\r\n        let show = this.state.deliveryUpdateShow;\r\n        let supplierId = show.delivery.supplierId;\r\n        let date = show.delivery.date;\r\n\r\n        // console.log(\"date.toISOString() = \" + date.toISOString());\r\n        // console.log(\"date = \" + date);\r\n        // console.log(\"new Date(item.date) = \" + new Date(item.date));\r\n        //console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\r\n\r\n        if (!date || !supplierId) {\r\n            show.error = \"required fields can't be empty !!!\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else if (supplierId == item.supplierId && this.isDateEqual(date, item.date)) {\r\n            show.error = \"delivery hasn't changed\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else {\r\n            console.log(\"all good\");\r\n            let item = show.delivery;\r\n            //console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n            DeliveryDataService.save(item)\r\n                .then((response) => {\r\n                    console.log(\"delivery submit response = \" + response.data);\r\n                    //item.supplierName = (this.state.suppliers.filter(s => s.value == item.supplierId))[0].name;\r\n                    items[x] = item;\r\n                    //message = \"update successful\"\r\n                    this.props.setItems(items);\r\n                    this.props.updateClickedInner(null);\r\n                    let msg = this.state.message;\r\n                    msg = \"update successful\";\r\n                    this.props.setMessage(msg);\r\n                    //this.props.setdeliveryUpdateShow(null)\r\n\r\n\r\n                    //let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n                    // this.props.history.push(path)\r\n                }).catch((error) => {\r\n                    console.log(\"delivery submit error= \" + error.data);\r\n                    show.error = \"errors occured : \" + error + \" !!!\";\r\n                    this.setState({ deliveryUpdateShow: show })\r\n                })\r\n        }*/\r\n\r\n    }\r\n\r\n    onProductChange = (selected) => {\r\n\r\n        console.log(\"selected.value = \" + selected.value);\r\n        this.getNewSearch('productId', selected.value);\r\n       // let search = this.getNewSearch('productId', selected.value);\r\n        //this.refresh(search)\r\n        \r\n\r\n\r\n    }\r\n    getNewSearch = (name, value) => {\r\n\r\n        let search = this.state.lastSearch;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (!searchItems[i].startsWith(name))\r\n                    newPath += searchItems[i] + '&'               \r\n            }\r\n        }\r\n\r\n      \r\n        if(value && value !='undefined')\r\n            newPath+= name + '=' + value;\r\n        else\r\n            newPath = newPath.substring(0, newPath.length - 1);\r\n        console.log('newPath =' + newPath);\r\n         newPath = '?' + newPath\r\n        this.setState({ lastSearch: newPath })\r\n        this.refresh(newPath)\r\n       // return newPath;\r\n\r\n\r\n    }\r\n    oninventoryAdd = (selected) => {\r\n        if (selected.name == '') return;\r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.push({ name: selected.label, value: selected.value })\r\n        this.setState({ selectedPds: selectedPds })\r\n\r\n    }\r\n    oninventoryRemove = (i) => {\r\n       \r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.splice(i, 1);\r\n        this.setState({ selectedPds: selectedPds })\r\n\r\n    }\r\n\r\n\r\n    onDateChange = (date) => {\r\n        console.log(\"2 = \" + date);\r\n        if (date != null) console.log(\"type of 2\" + typeof (date));\r\n        console.log(\"this.state.selectedDate 1 = \" + this.state.selectedDate);\r\n        if (this.state.selectedDate != null) console.log(\"type of 1\" + typeof(this.state.selectedDate));\r\n        \r\n\r\n        if (this.isDateEqual(this.state.selectedDate, date)) return;\r\n        \r\n       if(date) {\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n        } \r\n        /*date = new Intl.DateTimeFormat(\"en-GB\", {\r\n            month: \"numeric\",\r\n            day: \"2-digit\",\r\n            year: \"numeric\",\r\n        }).format(new Date(date));*/\r\n        console.log(\"date = \" + date);\r\n        this.setState({ selectedDate: date });\r\n        this.getNewSearch('dateCreatedAfter', date);\r\n       // let search = \r\n        \r\n        \r\n    }\r\n\r\n    isDateEqual = (date1, date2) => {\r\n        //date2 string\r\n        // date1 string or date \r\n        console.log(\"typeof date1 = \" + typeof date1);\r\n        console.log(\"typeof date2 = \" + typeof date2);\r\n        console.log(\"date1 = \" + date1);\r\n        console.log(\" date2 = \" + date2);\r\n        if (date1 == date2) return true       \r\n        else {\r\n            date1 = new Date(date1);\r\n            date2 = new Date(date2);\r\n            if (date1.getFullYear() === date2.getFullYear() &&\r\n                date1.getMonth() === date2.getMonth() &&\r\n                date1.getDate() === date2.getDate())\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.profileShow.show ? \"modal d-block \" : \"d-none\"} style={{ width: \"90%\", height: \"90%\", overflow:\"auto\" }}>\r\n\r\n\r\n                    <span class=\"close pt-3\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                    <h2>{this.state.profileShow.up ? 'Update' : 'Add'} profile &emsp;({this.state.profileShow.profile.userName})</h2>\r\n                    {this.state.profileShow.error && this.state.profileShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.profileShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.profileShow;\r\n                                    show.error = '';\r\n                                    this.setState({ profileShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>\r\n                    }\r\n                    <div className={this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"ml-5 inline\" : \"mt-5 ml-5 inline\"}>\r\n                    <h6 >date given :</h6> \r\n                    <div>\r\n                        <DatePicker\r\n                            className=\"form-control inline-2-5 p-2\"\r\n                            dateFormat=\"dd MMMM yyyy\"\r\n                            locale=\"en-GB\"     \r\n                            /*isClearable\r\n                            placeholderText=\"select Date!\"*/\r\n                            selected={(this.state.profileShow.profile.givenAt && new Date(this.state.profileShow.profile.givenAt))|| new Date()}\r\n                            onChange={date => {\r\n                                this.onDateChange(date);\r\n                                //console.log(\"date changed = \" + date);                               \r\n                            }} />\r\n                        </div>\r\n                    </div>\r\n                    <div className={this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"ml-5 inline\" : \"mt-5 ml-5 inline\"}>\r\n                        <h6 >date returned :</h6>\r\n                        <div>\r\n                            <DatePicker\r\n                                className=\"form-control inline-2-5 p-2\"\r\n                                dateFormat=\"dd MMMM yyyy\"\r\n                                locale=\"en-GB\"\r\n                                disabled\r\n                                /*isClearable\r\n                                placeholderText=\"select Date!\"*/\r\n                                selected={(this.state.profileShow.profile.returnedAt && new Date(this.state.profileShow.profile.returnedAt)) || null}\r\n                                onChange={date => {\r\n                                    this.onDateChange(date);\r\n                                    //console.log(\"date changed = \" + date);                               \r\n                                }} />\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"border mx-5 mt-5 pt-3 b-r r-c foo w84\">{/******** small filter *************/}\r\n                        <label className=\"move-top top-l\">filter for inventory select</label>\r\n\r\n                        <div className=\"inline px-3\">\r\n                         <h6 className=\"\">product : </h6>\r\n                         <CustomSelect                        \r\n                            className={\"inline inline-4 ml-0\"}\r\n                            items={this.state.filter.productNames}                       \r\n                            onChange={(selected) => this.onProductChange(selected)}\r\n                            />\r\n                        </div>\r\n\r\n                        <div className=\"inline\">\r\n                        <h6 className=\"\">created after :</h6>\r\n                        <div className=\"inline\">\r\n                        <DatePicker\r\n                                    className=\"form-control inline-2-5 p-2 ml-0\"\r\n                            dateFormat=\"dd MMMM yyyy\"\r\n                            locale=\"en-GB\"\r\n                            isClearable\r\n                            placeholderText=\"...\"\r\n                            selected={this.state.selectedDate && new Date(this.state.selectedDate)||null}\r\n                            onChange={selected => {                                \r\n                                 this.onDateChange(selected) \r\n                            }} />\r\n                        </div>\r\n                        </div> \r\n                        <span className=\"move-top top-r\"> {this.state.filteredcount} items found</span>\r\n                        <div className=\"inline pl-3\">\r\n                            <h6 className=\"\">inventory : </h6>\r\n                            <CustomSelect\r\n                                className={\"inline inline-4 ml-0\"}\r\n                              items={this.state.filteredNumbers || this.state.filter.inventoryNumbers}\r\n                              onChange={(selected) => this.oninventoryAdd(selected)}\r\n                           />\r\n                        </div>\r\n                       \r\n                    </div>\r\n                    <div className=\"inline ml-5 mt-3 w60\">\r\n                    <h6 className=\"\">selected inventory :</h6>\r\n                    {this.state.selectedPds && \r\n                            this.state.selectedPds.map((pd, i) => \r\n                        <>\r\n                           \r\n                            {/*<input className=\"inline border-bottom pr-5\">{pd.name}/>*/}\r\n                                <input value={pd.name} className='form-control inline w90 m-0 p-2 pl-3' />\r\n                            {/* <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                        onClick={() => {\r\n                                            this.oninventoryRemove(i);\r\n                                        }}>\r\n                            </i>*/}\r\n                            <button className=\"btn btn-mybtn btn-delete m-0 ml-1\" type=\"button\"\r\n                                onClick={() => {\r\n                                    this.oninventoryRemove(i);\r\n                                }}>Delete</button>\r\n                           \r\n                               \r\n                            </>\r\n                            )}\r\n                    </div>\r\n                    <div className=\"inline mt-3 w40\">                                            \r\n                        \r\n                    <button className=\"btn btn-mybtn px-5\" onClick={this.saveUpdated}>Save</button>\r\n                        <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                    </div>\r\n\r\n\r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileInnerComponent"]},"metadata":{},"sourceType":"module"}