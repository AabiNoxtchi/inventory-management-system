{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { Component } from 'react';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport UserProfileDataService from '../service/UserProfileDataService';\n\nclass TimelineInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      items: [],\n      filter: props.filter\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    /* if (!this.state.filter.productDetailId || !this.state.filter.givenAfter || !this.state.filter.returnedAfter) {\r\n         this.props.updateTimeline(false);\r\n         this.props.showmsg(\"\")\r\n     }*/\n    let search = `?productDetailId=` + this.state.filter.productDetailId + `&givenAfter=` + this.state.filter.givenAfter;\n    search += this.state.returnedBefore ? `&returnedBefore=` + this.state.filter.returnedBefore : ``;\n    this.refresh(search);\n  }\n\n  refresh(search) {\n    UserProfileDataService.retrieveTimeline(search).then(response => {\n      /* this.setState({\r\n           items: response.data.items || response.data.daoitems,\r\n          // pager: response.data.pager,\r\n       });*/\n    }).catch(error => {\n      this.setState({\n        errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : error.response && typeof error.response.data == 'string' ? error.response.data : error.response.data.message ? error.response.data.message : error\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default TimelineInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/TimelineInnerComponent.jsx"],"names":["React","Component","DatePicker","CustomSelect","UserProfileDataService","TimelineInnerComponent","constructor","props","state","items","filter","refresh","bind","componentDidMount","search","productDetailId","givenAfter","returnedBefore","retrieveTimeline","then","response","catch","error","setState","errormsg","data","message","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;;AAGA,MAAMC,sBAAN,SAAqCJ,SAArC,CAA+C;AAC3CK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AAEA,SAAKC,KAAL,GACI;AACIC,MAAAA,KAAK,EAAE,EADX;AAEIC,MAAAA,MAAM,EAAEH,KAAK,CAACG;AAFlB,KADJ;AAMA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACH;;AAGDC,EAAAA,iBAAiB,GAAG;AACjB;AACP;AACA;AACA;AACQ,QAAIC,MAAM,GAAI,mBAAD,GAAsB,KAAKN,KAAL,CAAWE,MAAX,CAAkBK,eAAxC,GAA2D,cAA3D,GAA2E,KAAKP,KAAL,CAAWE,MAAX,CAAkBM,UAA1G;AACAF,IAAAA,MAAM,IAAI,KAAKN,KAAL,CAAWS,cAAX,GAA6B,kBAAD,GAAqB,KAAKT,KAAL,CAAWE,MAAX,CAAkBO,cAAnE,GAAqF,EAA/F;AACA,SAAKN,OAAL,CAAaG,MAAb;AACH;;AAKDH,EAAAA,OAAO,CAACG,MAAD,EAAS;AACZV,IAAAA,sBAAsB,CAACc,gBAAvB,CAAwCJ,MAAxC,EACKK,IADL,CAEIC,QAAQ,IAAI;AAEL;AACnB;AACA;AACA;AACiB,KART,EASMC,KATN,CASaC,KAAD,IAAW;AACf,WAAKC,QAAL,CAAc;AACVC,QAAAA,QAAQ,EAAE,KAAKF,KAAL,IAAc,4CAAd,GAA6D,yBAA7D,GACNA,KAAK,CAACF,QAAN,IAAkB,OAAOE,KAAK,CAACF,QAAN,CAAeK,IAAtB,IAA8B,QAAhD,GAA2DH,KAAK,CAACF,QAAN,CAAeK,IAA1E,GACIH,KAAK,CAACF,QAAN,CAAeK,IAAf,CAAoBC,OAApB,GAA8BJ,KAAK,CAACF,QAAN,CAAeK,IAAf,CAAoBC,OAAlD,GAA4DJ;AAH1D,OAAd;AAKH,KAfL;AAgBH;;AAGDK,EAAAA,MAAM,GAAG;AACL,wBACI,qCADJ;AAQH;;AAxD0C;;AA2D/C,eAAetB,sBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport UserProfileDataService from '../service/UserProfileDataService';\r\n\r\n\r\nclass TimelineInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                items: [],      \r\n                filter: props.filter, \r\n            \r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n   \r\n    componentDidMount() {\r\n       /* if (!this.state.filter.productDetailId || !this.state.filter.givenAfter || !this.state.filter.returnedAfter) {\r\n            this.props.updateTimeline(false);\r\n            this.props.showmsg(\"\")\r\n        }*/\r\n        let search = `?productDetailId=` + this.state.filter.productDetailId + `&givenAfter=` + this.state.filter.givenAfter;\r\n        search += this.state.returnedBefore ? `&returnedBefore=` + this.state.filter.returnedBefore : ``;\r\n        this.refresh(search)\r\n    }\r\n   \r\n        \r\n           \r\n\r\n    refresh(search) {\r\n        UserProfileDataService.retrieveTimeline(search)\r\n            .then(\r\n            response => { \r\n                    \r\n                   /* this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                       // pager: response.data.pager,\r\n                    });*/\r\n                }\r\n            ).catch((error) => {\r\n                this.setState({\r\n                    errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : \r\n                        error.response && typeof error.response.data == 'string' ? error.response.data :\r\n                            error.response.data.message ? error.response.data.message : error\r\n                })\r\n            })\r\n    }\r\n   \r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                \r\n               \r\n\r\n                   \r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TimelineInnerComponent"]},"metadata":{},"sourceType":"module"}