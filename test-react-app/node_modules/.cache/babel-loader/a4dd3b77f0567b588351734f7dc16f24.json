{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\nimport Function from './Shared/Function';\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.isSame = values => {\n      // console.log(\"isSame(values)\");\n      console.log(\"values.originaldate = \" + values.originalDate);\n      console.log(\"values.date = \" + values.date);\n      let same = true;\n      if (values.originalSupplierId != values.supplierId) return false;\n      if (values.originalDate != values.date) return false;\n      if (values.deliveryDetailEditVMs.length != values.originaldds.length) return false;\n\n      if (same) {\n        values.originaldds.map(dd => {\n          //if (!same) break;\n          let found = values.deliveryDetailEditVMs.find(x => x.id == dd.id);\n\n          if (!found) {\n            return false;\n          }\n\n          if (dd.productNums.length != found.productNums.length) {\n            return false;\n          }\n\n          if (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne) {\n            return false;\n          }\n\n          dd.productNums.map(num => {\n            let foundNum = found.productNums.find(i => i.name == num.name);\n            console.log(\"foundNum = \" + JSON.stringify(foundNum));\n            console.log(\"foundNum = \" + (foundNum == 'undefined'));\n            console.log(\"foundNum = \" + (foundNum == undefined));\n            console.log(\"foundNum = \" + !foundNum);\n\n            if (!foundNum) {\n              return false;\n            }\n          });\n        });\n      }\n\n      return same;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      originaldds: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date || new Date(),\n        suppliers: response.data.suppliers,\n        originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values, actions) {\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    console.log(\"in submit delivery item = \" + JSON.stringify(item));\n    DeliveryDataService.save(item).then(response => {\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      console.log(\"error\" + JSON.stringify(error.response)); //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\n\n      actions.setFieldValue('EnumErrors', error.response.data.numErrors);\n      actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\n      actions.setFieldValue('ddDeletionErrors', error.response.data.ddDeletionErrors);\n      actions.setFieldValue('originalSuplierId', values.supplierId);\n      actions.setFieldValue('originalDate', values.date);\n      actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\n      /*this.setState({\r\n          supplierId: values.supplierId,\r\n          date: values.date,\r\n         // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n      })*/\n\n      console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors)); //if (values.ddDeletionErrors == null )\n    });\n  }\n\n  validate(values) {\n    //console.log(\"validating : values.supplierId = \" + values.supplierId);\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    } //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\n\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    const productNums = [...values.ddEditVM.productNums];\n    const quantity = e.target.value || 0;\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          value: '',\n          name: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          if (num[0].value !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].value);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n          } else {\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.value == '-' + i);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        }\n      }\n    }\n\n    setFieldValue(\"ddEditVM.productNums\", productNums);\n    setFieldValue(\"ddEditVM.quantity\", e.target.value);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.value == id);\n    if (index < 0) updatedProductNums.push({\n      value: id,\n      name: e.target.value\n    });else updatedProductNums[index].name = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = [];\n    let productNumErrors = []; // client side validation\n\n    let EnumErrors = null; // from server\n\n    let deletionErrors = null; // from server\n\n    let originaldds = this.state.originaldds;\n    let originalSupplierId = this.state.supplierId;\n    let originalDate = this.state.date;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors,\n          EnumErrors,\n          deletionErrors,\n          originaldds,\n          originalSupplierId,\n          originalDate\n        },\n        onSubmit: async (values, actions) => {\n          this.onSubmit(values, actions);\n        },\n        validateOnChange: true,\n        validateOnBlur: true,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          dirty,\n          isSubmitting,\n          touched,\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  maxDate: new Date(),\n                  onChange: date => {\n                    setFieldValue(\"date\", Function.convertDate(date));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"add/update products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-flex align-items-top  mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"product :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 262,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    className: \"d-inline-block inline-2-5\",\n                    items: products,\n                    value: values.ddEditVM.productId,\n                    onChange: selected => {\n                      setFieldValue(\"ddEditVM.productName\", selected.label);\n                      setFieldValue(\"ddEditVM.productId\", selected.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 263,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 274,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"quantity :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 279,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.quantity\",\n                    onChange: e => {\n                      this.onChangeQuantity(e, values, setFieldValue);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 45\n                  }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 287,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 278,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"unit price :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 292,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.pricePerOne\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 293,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 297,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 291,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 260,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn mr-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let iserror = false;\n\n                    if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                      setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                      iserror = true;\n                    } else {\n                      values.deliveryDetailEditVMs.map((x, y) => {\n                        if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                          iserror = true;\n                          let ddErrorName = values.ddEditVMerror.name;\n                          ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                          setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                        }\n                      });\n                    }\n\n                    if (values.ddEditVM.pricePerOne == '') {\n                      setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity == '') {\n                      setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity > 0) {\n                      let ddErrorNums = values.productNumErrors;\n\n                      for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                        if (values.ddEditVM.productNums[i].name.length < 1) {\n                          ddErrorNums[i] = 'required field !!!';\n                          iserror = true;\n                        } else if (values.ddEditVM.productNums[i].name.length < 4) {\n                          ddErrorNums[i] = 'too short !!!';\n                          iserror = true;\n                        } else {\n                          let isSame = false;\n\n                          for (let j = 0; j < i; j++) {\n                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\n                              isSame = true;\n                              iserror = true;\n                            }\n                          }\n\n                          ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                        }\n                      }\n\n                      setFieldValue(\"productNumErrors\", ddErrorNums);\n                    }\n\n                    if (!iserror) {\n                      if (values.index === '') {\n                        let list = values.deliveryDetailEditVMs;\n                        list.push(values.ddEditVM);\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      } else {\n                        let list = values.deliveryDetailEditVMs;\n                        list[values.index] = values.ddEditVM; // edited;\n\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      }\n\n                      this.resetddEditVMForm(values, setFieldValue);\n                    }\n                  },\n                  children: values.index !== '' ? \"Update\" : \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete\",\n                  type: \"button\",\n                  onClick: () => {\n                    this.resetddEditVMForm(values, setFieldValue);\n                  },\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 259,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"mb-1\",\n              children: [values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: [\"inventory number \", i + 1, \" :\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 376,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `ddEditVM.productNums.${i}.name`,\n                  type: \"text\",\n                  className: 'form-control d-inline-block inline-4',\n                  onChange: e => {\n                    if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-' + i, values, setFieldValue);\n                    setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let list = values.ddEditVM.productNums;\n                    list.splice(i, 1);\n                    setFieldValue(\"ddEditVM.productNums\", list);\n\n                    if (values.ddEditVM.id !== '') {\n                      let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                      let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\n\n                      if (index > -1) {\n                        updatedProductNums.splice(index, 1);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      let deleted = values.ddEditVM.deletedNums || [];\n                      deleted.push(num);\n                      setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                    }\n\n                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 385,\n                  columnNumber: 45\n                }, this), values.EnumErrors && values.EnumErrors instanceof Array && values.index !== '' && values.EnumErrors[values.index] && values.EnumErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: values.EnumErrors[values.index][i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 407,\n                  columnNumber: 53\n                }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-3 pt-1\",\n                    onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 415,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 413,\n                  columnNumber: 53\n                }, this)]\n              }, num.value || i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 375,\n                columnNumber: 45\n              }, this)), values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" deleting : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 45\n                }, this), values.ddEditVM.deletedNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `ddEditVM.deletedNums.${i}.name`,\n                    type: \"text\",\n                    className: 'form-control d-inline-block inline-4',\n                    onChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 429,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.ddEditVM.deletedNums;\n                      list.splice(i, 1);\n                      setFieldValue(\"ddEditVM.deletedNums\", list);\n                      let productNums = values.ddEditVM.productNums;\n                      productNums.push(num);\n                      setFieldValue(\"ddEditVM.productNums\", productNums);\n\n                      if (values.ddEditVM.id !== '') {\n                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                        updatedProductNums.push(num);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity + 1);\n                    },\n                    children: \"un Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 434,\n                    columnNumber: 53\n                  }, this), values.deletionErrors && values.deletionErrors instanceof Array && values.index !== '' && values.deletionErrors[values.index] && values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-inline ml-1\",\n                    children: \"item has associated profiles with owings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 457,\n                    columnNumber: 57\n                  }, this)]\n                }, num.value || i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 428,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 372,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 258,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 470,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 469,\n            columnNumber: 33\n          }, this), (values.EnumErrors || values.deletionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 474,\n            columnNumber: 33\n          }, this), values.ddDeletionErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: JSON.stringify(values.ddDeletionErrors)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"required-field\",\n              children: \"products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table x-Table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 487,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 488,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '173px',\n                      padding: '.35rem .5rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 489,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 485,\n                  columnNumber: 45\n                }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: values.index === index ? \"table-active\" : \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 495,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 496,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Intl.NumberFormat(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"BGN\",\n                        maximumFractionDigits: 2\n                      }).format(dd.pricePerOne)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 497,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '173px',\n                        padding: '.35rem .5rem'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn mr-1\",\n                        type: \"button\",\n                        onClick: () => {\n                          //console.log(\"index = \" + index);                                                  \n                          setFieldValue(\"index\", index);\n                          setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)));\n                        },\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 503,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn btn-delete\",\n                        type: \"button\",\n                        onClick: () => {\n                          let list = values.deliveryDetailEditVMs;\n                          list.splice(index, 1);\n                          setFieldValue(\"deliveryDetailEditVMs\", list);\n\n                          if (dd.id > 0) {\n                            let deleted = values.deleteddds;\n                            deleted.push(dd.id);\n                            setFieldValue(\"deleteddds\", deleted);\n                          }\n\n                          if (values.index == index) {\n                            this.resetddEditVMForm(values, setFieldValue);\n                          }\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 508,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 502,\n                      columnNumber: 57\n                    }, this), values.EnumErrors && values.EnumErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 526,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 525,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 524,\n                      columnNumber: 61\n                    }, this), values.deletionErrors && values.deletionErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 534,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 533,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 532,\n                      columnNumber: 61\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 494,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-5 ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn p-x-5\",\n                disabled: isSubmitting || this.isSame(values),\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 550,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 552,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 545,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","Function","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","isSame","values","console","log","originalDate","date","same","originalSupplierId","supplierId","deliveryDetailEditVMs","length","originaldds","map","dd","found","find","x","id","productNums","productId","pricePerOne","num","foundNum","i","name","JSON","stringify","undefined","state","match","params","deliveryView","number","suppliers","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","Date","parse","actions","item","deletedDetailsIds","deleteddds","targetDate","save","path","history","push","catch","error","setFieldValue","numErrors","deletionErrors","ddDeletionErrors","errors","window","back","onChangeQuantity","e","ddEditVM","quantity","target","value","previousQuantity","parseInt","splice","deletedNums","updatedNums","updatedProductNums","findIndex","onUpdateProductNums","resetddEditVMForm","VM","productName","render","productNumErrors","EnumErrors","dirty","isSubmitting","touched","convertDate","selected","label","iserror","y","ddErrorName","ddErrorNums","j","list","deleted","Array","indexOf","Number","width","padding","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Function from './Shared/Function'\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n           suppliers: [],\r\n            originaldds : [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},           \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                 this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date || new Date(),\r\n                     suppliers: response.data.suppliers, \r\n                     originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\r\n                     deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []                    \r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n      \r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number: values.number,\r\n            supplierId: values.supplierId,\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        };\r\n        console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n               let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n               this.props.history.push(path)\r\n            }).catch((error) => {              \r\n                console.log(\"error\" + JSON.stringify(error.response));\r\n                //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\r\n                actions.setFieldValue('EnumErrors', error.response.data.numErrors);\r\n                actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\r\n                actions.setFieldValue('ddDeletionErrors', error.response.data.ddDeletionErrors);\r\n\r\n                actions.setFieldValue('originalSuplierId', values.supplierId);\r\n                actions.setFieldValue('originalDate', values.date);\r\n                actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\r\n\r\n                /*this.setState({\r\n                    supplierId: values.supplierId,\r\n                    date: values.date,\r\n                   // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n                })*/\r\n                console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors))//if (values.ddDeletionErrors == null )\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n        //console.log(\"validating : values.supplierId = \" + values.supplierId);\r\n        let errors = {}  \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        const productNums = [...values.ddEditVM.productNums];\r\n        const quantity = e.target.value || 0;\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n\r\n     if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ value: '', name: '' });\r\n        }\r\n     } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n            let num = productNums.splice(i, 1);\r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               if ( num[0].value !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].value);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);                   \r\n                } else {\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.value == '-' + i);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n        }}\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];        \r\n        let index = updatedProductNums.findIndex(x => x.value == id);\r\n         if (index < 0)\r\n            updatedProductNums.push({ value: id, name: e.target.value });\r\n        else\r\n            updatedProductNums[index].name = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    isSame = (values) => {\r\n        // console.log(\"isSame(values)\");\r\n        console.log(\"values.originaldate = \" + values.originalDate);\r\n        console.log(\"values.date = \" + values.date);\r\n        let same = true;\r\n        if (values.originalSupplierId != values.supplierId) return false;\r\n        if (values.originalDate != values.date) return false;\r\n        if (values.deliveryDetailEditVMs.length != values.originaldds.length) return false;\r\n        if (same) {\r\n            values.originaldds.map(dd => {\r\n                //if (!same) break;\r\n                let found = values.deliveryDetailEditVMs.find(x => x.id == dd.id);\r\n                if (!found) { return false }\r\n                if (dd.productNums.length != found.productNums.length) { return false }\r\n                if (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne) { return false }\r\n                dd.productNums.map(num => {\r\n                    let foundNum = found.productNums.find(i => i.name == num.name);\r\n                    console.log(\"foundNum = \" + JSON.stringify(foundNum));\r\n                    console.log(\"foundNum = \" + (foundNum == 'undefined'));\r\n                    console.log(\"foundNum = \" + (foundNum == undefined));\r\n                    console.log(\"foundNum = \" + (!foundNum));\r\n                    if (!foundNum) { return false }\r\n                })\r\n\r\n            })\r\n        }\r\n        return same;\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];    \r\n        let productNumErrors = []; // client side validation\r\n        let EnumErrors = null;// from server\r\n        let deletionErrors = null; // from server\r\n        let originaldds = this.state.originaldds;\r\n        let originalSupplierId = this.state.supplierId;\r\n        let originalDate = this.state.date;\r\n       \r\n        return (\r\n            <div className=\"container pt-5\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds\r\n                        , productNumErrors, EnumErrors, deletionErrors, originaldds, originalSupplierId, originalDate\r\n                    }}\r\n                   \r\n                    onSubmit={async (values, actions) => {\r\n                        this.onSubmit(values,actions)                       \r\n                    }}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={true}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ dirty, isSubmitting, touched, setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label className=\"required-field\">date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                            className=\"form-control inline-2-5\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            selected={(values.date && new Date(values.date))}\r\n                                            maxDate={new Date()}\r\n                                            onChange={date => {\r\n                                                setFieldValue(\"date\", Function.convertDate(date));\r\n                                            }} />                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                    <label className=\"required-field\">supplier</label>\r\n                                    <div>                                     \r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}/>    \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                            {/* ********************************************************  */}\r\n\r\n                            <div className=\"mt-5\"><h6>add/update products</h6>\r\n                            <fieldset className=\"d-flex align-items-top  mb-3\">                               \r\n                                  <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                            <label>product :&nbsp;</label>                                           \r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {                                                                                                 \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n                                                }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                  </div>                                   \r\n                                  <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {                                           \r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                                if (x.productName == values.ddEditVM.productName &&\r\n                                                    (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].name.length < 1) {                                                        \r\n                                                         ddErrorNums[i] = 'required field !!!';                                                      \r\n                                                        iserror = true;                                                       \r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].name.length < 4) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                    }                                                 \r\n                                                }\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;                                              \r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }\r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)                                            \r\n                                        }}>reset</button>\r\n                                  </div>\r\n                                </fieldset>                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {  values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                            <div key={num.value || i} className=\"ml-3\">                                               \r\n                                                <label className=\"required-field\">inventory number {i + 1} :&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.name`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4'}\r\n                                                    onChange={e => {                                                      \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);                                                       \r\n                                                }} /> \r\n                                            <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                onClick={() => {\r\n                                                    let list = values.ddEditVM.productNums;\r\n                                                    list.splice(i, 1)\r\n                                                    setFieldValue(\"ddEditVM.productNums\", list)\r\n                                                    if (values.ddEditVM.id !== '') {\r\n                                                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                        let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\r\n\r\n                                                        if (index > -1) {\r\n                                                            updatedProductNums.splice(index, 1)\r\n                                                            setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n                                                        }\r\n                                                        let deleted = values.ddEditVM.deletedNums || [];\r\n                                                        deleted.push(num)\r\n                                                        setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                    }\r\n                                                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                }}>Delete</button>                                                                                            \r\n                                                { values.EnumErrors && values.EnumErrors instanceof Array\r\n                                                    && values.index !== '' && values.EnumErrors[values.index]\r\n                                                    && values.EnumErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                       \r\n                                                        {values.EnumErrors[values.index][i]}\r\n                                                    </div>\r\n                                            }   \r\n                                           \r\n                                                { values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                        \r\n                                                        { values.productNumErrors[i] }\r\n                                                        <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>                                                       \r\n                                                    </div>\r\n                                                }                                                  \r\n                                            </div>\r\n                                        )}\r\n\r\n                                    {/************ deleting ***************/}\r\n\r\n                                    {values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 &&\r\n                                        <div>\r\n                                            <label> deleting : </label>\r\n                                            {values.ddEditVM.deletedNums.map((num, i) =>\r\n                                                <div key={num.value || i} className=\"ml-3\">\r\n                                                    <Field\r\n                                                        name={`ddEditVM.deletedNums.${i}.name`}\r\n                                                        type=\"text\"\r\n                                                        className={'form-control d-inline-block inline-4'}\r\n                                                        onChange={() => { }} />\r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n\r\n                                                            let list = values.ddEditVM.deletedNums;\r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.deletedNums\", list)\r\n\r\n                                                            let productNums = values.ddEditVM.productNums;\r\n                                                            productNums.push(num);\r\n                                                            setFieldValue(\"ddEditVM.productNums\", productNums);\r\n\r\n                                                            if (values.ddEditVM.id !== '') {\r\n\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                updatedProductNums.push(num);\r\n                                                                setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n\r\n                                                            }\r\n                                                            setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity + 1)\r\n                                                    }}>un Delete</button>                                              \r\n                                                    {values.deletionErrors && values.deletionErrors instanceof Array\r\n                                                        && values.index !== '' && values.deletionErrors[values.index] &&\r\n                                                        values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 &&\r\n                                                        <div className=\"alert alert-warning d-inline ml-1\">\r\n                                                            item has associated profiles with owings\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                </fieldset>\r\n                            </div>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                            </fieldset>\r\n                            {(values.EnumErrors || values.deletionErrors ) &&\r\n                                <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                            }\r\n\r\n                            {(values.ddDeletionErrors) &&\r\n                                <div className=\"alert alert-warning d-flex mbt-01\">{JSON.stringify(values.ddDeletionErrors)}</div>\r\n                            }\r\n                            \r\n                           \r\n                            <div className=\"mt-3 \"><h6 className=\"required-field\">products</h6>                               \r\n                                    <table className=\"table x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                            <td style={{ width: '173px' , padding: '.35rem .5rem' }}></td>\r\n                                             </tr>\r\n                                    {\r\n                                            deliveryDetailEditVMs.map((dd, index) =>\r\n                                                <>                                                   \r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                        <td style={{ width: '173px' , padding: '.35rem .5rem' }}>\r\n                                                            <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    //console.log(\"index = \" + index);                                                  \r\n                                                                setFieldValue(\"index\", index);\r\n                                                                setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)))\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;                                                            \r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)                                                           \r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)                                                                \r\n                                                            }\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }                                                           \r\n                                                        }}>Delete</button>\r\n                                                        </td>\r\n                                                        { values.EnumErrors && values.EnumErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                            <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                <i class=\"fa fa-bomb \"\r\n                                                                    onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                        { values.deletionErrors && values.deletionErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                                <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                    <i class=\"fa fa-bomb \"\r\n                                                                        onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                </tr>                                                \r\n                                            </>\r\n                                    )}\r\n                                        </tbody>\r\n                                </table>   \r\n                              \r\n                                <div className=\"mt-5 ml-3\">\r\n                                    {/*console.log(\"JSON.stringify(values.deliveryDetailEditVMs) = \" + JSON.stringify(values.deliveryDetailEditVMs))}\r\n                                    {console.log(\"JSON.stringify(values.originaldds) = \" + JSON.stringify(values.originaldds))}\r\n                                    {console.log(\" JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)) = \" +\r\n                                        (JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)))*/}\r\n                                    <button className=\"btn btn-mybtn p-x-5\" disabled={isSubmitting || this.isSame(values)}\r\n                                        type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}