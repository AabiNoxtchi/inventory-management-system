{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryInnerComponent.jsx\";\nimport React, { Component } from 'react'; //import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\n\nimport DeliveryDataService from '../service/DeliveryDataService'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nclass DeliveryInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      let x = this.state.deliveryUpdateShow.x;\n      let items = this.state.items;\n      let item = items[x];\n      let show = this.state.deliveryUpdateShow;\n      let supplierId = show.delivery.supplierId;\n      let date = show.delivery.date; // console.log(\"date.toISOString() = \" + date.toISOString());\n      // console.log(\"date = \" + date);\n      //console.log(\"new Date(item.date) = \" + new Date(item.date));\n      // console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\n\n      if (!date || !supplierId) {\n        show.error = \"required fields can't be empty !!!\";\n        this.setState({\n          deliveryUpdateShow: show\n        });\n      } else if (supplierId == item.supplierId && this.isDateEqual(date, new Date(item.date))) {\n        show.error = \"delivery hasn't changed\";\n        this.setState({\n          deliveryUpdateShow: show\n        });\n      } else {\n        console.log(\"all good\");\n      }\n    };\n\n    this.isDateEqual = (date1, date2) => {\n      if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) return true;\n      return false;\n    };\n\n    this.onDateChanged = date => {\n      let deliveryUpdateShow = this.state.deliveryUpdateShow;\n      deliveryUpdateShow.delivery.date = date;\n      this.setState({\n        deliveryUpdateShow: deliveryUpdateShow\n      });\n    };\n\n    this.onSupplierChange = selected => {\n      let deliveryUpdateShow = this.state.deliveryUpdateShow;\n      deliveryUpdateShow.delivery.supplierId = selected.value;\n      this.setState({\n        deliveryUpdateShow: deliveryUpdateShow\n      });\n    };\n\n    this.state = {\n      deliveryUpdateShow: props.deliveryUpdateShow,\n      items: props.items,\n      message: props.message,\n      suppliers: props.suppliers\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.deliveryUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.deliveryUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"70%\",\n          height: \"80%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update delivery \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 21\n        }, this), this.state.deliveryUpdateShow.error && this.state.deliveryUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.deliveryUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.deliveryUpdateShow;\n              show.error = '';\n              this.setState({\n                deliveryUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.deliveryUpdateShow.error && this.state.deliveryUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: this.state.deliveryUpdateShow.delivery.number,\n          disabled: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"ml-5\",\n          children: \"date :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(DatePicker, {\n            className: \"form-control\",\n            dateFormat: \"dd MMMM yyyy\",\n            locale: \"en-GB\" //selected={(values.date && new Date(values.date))}\n            ,\n            selected: this.state.deliveryUpdateShow.delivery.date && new Date(this.state.deliveryUpdateShow.delivery.date),\n            onChange: date => {\n              this.onDateChanged(date); //console.log(\"date changed = \" + date);\n              //setFieldValue(\"date\", date)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: \"ml-5\",\n          children: \"supplier :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n          items: this.state.suppliers,\n          value: this.state.deliveryUpdateShow.delivery.supplierId,\n          onChange: selected => this.onSupplierChange(selected)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5\",\n          onClick: this.saveUpdated,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5\",\n          onClick: () => this.props.updateClickedInner(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default DeliveryInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryInnerComponent.jsx"],"names":["React","Component","DeliveryDataService","DatePicker","CustomSelect","DeliveryInnerComponent","constructor","props","saveUpdated","x","state","deliveryUpdateShow","items","item","show","supplierId","delivery","date","error","setState","isDateEqual","Date","console","log","date1","date2","getFullYear","getMonth","getDate","onDateChanged","onSupplierChange","selected","value","message","suppliers","render","width","height","updateClickedInner","length","number"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\n\r\nclass DeliveryInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                deliveryUpdateShow: props.deliveryUpdateShow,\r\n                items: props.items,\r\n            message: props.message,\r\n                suppliers: props.suppliers\r\n                \r\n\r\n            }\r\n    }\r\n\r\n    saveUpdated = () => {\r\n        let x = this.state.deliveryUpdateShow.x;\r\n        let items = this.state.items;\r\n        let item = items[x];\r\n\r\n        let show = this.state.deliveryUpdateShow;\r\n        let supplierId = show.delivery.supplierId;\r\n        let date = show.delivery.date;\r\n\r\n       // console.log(\"date.toISOString() = \" + date.toISOString());\r\n       // console.log(\"date = \" + date);\r\n        //console.log(\"new Date(item.date) = \" + new Date(item.date));\r\n       // console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\r\n\r\n        if (!date || !supplierId) {\r\n            show.error = \"required fields can't be empty !!!\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else if (supplierId == item.supplierId && this.isDateEqual(date, new Date(item.date))) {\r\n            show.error = \"delivery hasn't changed\";\r\n            this.setState({ deliveryUpdateShow: show })\r\n        } else {\r\n            console.log(\"all good\")\r\n        }\r\n\r\n\r\n\r\n    }\r\n\r\n    isDateEqual = (date1, date2) => {\r\n        if (date1.getFullYear() === date2.getFullYear() &&\r\n            date1.getMonth() === date2.getMonth() &&\r\n            date1.getDate() === date2.getDate())\r\n            return true\r\n        return false\r\n    }\r\n\r\n    onDateChanged = (date) => {\r\n\r\n        let deliveryUpdateShow = this.state.deliveryUpdateShow;\r\n        deliveryUpdateShow.delivery.date = date;\r\n        this.setState({\r\n            deliveryUpdateShow: deliveryUpdateShow\r\n        })\r\n    }\r\n\r\n    onSupplierChange = (selected) => {\r\n        let deliveryUpdateShow = this.state.deliveryUpdateShow;\r\n        deliveryUpdateShow.delivery.supplierId = selected.value;\r\n        this.setState({\r\n            deliveryUpdateShow: deliveryUpdateShow\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.deliveryUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.deliveryUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"70%\", height:\"80%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateClickedInner(null)}>&times;</span>\r\n                    <h2>update delivery </h2>\r\n                    {this.state.deliveryUpdateShow.error && this.state.deliveryUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.deliveryUpdateShow.error}\r\n                        <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                            onClick={() => {\r\n                                let show = this.state.deliveryUpdateShow;\r\n                                show.error = '';\r\n                                this.setState({ deliveryUpdateShow: show })\r\n                            }}>\r\n                        </i>\r\n                    </div>}\r\n                    <h6 className={this.state.deliveryUpdateShow.error && this.state.deliveryUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number :</h6>\r\n                    <input value={this.state.deliveryUpdateShow.delivery.number} disabled />\r\n\r\n                    \r\n                    \r\n                    <h6 className=\"ml-5\">date :</h6>\r\n                    <div>\r\n                    <DatePicker\r\n                            className=\"form-control\"\r\n                            \r\n                        dateFormat=\"dd MMMM yyyy\"\r\n                        locale=\"en-GB\"\r\n                        //selected={(values.date && new Date(values.date))}\r\n                        selected={(this.state.deliveryUpdateShow.delivery.date && new Date(this.state.deliveryUpdateShow.delivery.date)) }\r\n                            onChange={date => {\r\n                                this.onDateChanged(date);\r\n                            //console.log(\"date changed = \" + date);\r\n                            //setFieldValue(\"date\", date)\r\n                            }} />\r\n                    </div>\r\n                    <h6 className=\"ml-5\">supplier :</h6>\r\n                    <CustomSelect\r\n\r\n                        items={this.state.suppliers}\r\n                        value={this.state.deliveryUpdateShow.delivery.supplierId}\r\n                        onChange={(selected) => this.onSupplierChange(selected)}\r\n                    />\r\n                   \r\n                    <button className=\"btn btn-mybtn px-5\" onClick={this.saveUpdated}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5\" onClick={() => this.props.updateClickedInner(null)}>Cancel</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryInnerComponent"]},"metadata":{},"sourceType":"module"}