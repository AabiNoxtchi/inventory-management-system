{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport '../myStyles/Style.css';\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\nimport Function from './Shared/Function';\n\nclass UserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePassword = () => {\n      this.setState({\n        changingpassword: this.state.changingpassword ? false : true\n      });\n    };\n\n    this.onFocus = event => {\n      console.log(\"on focus \");\n\n      if (event.target.autocomplete) {\n        event.target.autocomplete = \"whatever\";\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id || -1,\n      firstName: '',\n      lastName: '',\n      userName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      changingpassword: this.props.match.params.id > 0 ? false : true,\n      countries: null,\n      cities: null,\n      filteredcities: null,\n      countryId: null,\n      cityId: '',\n      register: null,\n      waitmsg: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    console.log(\"did mount user component\");\n    let userRole = this.getUserRole();\n\n    if (this.state.id == -1 && userRole === 'ROLE_Mol') {\n      return;\n    }\n\n    UserDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        firstName: response.data.firstName || '',\n        lastName: response.data.lastName || '',\n        userName: response.data.userName || '',\n        email: response.data.email || '',\n        countries: response.data.countries || null,\n        cities: response.data.cities || null,\n        filteredcities: response.data.countryId ? this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities || null,\n        countryId: response.data.countryId || null,\n        cityId: response.data.cityId + '' || ''\n      });\n    });\n  }\n\n  getUserRole() {\n    return AuthenticationService.getLoggedUerRole();\n  }\n\n  onSubmit(values, actions) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.userName,\n      email: values.email,\n      password: this.state.changingpassword ? values.password : null,\n      cityId: this.state.cities != null && values.newCity == null ? values.cityId : null,\n      newCity: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.newCity : null,\n      countryId: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? this.state.countryId : null,\n      targetDate: values.targetDate\n    };\n    UserDataService.save(user).then(response => {\n      if (response.data.refreshToken) {\n        AuthenticationService.setRegister(response.data);\n      } else if (typeof response.data == 'string') {\n        this.setState({\n          register: true,\n          waitmsg: response.data\n        });\n      }\n\n      if (!this.state.register) {\n        if ((this.getUserRole() == 'ROLE_Admin' || this.getUserRole() == 'ROLE_Mol') && this.state.id != AuthenticationService.getLoggedUerId) this.props.history.push('/users');else this.props.history.push('/home');\n      }\n    }).catch(error => {\n      let msg = Function.getErrorMsg(error);\n      if (msg.indexOf(\"email\") > -1) actions.setErrors({\n        email: msg\n      });\n      if (msg.indexOf(\"user name\") > -1) actions.setErrors({\n        userName: msg\n      });\n      if (msg.indexOf(\"Password\") > -1) actions.setErrors({\n        Password: msg\n      });\n      this.showError(msg);\n    });\n  }\n\n  showError(msg) {\n    let time = 10;\n    this.setState({\n      errormsg: msg\n    });\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        this.setState(() => ({\n          errormsg: null\n        }));\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.userName) {\n      errors.userName = 'required field !!!';\n    } else if (values.userName.length < 4) {\n      errors.userName = 'Enter at least 4 Characters';\n    }\n\n    if (!values.email) {\n      errors.email = 'required field !!!';\n    } else if (values.email.length < 4) {\n      errors.email = 'Enter at least 4 Characters';\n    }\n\n    if (this.state.id === -1 || this.state.changingpassword) {\n      if (!values.password) {\n        errors.password = 'required field !!!';\n      } else if (values.password.length < 6) {\n        errors.password = 'Enter at least 6 Characters';\n      } else if (values.password != values.confirmpassword) {\n        errors.confirmpassword = 'password and confirm password don\\'t match';\n      }\n    }\n\n    if (this.state.cities != null && this.getUserRole() != '' && (!values.cityId || values.cityId == 'undefined')) {\n      errors.cityId = 'required field !!!';\n    }\n\n    if (this.getUserRole() == '' && (!values.cityId || values.cityId == 'undefined') && (!values.newCity || values.newCity == 'undefined')) {\n      let error = \"either choose city or write your city name !!!\";\n      errors.cityId = \"either choose city or write your city name !!!\";\n      errors.newCity = \"either choose city or write your city name !!!\";\n    }\n\n    if (this.state.addnewCity && (!this.state.countryId || this.state.countryId == 'undefined')) {\n      errors.country = 'required field !!!';\n    }\n\n    if (values.newCity && values.newCity.length < 1) {\n      errors.newCity = 'too short !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  filterCities(subs, cities, value) {\n    if (!cities) return null;\n    if (!value || value == 'undefined') return cities;\n    subs = [];\n\n    for (let i = 0; i < cities.length; i++) {\n      if (cities[i].filterBy == value) {\n        subs.push(cities[i]);\n      }\n    }\n\n    return subs;\n  }\n\n  render() {\n    const userRole = this.getUserRole();\n    let {\n      id,\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      confirmpassword,\n      country,\n      cityId\n    } = this.state;\n    let newCity = null;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: [\" \", userRole == '' ? \"register \" : this.state.id > 0 && this.state.id == AuthenticationService.getLoggedUerId() ? \"update profile\" : this.state.id > 0 ? \"Update User\" : \"Add New User\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 17\n      }, this), this.state.register && this.state.waitmsg && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.waitmsg\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 25\n        }, this)\n      }, void 0, false), this.state.register == null && /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          userName,\n          email,\n          password,\n          confirmpassword,\n          newCity,\n          country,\n          cityId\n        },\n        onSubmit: (values, actions) => this.onSubmit(values, actions),\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values,\n          dirty,\n          errors\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"d-flex flex-wrap\",\n          children: [this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            style: {\n              width: \"100%\"\n            },\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 61\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w50\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control\",\n              type: \"text\",\n              name: \"id\",\n              hidden: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"first name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 224,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"firstName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"firstName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"user name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control \",\n                type: \"text\",\n                name: \"userName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"userName\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 230,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"email\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"email\",\n                name: \"email\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"email\",\n                component: \"div\",\n                className: \"alert alert-warning \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 241,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w100\",\n              children: this.state.countries && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"inline form-group pl-0 w70\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: this.state.addnewCity ? \"required-field\" : \"\",\n                  children: \"country\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  className: \"\",\n                  items: this.state.countries,\n                  value: this.state.countryId || '',\n                  onChange: selected => {\n                    let subs = this.state.filteredcities;\n                    subs = this.filterCities(subs, this.state.cities, selected.value);\n                    this.setState({\n                      countryId: selected.value,\n                      filteredcities: subs\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"country\",\n                  component: \"div\",\n                  className: \"alert alert-warning w70\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 261,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 49\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w100\",\n              children: [!this.state.addnewCity && this.state.cities && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"inline form-group w70 pl-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"city\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  className: \"\",\n                  items: this.state.filteredcities || this.state.cities,\n                  value: values.cityId || '',\n                  onChange: selected => setFieldValue(\"cityId\", selected.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 270,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"cityId\",\n                  component: \"div\",\n                  className: \"alert alert-warning \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 49\n              }, this), this.state.addnewCity && /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"inline form-group w70 pl-0\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"city name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 282,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  style: {\n                    fontSize: \"60%\"\n                  },\n                  children: [\"if you can't find your city, please write it down,\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 284,\n                    columnNumber: 111\n                  }, this), \"you can relate to any major city near you as long as it's in the same time zone\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 285,\n                    columnNumber: 140\n                  }, this), \"to make your calculations accurate, Thank you.\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 286,\n                    columnNumber: 107\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 283,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control \",\n                  type: \"text\",\n                  name: \"newCity\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 288,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"newCity\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 281,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"w100\",\n              children: [this.state.cities && userRole == '' && !this.state.addnewCity && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn\",\n                type: \"button\",\n                onClick: () => this.setState({\n                  addnewCity: true\n                }),\n                children: \"new city\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 297,\n                columnNumber: 49\n              }, this), this.state.cities && userRole == '' && this.state.addnewCity && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn\",\n                type: \"button\",\n                onClick: () => {\n                  this.setState({\n                    addnewCity: false\n                  });\n                  setFieldValue(\"newCity\", null);\n                },\n                children: \"back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group mt-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn p-x-5\",\n                type: \"submit\",\n                disabled: !dirty,\n                children: this.state.id > 0 ? \"Save\" : \"Submit\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 303,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w-50 \",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group w90\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"last name\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control\",\n                type: \"text\",\n                name: \"lastName\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"lastName\",\n                component: \"div\",\n                className: \"alert alert-warning\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 312,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 41\n            }, this), this.state.id > 0 && !this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-5 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"change password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 45\n            }, this), this.state.id > 0 && this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mt-5 mb-3  d-flex\",\n              onClick: this.changePassword,\n              children: \"leave password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 45\n            }, this), (this.state.id < 1 || this.state.changingpassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 322,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control \",\n                  type: \"password\",\n                  name: \"password\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 323,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"alert alert-warning \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 325,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 321,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n                className: \"form-group w90\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: \"confirm password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 329,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  className: \"form-control\",\n                  type: \"password\",\n                  name: \"confirmpassword\",\n                  autoComplete: \"new-password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 330,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"confirmpassword\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 53\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 328,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 33\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","AuthenticationService","CustomSelect","Function","UserComponent","constructor","props","changePassword","setState","changingpassword","state","onFocus","event","console","log","target","autocomplete","id","match","params","firstName","lastName","userName","email","password","confirmpassword","countries","cities","filteredcities","countryId","cityId","register","waitmsg","onSubmit","bind","validate","cancelForm","componentDidMount","userRole","getUserRole","retrieve","then","response","data","filterCities","getLoggedUerRole","values","actions","user","username","newCity","targetDate","save","refreshToken","setRegister","getLoggedUerId","history","push","catch","error","msg","getErrorMsg","indexOf","setErrors","Password","showError","time","errormsg","myInterval","setInterval","clearInterval","componentWillUnmount","errors","length","addnewCity","country","window","back","subs","value","i","filterBy","render","setFieldValue","dirty","width","selected","fontSize"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserDataService from '../service/UserDataService';\r\nimport '../myStyles/Style.css';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport Function from './Shared/Function'\r\n\r\n\r\nclass UserComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id || -1,\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            changingpassword: this.props.match.params.id > 0 ? false : true,\r\n            countries: null,\r\n            cities: null,\r\n            filteredcities: null,\r\n            countryId: null,\r\n            cityId: '',\r\n            register: null,\r\n            waitmsg: null\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        console.log(\"did mount user component\");\r\n        let userRole = this.getUserRole();       \r\n        if ((this.state.id == -1 && userRole === 'ROLE_Mol')) { \r\n            return\r\n        }\r\n        UserDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                this.setState({\r\n                    firstName: response.data.firstName||'',\r\n                    lastName: response.data.lastName||'',\r\n                    userName: response.data.userName||'',\r\n                    email: response.data.email||'',\r\n                    countries: response.data.countries || null,\r\n                    cities:  response.data.cities || null,\r\n                    filteredcities:  response.data.countryId ? \r\n                        this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities || null,\r\n                    countryId: response.data.countryId || null,\r\n                    cityId:  response.data.cityId+'' || ''\r\n                })\r\n            })\r\n    }\r\n\r\n    getUserRole() {\r\n        return AuthenticationService.getLoggedUerRole();\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.userName,\r\n            email: values.email,\r\n            password: this.state.changingpassword ? values.password : null,\r\n            cityId:this.state.cities != null && values.newCity == null ? values.cityId : null,\r\n            newCity: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? values.newCity : null,\r\n            countryId: this.state.cities != null && values.newCity && values.newCity != 'undefined' ? this.state.countryId : null,\r\n            targetDate: values.targetDate\r\n        }\r\n        UserDataService.save(user)\r\n            .then((response) => {\r\n                if (response.data.refreshToken) {\r\n                    AuthenticationService.setRegister(response.data);\r\n                } else if (typeof response.data == 'string') {\r\n                    this.setState({\r\n                        register: true,\r\n                        waitmsg : response.data\r\n                    })\r\n                }\r\n                if (!this.state.register) {\r\n                    if ((this.getUserRole() == 'ROLE_Admin' || this.getUserRole() == 'ROLE_Mol') && this.state.id != AuthenticationService.getLoggedUerId)\r\n                        this.props.history.push('/users');\r\n                    else this.props.history.push('/home')\r\n                }\r\n        }).catch(error => {               \r\n                    let msg = Function.getErrorMsg(error);\r\n                    if (msg.indexOf(\"email\") > -1)\r\n                        actions.setErrors({ email: msg })\r\n                    if (msg.indexOf(\"user name\") > -1)\r\n                        actions.setErrors({ userName: msg })\r\n                    if (msg.indexOf(\"Password\") > -1)\r\n                        actions.setErrors({ Password: msg })\r\n                    this.showError(msg);\r\n        })\r\n    }\r\n   \r\n    showError(msg) {\r\n        let time = 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })\r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                this.setState(() => ({\r\n                    errormsg: null\r\n                }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    validate(values) {       \r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'required field !!!'\r\n        } else if (values.userName.length < 4) {\r\n            errors.userName = 'Enter at least 4 Characters'\r\n        }\r\n        if (!values.email) {\r\n            errors.email = 'required field !!!'\r\n        } else if (values.email.length < 4) {\r\n            errors.email = 'Enter at least 4 Characters'\r\n        }\r\n        if (this.state.id === -1 || this.state.changingpassword) {\r\n            if (!values.password) {\r\n                errors.password = 'required field !!!'\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Enter at least 6 Characters'\r\n            } else if (values.password != values.confirmpassword) {\r\n                errors.confirmpassword='password and confirm password don\\'t match'\r\n            }\r\n        }\r\n        if (this.state.cities != null && this.getUserRole() != '' && (!values.cityId || values.cityId == 'undefined')) {\r\n            errors.cityId = 'required field !!!'           \r\n        }\r\n        if (this.getUserRole() == '' && (!values.cityId || values.cityId == 'undefined') &&\r\n            (!values.newCity || values.newCity == 'undefined')) {\r\n            let error = \"either choose city or write your city name !!!\";\r\n            errors.cityId = \"either choose city or write your city name !!!\";\r\n            errors.newCity = \"either choose city or write your city name !!!\";\r\n        }\r\n\r\n        if (this.state.addnewCity && (!this.state.countryId || this.state.countryId == 'undefined')) {\r\n            errors.country = 'required field !!!'\r\n        }\r\n\r\n        if (values.newCity && values.newCity.length < 1) {\r\n            errors.newCity = 'too short !!!'\r\n        }\r\n        return errors\r\n    }\r\n\r\n   cancelForm() {\r\n       window.history.back();\r\n    }\r\n\r\n    changePassword = () => {\r\n        this.setState({\r\n            changingpassword: this.state.changingpassword ? false : true\r\n        })\r\n    }\r\n\r\n    onFocus = event => {\r\n        console.log(\"on focus \");\r\n\r\n        if (event.target.autocomplete) {\r\n            event.target.autocomplete = \"whatever\";\r\n        }\r\n    }\r\n\r\n    filterCities(subs, cities, value) {\r\n        if (!cities) return null;\r\n        if (!value || value == 'undefined') return cities;\r\n        subs = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n            if (cities[i].filterBy == value) {\r\n                subs.push(cities[i])\r\n            }\r\n        }\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n        const userRole = this.getUserRole();\r\n        let { id, firstName, lastName, userName, email, password, confirmpassword, country, cityId } = this.state\r\n        let newCity = null;\r\n        return (\r\n            <div className=\"container pt-5\">\r\n                <h3 className=\"mb-3\"> {\r\n                    userRole == '' ? \"register \" :\r\n                    this.state.id > 0 && this.state.id == AuthenticationService.getLoggedUerId() ?  \"update profile\" :\r\n                            this.state.id > 0 ? \"Update User\" : \"Add New User\"}</h3>\r\n                {this.state.register && this.state.waitmsg && \r\n                    <>\r\n                        <p>{this.state.waitmsg}</p>\r\n                    </>}\r\n                {this.state.register == null &&\r\n                    <Formik\r\n                        initialValues={{ id, firstName, lastName, userName, email, password, confirmpassword, newCity, country, cityId }}\r\n                        onSubmit={(values, actions) => this.onSubmit(values, actions)}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                    {({ setFieldValue, values, dirty, errors }) => (\r\n                                <Form className=\"d-flex flex-wrap\">\r\n                                    {this.state.errormsg && <div className=\"alert alert-warning\" style={{ width: \"100%\" }}>{this.state.errormsg}</div>}\r\n                                   \r\n                                    <div className=\"inline w50\">\r\n                                        <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n\r\n                                        <fieldset className=\"form-group w90\">\r\n                                            <label>first name</label>\r\n                                            <Field className=\"form-control\" type=\"text\" name=\"firstName\"\r\n                                                autoComplete=\"new-password\" />\r\n                                            <ErrorMessage name=\"firstName\" component=\"div\"\r\n                                                className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group w90\">\r\n                                            <label className=\"required-field\">user name</label>\r\n                                            <Field className=\"form-control \" type=\"text\" name=\"userName\"\r\n                                                autoComplete=\"new-password\" />\r\n                                            <ErrorMessage name=\"userName\" component=\"div\"\r\n                                                className=\"alert alert-warning \" />\r\n                                        </fieldset>\r\n                                        <fieldset className=\"form-group w90\">\r\n                                            <label className=\"required-field\">email</label>\r\n                                            <Field className=\"form-control\" type=\"email\" name=\"email\"\r\n                                                autoComplete=\"new-password\" />\r\n                                            <ErrorMessage name=\"email\" component=\"div\"\r\n                                                className=\"alert alert-warning \" />\r\n                                        </fieldset>\r\n                                        <div className=\"w100\">\r\n                                            {this.state.countries &&\r\n                                                <fieldset className=\"inline form-group pl-0 w70\">\r\n                                                    <label className={this.state.addnewCity ? \"required-field\" : \"\"}>country&nbsp;</label>\r\n                                                    <CustomSelect\r\n                                                        className={\"\"}\r\n                                                        items={this.state.countries}\r\n                                                        value={this.state.countryId || ''}                                                       \r\n                                                        onChange={(selected) => {\r\n                                                            let subs = this.state.filteredcities;\r\n                                                            subs = this.filterCities(subs, this.state.cities, selected.value);                                                          \r\n                                                            this.setState({\r\n                                                                countryId: selected.value,\r\n                                                                filteredcities: subs\r\n                                                            })\r\n                                                        }}\r\n                                                    />\r\n                                                    <ErrorMessage name=\"country\" component=\"div\"\r\n                                                        className=\"alert alert-warning w70\" />\r\n                                                </fieldset>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w100\">\r\n                                            {!this.state.addnewCity &&this.state.cities &&\r\n                                                <fieldset className=\"inline form-group w70 pl-0\">\r\n                                                    <label className=\"required-field\">city</label>\r\n                                                    <CustomSelect\r\n                                                        className={\"\"}\r\n                                                        items={this.state.filteredcities || this.state.cities}\r\n                                                        value={values.cityId || ''}\r\n                                                        onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                                    />\r\n                                                    <ErrorMessage name=\"cityId\" component=\"div\"\r\n                                                        className=\"alert alert-warning \" />\r\n                                                </fieldset>\r\n                                            }\r\n                                            {this.state.addnewCity &&\r\n                                                <fieldset className=\"inline form-group w70 pl-0\">\r\n                                                <label className=\"required-field\">city name</label>\r\n                                                <p style={{ fontSize: \"60%\" }}>\r\n                                                            if you can't find your city, please write it down,<br />\r\n                                                            you can relate to any major city near you as long as it's in the same time zone<br />\r\n                                                            to make your calculations accurate, Thank you.<br />\r\n                                                        </p>\r\n                                                    <Field className=\"form-control \" type=\"text\" name=\"newCity\"\r\n                                                        autoComplete=\"new-password\" />\r\n                                                    <ErrorMessage name=\"newCity\" component=\"div\"\r\n                                                        className=\"alert alert-warning\" />\r\n                                                </fieldset>\r\n                                            }\r\n                                        </div>\r\n                                        <div className=\"w100\">\r\n                                            {this.state.cities && userRole == '' && !this.state.addnewCity &&\r\n                                                <button className=\"btn btn-mybtn\" type=\"button\" onClick={() => this.setState({ addnewCity: true })}>new city</button>}\r\n                                            {this.state.cities && userRole == '' && this.state.addnewCity &&\r\n                                                <button className=\"btn btn-mybtn\" type=\"button\"\r\n                                                    onClick={() => { this.setState({ addnewCity: false }); setFieldValue(\"newCity\", null) }}>back</button>}\r\n                                        </div>\r\n                                    <fieldset className=\"form-group mt-5\">\r\n                                    <button className=\"btn btn-mybtn p-x-5\" type=\"submit\" disabled={!dirty}>{this.state.id > 0 ? \"Save\" : \"Submit\"}</button>\r\n                                            <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                        </fieldset>\r\n                                    </div>\r\n                                    <div className=\"inline w-50 \">\r\n                                        <fieldset className=\"form-group w90\">\r\n                                            <label>last name</label>\r\n                                            <Field className=\"form-control\" type=\"text\" name=\"lastName\"\r\n                                                autoComplete=\"new-password\" />\r\n                                            <ErrorMessage name=\"lastName\" component=\"div\"\r\n                                                className=\"alert alert-warning\" />\r\n                                        </fieldset>\r\n                                        {(this.state.id > 0 && !this.state.changingpassword) &&\r\n                                            <button className=\"btn btn-mybtn mt-5 mb-3  d-flex\" onClick={this.changePassword}>change password</button>}\r\n                                        {(this.state.id > 0 && this.state.changingpassword) &&\r\n                                            <button className=\"btn btn-mybtn mt-5 mb-3  d-flex\" onClick={this.changePassword}>leave password</button>}\r\n                                        {(this.state.id < 1 || this.state.changingpassword) &&\r\n                                            <div>\r\n                                                <fieldset className=\"form-group w90\">\r\n                                                    <label className=\"required-field\">password</label>\r\n                                                    <Field className=\"form-control \" type=\"password\" name=\"password\"\r\n                                                        autoComplete=\"new-password\" />\r\n                                                    <ErrorMessage name=\"password\" component=\"div\"\r\n                                                        className=\"alert alert-warning \" />\r\n                                                </fieldset>\r\n                                                <fieldset className=\"form-group w90\">\r\n                                                    <label className=\"required-field\">confirm password</label>\r\n                                                    <Field className=\"form-control\" type=\"password\" name=\"confirmpassword\"\r\n                                                        autoComplete=\"new-password\" />\r\n                                                    <ErrorMessage name=\"confirmpassword\" component=\"div\"\r\n                                                        className=\"alert alert-warning\" />\r\n                                                </fieldset>\r\n                                            </div>\r\n                                        }\r\n                                    </div>                                   \r\n                                </Form>\r\n                            )}\r\n                    </Formik>}\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}