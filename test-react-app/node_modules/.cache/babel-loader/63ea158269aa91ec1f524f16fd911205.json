{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { Component } from 'react';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport authHeader from '../service/AuthHeader';\n\nclass EventListner extends Component {\n  constructor(props) {\n    super(props); // ... super, state, and columns ...\n    //this.eventSource = new EventSource(, { withCredentials: true });\n    // let EventSource = EventSourcePolyfill;\n    // this.eventSource = new EventSourcePolyfill(`http://localhost:8080/api/inventory/manager/subscribe`, {\n    //   headers: authHeader()\n    //});\n\n    this.eventSource = new EventSource(\"http://localhost:8080/api/inventory/manager/subscribe\");\n  }\n\n  componentDidMount() {\n    //this.eventSource.onmessage = e => { console.log(\"msg from sse = \"); }\n    this.eventSource.onmessage = e => console.log(\"msg from sse = \"); //this.updateFlightState(JSON.parse(e.data));\n\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default EventListner;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/EventListner.jsx"],"names":["React","Component","EventSourcePolyfill","authHeader","EventListner","constructor","props","eventSource","EventSource","componentDidMount","onmessage","e","console","log","render"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAEjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AAEA;AACD;AACA;AACE;AACD;;AACA,SAAKC,WAAL,GAAmB,IAAIC,WAAJ,CAAgB,uDAAhB,CAAnB;AACH;;AAIDC,EAAAA,iBAAiB,GAAG;AAEjB;AACC,SAAKF,WAAL,CAAiBG,SAAjB,GAA6BC,CAAC,IAC1BC,OAAO,CAACC,GAAR,CAAY,iBAAZ,CADJ,CAHgB,CAImB;;AACtC;;AAGDC,EAAAA,MAAM,GAAG;AAML,wBAEI,qCAFJ;AAKH;;AAnCgC;;AAsCrC,eAAeV,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { EventSourcePolyfill } from 'event-source-polyfill';\r\nimport authHeader from '../service/AuthHeader';\r\n\r\nclass EventListner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // ... super, state, and columns ...\r\n\r\n        //this.eventSource = new EventSource(, { withCredentials: true });\r\n       // let EventSource = EventSourcePolyfill;\r\n       // this.eventSource = new EventSourcePolyfill(`http://localhost:8080/api/inventory/manager/subscribe`, {\r\n         //   headers: authHeader()\r\n        //});\r\n        this.eventSource = new EventSource(\"http://localhost:8080/api/inventory/manager/subscribe\");\r\n    }\r\n\r\n   \r\n\r\n    componentDidMount() {\r\n\r\n       //this.eventSource.onmessage = e => { console.log(\"msg from sse = \"); }\r\n        this.eventSource.onmessage = e =>\r\n            console.log(\"msg from sse = \");//this.updateFlightState(JSON.parse(e.data));\r\n    }\r\n       \r\n\r\n    render() {\r\n       \r\n            \r\n\r\n           \r\n        \r\n        return (\r\n            \r\n            <>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default EventListner"]},"metadata":{},"sourceType":"module"}