{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserProfileInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport UserProfileDataService from '../service/UserProfileDataService';\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport Function from './Shared/Function';\n\nclass UserProfileInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdated = () => {\n      let pdlist = this.state.selectedPds;\n      let show = this.state.profileShow;\n      let withUser = this.state.withUser;\n      let item = show.profile;\n      let x = this.state.profileShow.x;\n      let original = x != null ? this.state.items[x] : null;\n\n      if (x == null && withUser && pdlist.length < 1) {\n        show.error = 'must at least select 1 inventory !!!';\n        this.setState({\n          profileShow: show\n        });\n      } else if (!item.userId || item.userId == 'undefined') {\n        show.error = 'user not selected !!!';\n        this.setState({\n          profileShow: show\n        });\n      } else if (x == null && !withUser && (!item.inventoryNumber || item.inventoryNumber == \"undefined\" || item.inventoryNumber.trim().length < 1)) {\n        show.error = \"inventory not selected !!!\";\n        this.setState({\n          profileShow: show\n        });\n      } else if (!withUser && x != null && original == null) {\n        show.error = \"original item not found !!!\";\n        this.setState({\n          profileShow: show\n        });\n      } else if (x != null && original.userId == item.userId && original.productDetailId == item.productDetailId && (!item.profileDetail && !original.profileDetail || item.profileDetail && (item.paidPlus == 0 || item.paidPlus == undefined))) {\n        show.error = \"item hasn't changed !!!\";\n        this.setState({\n          profileShow: show\n        });\n      } else {\n        let date = item.givenAt && new Date(item.givenAt) || new Date();\n        date.setHours(date.getHours() - date.getTimezoneOffset() / 60);\n        item.givenAt = date;\n\n        if (x == null && withUser) {\n          let ids = [];\n          pdlist.map(pd => ids.push(pd.value));\n          item.productDetailIds = ids;\n        }\n\n        UserProfileDataService.save(item).then(response => {\n          let msg = pdlist && pdlist.length > 0 ? '' + pdlist.length + ' items have been given to ' + this.state.profileShow.profile.userName + \"'s \" : this.state.profileShow.profile.userName + \"'s profile has been updated successfully \";\n          this.props.updateClicked();\n          this.props.refresh();\n          this.props.setMessage(msg);\n        }).catch(error => {\n          let msg = Function.getErrorMsg(error);\n          show.error = 'error : ' + msg;\n          this.setState({\n            profileShow: show\n          });\n          this.showError();\n        });\n      }\n    };\n\n    this.onProductChange = selected => {\n      this.setState({\n        selectedProductId: selected.value\n      });\n      this.getNewSearch('productId', selected.value);\n    };\n\n    this.getNewSearch = (name, value) => {\n      let search = this.state.lastSearch;\n      let newPath = ``;\n\n      if (search.length > 1) {\n        while (search.charAt(0) === '?') {\n          search = search.substring(1);\n        }\n\n        let searchItems = search.split('&');\n\n        for (let i = 0; i < searchItems.length; i++) {\n          if (!searchItems[i].startsWith(name)) newPath += searchItems[i] + '&';\n        }\n      }\n\n      if (value && value != 'undefined') newPath += name + '=' + value;else {\n        if (name == 'notIn') {\n          let ids = '';\n          this.state.selectedPds.map(pd => ids += pd.value + ',');\n          ids = ids.substring(0, ids.length - 1);\n          newPath += name + '=' + ids;\n        } else newPath = newPath.substring(0, newPath.length - 1);\n      }\n      newPath = '?' + newPath;\n      this.setState({\n        lastSearch: newPath\n      });\n      this.refresh(newPath);\n    };\n\n    this.oninventoryAdd = selected => {\n      if (selected == null) return;\n      if (selected.name == '') return;\n\n      if (this.state.profileShow.x == null && this.state.withUser) {\n        let selectedPds = this.state.selectedPds;\n        selectedPds.push({\n          name: selected.label,\n          value: selected.value\n        });\n        this.setState({\n          selectedPds: selectedPds\n        });\n        this.getNewSearch('notIn');\n      } else {\n        let up = this.state.profileShow;\n        up.profile.inventoryNumber = selected.label;\n        up.profile.productDetailId = selected.value;\n        this.setState({\n          profileShow: up,\n          changedPd: true\n        });\n      }\n    };\n\n    this.onFilterDateChange = date => {\n      if (this.isDateEqual(this.state.selectedDate, date)) return;\n\n      if (date) {\n        date = date.toISOString();\n        date = date.substring(0, date.indexOf('T'));\n      }\n\n      this.setState({\n        selectedDate: date\n      });\n      this.getNewSearch('dateCreatedAfter', date);\n    };\n\n    this.onDateGivenChange = date => {\n      let profileShow = this.state.profileShow;\n      profileShow.profile.givenAt = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.onDateReturnedChange = date => {\n      let profileShow = this.state.profileShow;\n      profileShow.profile.returnedAt = date;\n      this.setState({\n        profileShow: profileShow\n      });\n    };\n\n    this.isDateEqual = (date1, date2) => {\n      if (date1 == date2) return true;else {\n        date1 = new Date(date1);\n        date2 = new Date(date2);\n        if (date1.getFullYear() === date2.getFullYear() && date1.getMonth() === date2.getMonth() && date1.getDate() === date2.getDate()) return true;\n      }\n      return false;\n    };\n\n    this.state = {\n      profileShow: props.profileShow,\n      items: props.items,\n      message: props.message,\n      filter: props.filter,\n      filteredNumbers: [],\n      lastSearch: '?freeInventory=true&isDiscarded=false&econdition=Available',\n      selectedDate: null,\n      filteredcount: '',\n      selectedPds: [],\n      changedPd: null,\n      ChangedUser: null,\n      freeInventory: true,\n      notDiscarded: true,\n      available: true,\n      withUser: !(props.filter.userId == null || props.filter.userId == undefined || props.filter.userId == 'undefined')\n    };\n    this.refresh = this.refresh.bind(this);\n  }\n\n  componentDidMount() {\n    if (this.state.profileShow.x) return;\n    ProductDetailDataService.retrieveAllNumbers(this.state.lastSearch).then(response => {\n      this.setState({\n        filteredNumbers: response.data,\n        filteredcount: response.data.length\n      });\n\n      if (this.state.profileShow.x == null && this.state.filter.productDetailId) {\n        let selected = this.getFilteredInventoty();\n        if (selected == null || selected == 'undefined') return;\n        let show = this.state.profileShow;\n        show.profile.inventoryNumber = selected ? selected.name : '';\n        show.profile.productDetailId = selected ? selected.value : null;\n        this.setState({\n          profileShow: show\n        });\n      }\n    }).catch(() => {});\n  }\n\n  getFilteredInventoty() {\n    //original\n    let filteredInventory = this.state.filter.productDetailId && this.state.filteredNumbers.length > 0 ? this.state.filteredNumbers.find(f => f.value == this.state.filter.productDetailId) : null;\n    return filteredInventory;\n  }\n\n  getFilteredUser() {\n    //original\n    let x = this.state.profileShow.x;\n    let filteredUser = x != null ? {\n      \"value\": this.state.items[x].userId,\n      \"label\": this.state.items[x].userName\n    } : this.state.filter.userId ? this.state.filter.userNames.find(n => n.value == this.state.filter.userId) : null;\n    return filteredUser;\n  }\n\n  refresh(search) {\n    ProductDetailDataService.retrieveAllNumbers(search).then(response => {\n      this.setState({\n        filteredNumbers: response.data,\n        filteredcount: response.data.length\n      });\n    }).catch(() => {});\n  }\n\n  showError(msg) {\n    let time = 8;\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        let show = this.state.profileShow;\n        show.error = null;\n        this.setState({\n          profileShow: show\n        });\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  onFilterfreeInventoryChange(value) {\n    let freeInventory = this.state.freeInventory;\n    freeInventory = !freeInventory;\n    this.setState({\n      freeInventory: freeInventory\n    });\n    this.getNewSearch('freeInventory', value.target.value);\n  }\n\n  onFilteravailableChange(value) {\n    let available = this.state.available;\n    this.setState({\n      available: !available\n    });\n    this.getNewSearch('isAvailable', value.target.value);\n  }\n\n  onFilternotDiscardedChange(value) {\n    let discarded = this.state.notDiscarded;\n    this.setState({\n      notDiscarded: !discarded\n    });\n    this.getNewSearch('isDiscarded', value.target.value);\n  }\n\n  onUserChange(selected) {\n    let up = this.state.profileShow;\n    let x = up.x;\n\n    if (x == null || x < 0) {\n      let found = this.state.filter.userNames.find(n => n.value == selected.value);\n\n      if (found && found.filterBy) {\n        up.error = \"user is deleted, can't assign him new inventories !!! \";\n        this.setState({\n          profileShow: up\n        });\n        this.showError();\n        return;\n      }\n    }\n\n    up.profile.userName = selected.label;\n    up.profile.userId = selected.value;\n    this.setState({\n      profileShow: up,\n      changedUser: true\n    });\n  }\n\n  returnOriginalPd() {\n    let up = this.state.profileShow;\n    let original = this.getFilteredInventoty();\n    up.profile.inventoryNumber = original == null ? '' : original.name;\n    up.profile.productDetailId = original == null ? null : original.value;\n    this.setState({\n      profileShow: up,\n      changedPd: null\n    });\n  }\n\n  returnOriginalUser() {\n    let up = this.state.profileShow;\n    let original = this.getFilteredUser();\n    up.profile.userId = original == null ? null : original.value;\n    up.profile.userName = original == null ? '...' : original.label;\n    this.setState({\n      profileShow: up,\n      changedUser: null\n    });\n  }\n\n  oninventoryRemove(i) {\n    let selectedPds = this.state.selectedPds;\n    selectedPds.splice(i, 1);\n    this.setState({\n      selectedPds: selectedPds\n    });\n    this.getNewSearch('notIn');\n  }\n\n  render() {\n    let height = this.state.profileShow.x == null ? \"70%\" : this.state.profileShow.profile.profileDetail ? \"65%\" : \"52%\";\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.profileShow.show ? \"modal d-block \" : \"d-none\",\n        style: {\n          width: \"80%\",\n          height: height,\n          overflow: \"visible\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"\",\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            class: \"close pt-2\",\n            onClick: () => this.props.updateClicked(null),\n            children: \"\\xD7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"inline pt-3 pl-3 pb-1\",\n            children: [this.state.profileShow.x != null ? 'Update ' : 'Add ', \"profile \\u2003(\", this.state.profileShow.profile.userName, \")\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 325,\n            columnNumber: 25\n          }, this), this.state.profileShow.x == null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline pull-right mt-5 mr-5 move-top top-c\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mr-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"m-0\",\n                  type: \"radio\",\n                  value: !this.state.freeInventory,\n                  checked: this.state.freeInventory\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 331,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"80%\",\n                    paddingLeft: \"3px\",\n                    marginRight: \"10px\"\n                  },\n                  children: \"free inventory\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 334,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 330,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"m-0\",\n                  type: \"radio\",\n                  value: !this.state.available,\n                  checked: this.state.available\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 336,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"80%\",\n                    paddingLeft: \"3px\",\n                    marginRight: \"10px\"\n                  },\n                  children: \"available\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 339,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 335,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mr-5\",\n                children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"m-0\",\n                  type: \"radio\",\n                  value: !this.state.notDiscarded,\n                  checked: this.state.notDiscarded\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontSize: \"80%\",\n                    paddingLeft: \"3px\",\n                    marginRight: \"10px\"\n                  },\n                  children: \"not discarded\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 344,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 340,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 21\n        }, this), this.state.profileShow.x == null && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mt-0 inline w100\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border pt-1 b-r r-c foo\",\n            children: [\" \", /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"move-top top-l\",\n              style: {\n                fontSize: \"80%\"\n              },\n              children: \"filter for inventory select\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40 pr-1\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"ml-1 pl-1\",\n                children: \"product \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 354,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filter.productNames,\n                value: this.state.selectedProductId,\n                onChange: selected => this.onProductChange(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 353,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w20\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"ml-1 pl-1\",\n                children: \"created after\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 363,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline w100\",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control w100 p-2 ml-0\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: new Date(),\n                  isClearable: true,\n                  placeholderText: \"...\",\n                  selected: this.state.selectedDate && new Date(this.state.selectedDate) || null,\n                  onChange: selected => {\n                    this.onFilterDateChange(selected);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 365,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 364,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 362,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"move-top top-r\",\n              style: {\n                fontSize: \"80%\"\n              },\n              children: [\" \", this.state.filteredcount, \" items found\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 378,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline w40\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"inline ml-1 pl-1\",\n                children: \"select inventory\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 380,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline w100 ml-0\",\n                items: this.state.filteredNumbers,\n                onChange: selected => this.oninventoryAdd(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 381,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 379,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 351,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 350,\n          columnNumber: 25\n        }, this), this.state.profileShow.error && this.state.profileShow.error.length > 1 &&\n        /*#__PURE__*/\n        // error div\n        _jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex mx-1\",\n          children: [this.state.profileShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.profileShow;\n              show.error = '';\n              this.setState({\n                profileShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: this.state.profileShow.error && this.state.profileShow.error.length > 1 ? \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w40 m-0 \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 pl-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date given \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 410,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5 p-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n                  minDate: this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n                  selected: this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt) || new Date(),\n                  onChange: date => {\n                    this.onDateGivenChange(date);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 412,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 411,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 409,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline m-0 px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n                children: \"date returned \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 430,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5 p-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  disabled: true,\n                  selected: this.state.profileShow.x != null && new Date(this.state.profileShow.profile.returnedAt) || null\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 431,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 429,\n              columnNumber: 29\n            }, this), this.state.profileShow.x == null && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"mt-5 d-flex align-items-center\",\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn p-x-5 mt-0\",\n                  onClick: this.saveUpdated,\n                  children: \"Save\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 446,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete px-5 mt-0\",\n                  onClick: () => this.props.updateClicked(null),\n                  children: \"Cancel\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 447,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 445,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"80%\"\n                },\n                children: \" ps : changing date will change previous records as well and may cause lose of data \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 449,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 25\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w60\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"required-field ml-0\",\n              children: \"selected inventory \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 457,\n              columnNumber: 29\n            }, this), this.state.profileShow.x == null && this.state.withUser && this.state.selectedPds && this.state.selectedPds.map((pd, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: [i + 1, \"\\xA0\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 461,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                value: pd.name,\n                className: \"form-control inline w80 m-0 ml-1 p-2 pl-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete m-0 ml-1\",\n                type: \"button\",\n                onClick: () => {\n                  this.oninventoryRemove(i);\n                },\n                children: /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-close ml-auto\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 48\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 464,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 460,\n              columnNumber: 33\n            }, this)), (!this.state.withUser || this.state.profileShow.x != null) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                value: this.state.profileShow.profile.inventoryNumber || '',\n                className: \"form-control inline w90 m-0 p-2 pl-3\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 473,\n                columnNumber: 33\n              }, this), this.state.changedPd && /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-undo ml-1\",\n                onClick: () => {\n                  this.returnOriginalPd();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 474,\n                columnNumber: 60\n              }, this), this.state.profileShow.x == null && /*#__PURE__*/_jsxDEV(\"p\", {\n                style: {\n                  fontSize: \"70%\"\n                },\n                children: \" ps : selecting inventory from filter will change current inventory \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n                className: \"mt-1 ml-0 required-field\",\n                children: \"select user \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 478,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"b-r inline w80 m-0 p-0\",\n                items: this.props.usersToGive,\n                value: this.state.profileShow.profile.userId,\n                onChange: selected => this.onUserChange(selected)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 479,\n                columnNumber: 33\n              }, this), this.state.changedUser && /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-undo ml-1\",\n                onClick: () => {\n                  this.returnOriginalUser();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 484,\n                columnNumber: 62\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 455,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 404,\n          columnNumber: 21\n        }, this), this.state.profileShow.x != null && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [this.state.profileShow.profile.profileDetail != null && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 px-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"owings :\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 496,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-flex alighn-items-top\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w20\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"created at : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.profileShow.profile.profileDetail.createdAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 499,\n                  columnNumber: 61\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 498,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w20\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"modified at : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: this.state.profileShow.profile.profileDetail.modifiedAt\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 502,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 501,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w20\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"owed amount : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(this.state.profileShow.profile.profileDetail.owedAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 505,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 504,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w20\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"paid amount : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(this.state.profileShow.profile.profileDetail.paidAmount)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 512,\n                  columnNumber: 62\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 511,\n                columnNumber: 37\n              }, this), !this.state.profileShow.profile.profileDetail.cleared && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w20 d-flex alighn-items-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  children: \"paid plus : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 520,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"inline m-0 ml-2 p-1 form-control px100\",\n                  min: \"0\",\n                  max: this.state.profileShow.profile.profileDetail.owedAmount - this.state.profileShow.profile.profileDetail.paidAmount,\n                  value: this.state.profileShow.profile.paidPlus,\n                  onChange: value => {\n                    let amount = value.target.value;\n                    let owed = (this.state.profileShow.profile.profileDetail.owedAmount - this.state.profileShow.profile.profileDetail.paidAmount).toFixed(2); //debugger\n\n                    if (Number(amount) > Number(owed)) amount = owed;else if (amount <= 0) amount = \"\";\n                    let profileShow = this.state.profileShow;\n                    profileShow.profile.paidPlus = amount;\n                    this.setState({\n                      profileShow: profileShow\n                    });\n                  },\n                  type: \"number\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 521,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 519,\n                columnNumber: 37\n              }, this), this.state.profileShow.profile.profileDetail.cleared && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"wxs\",\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: \"p-0\",\n                  children: \"cleared :\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 41\n                }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-check ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 544,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 542,\n                columnNumber: 37\n              }, this), this.state.profileShow.profile.profileDetail.cleared && /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"button btn-delete m-1 ml-3\",\n                onClick: () => {\n                  let show = this.state.profileShow;\n                  show.profile.paidPlus = null;\n                  show.profile.profileDetail = null;\n                  this.setState({\n                    profileShow: show,\n                    rememberToSave: true\n                  });\n                },\n                children: \"delete owings\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 547,\n                columnNumber: 40\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 495,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn p-x-5 m-0 ml-5\",\n              onClick: this.saveUpdated,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 m-0 ml-5 mr-5\",\n              onClick: () => this.props.updateClicked(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 562,\n              columnNumber: 29\n            }, this), this.state.rememberToSave && /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"inline ml-5\",\n              style: {\n                fontSize: \"70%\"\n              },\n              children: \"ps : don't forget to save otherwise your changes won't be affected \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 563,\n              columnNumber: 59\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 560,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            style: {\n              fontSize: \"80%\"\n            },\n            children: \" ps : changing date will change previous records as well and may cause lose of data \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 566,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default UserProfileInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserProfileInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","UserProfileDataService","DatePicker","CustomSelect","Function","UserProfileInnerComponent","constructor","props","saveUpdated","pdlist","state","selectedPds","show","profileShow","withUser","item","profile","x","original","items","length","error","setState","userId","inventoryNumber","trim","productDetailId","profileDetail","paidPlus","undefined","date","givenAt","Date","setHours","getHours","getTimezoneOffset","ids","map","pd","push","value","productDetailIds","save","then","response","msg","userName","updateClicked","refresh","setMessage","catch","getErrorMsg","showError","onProductChange","selected","selectedProductId","getNewSearch","name","search","lastSearch","newPath","charAt","substring","searchItems","split","i","startsWith","oninventoryAdd","label","up","changedPd","onFilterDateChange","isDateEqual","selectedDate","toISOString","indexOf","onDateGivenChange","onDateReturnedChange","returnedAt","date1","date2","getFullYear","getMonth","getDate","message","filter","filteredNumbers","filteredcount","ChangedUser","freeInventory","notDiscarded","available","bind","componentDidMount","retrieveAllNumbers","data","getFilteredInventoty","filteredInventory","find","f","getFilteredUser","filteredUser","userNames","n","time","myInterval","setInterval","clearInterval","componentWillUnmount","onFilterfreeInventoryChange","target","onFilteravailableChange","onFilternotDiscardedChange","discarded","onUserChange","found","filterBy","changedUser","returnOriginalPd","returnOriginalUser","oninventoryRemove","splice","render","height","width","overflow","fontSize","paddingLeft","marginRight","productNames","usersToGive","createdAt","modifiedAt","Intl","NumberFormat","style","currency","maximumFractionDigits","format","owedAmount","paidAmount","cleared","amount","owed","toFixed","Number","rememberToSave"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport UserProfileDataService from '../service/UserProfileDataService'\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport Function from './Shared/Function'\r\n\r\n\r\nclass UserProfileInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                profileShow: props.profileShow,\r\n                items: props.items,\r\n                message: props.message,\r\n                 filter: props.filter,               \r\n                filteredNumbers: [],\r\n                lastSearch: '?freeInventory=true&isDiscarded=false&econdition=Available',            \r\n                selectedDate: null,\r\n                filteredcount: '',\r\n                selectedPds: [],\r\n                changedPd: null,\r\n                ChangedUser: null,\r\n                freeInventory: true,\r\n                notDiscarded: true,\r\n                available: true,\r\n                withUser: !(props.filter.userId == null || props.filter.userId == undefined || props.filter.userId == 'undefined'),\r\n            }\r\n        this.refresh = this.refresh.bind(this)\r\n    }\r\n\r\n    componentDidMount() {     \r\n        if (this.state.profileShow.x) return;\r\n        ProductDetailDataService.retrieveAllNumbers(this.state.lastSearch)\r\n            .then(response => {              \r\n                this.setState({\r\n                    filteredNumbers: response.data,\r\n                    filteredcount: response.data.length\r\n                })\r\n\r\n                if (this.state.profileShow.x == null && this.state.filter.productDetailId) {\r\n                    let selected = this.getFilteredInventoty();                   \r\n                    if (selected == null || selected == 'undefined') return;\r\n                    let show = this.state.profileShow;\r\n                    show.profile.inventoryNumber = selected ? selected.name : '';\r\n                    show.profile.productDetailId = selected ? selected.value : null;\r\n                    this.setState({ profileShow: show })                   \r\n                }\r\n            }).catch(() => { })\r\n    }\r\n\r\n    getFilteredInventoty() {//original\r\n        let filteredInventory = (this.state.filter.productDetailId && this.state.filteredNumbers.length>0) ?           \r\n            this.state.filteredNumbers.find(f => f.value == this.state.filter.productDetailId)\r\n            : null;\r\n        return filteredInventory\r\n    }\r\n\r\n    getFilteredUser() {//original\r\n        let x = this.state.profileShow.x;\r\n        let filteredUser = x != null ?\r\n            { \"value\": this.state.items[x].userId, \"label\": this.state.items[x].userName }\r\n            : (this.state.filter.userId) ? this.state.filter.userNames.find(n => n.value == this.state.filter.userId)\r\n            : null;\r\n        return filteredUser\r\n    }\r\n\r\n    refresh(search) {\r\n        ProductDetailDataService.retrieveAllNumbers(search)\r\n            .then(response => {\r\n                this.setState({\r\n                    filteredNumbers: response.data,\r\n                    filteredcount: response.data.length\r\n                })\r\n            }).catch(() => { })\r\n    }\r\n\r\n    saveUpdated = () => {\r\n        let pdlist = this.state.selectedPds;\r\n        let show = this.state.profileShow;\r\n        let withUser = this.state.withUser;\r\n        let item = show.profile;\r\n        let x = this.state.profileShow.x;\r\n        let original = x != null ? this.state.items[x] : null;\r\n       \r\n        if (x==null && withUser && pdlist.length < 1) {\r\n            show.error = 'must at least select 1 inventory !!!'\r\n            this.setState({ profileShow: show })\r\n        }\r\n        else if (!item.userId || item.userId == 'undefined') {\r\n            show.error = 'user not selected !!!'\r\n            this.setState({ profileShow: show })\r\n        }\r\n        else if (x == null && !withUser  && (!item.inventoryNumber || item.inventoryNumber == \"undefined\" || item.inventoryNumber.trim().length < 1)) {\r\n            show.error = \"inventory not selected !!!\";\r\n            this.setState({ profileShow: show })\r\n        }\r\n        else if (!withUser && x != null && original == null) {\r\n            show.error = \"original item not found !!!\";\r\n            this.setState({ profileShow: show })\r\n        } else if ( x != null && original.userId == item.userId && original.productDetailId == item.productDetailId &&\r\n            ( (!item.profileDetail && !original.profileDetail) || (item.profileDetail && (item.paidPlus == 0 || item.paidPlus == undefined)))) {\r\n            show.error = \"item hasn't changed !!!\";\r\n            this.setState({ profileShow: show })\r\n        }      \r\n        else {         \r\n            let date = (item.givenAt && new Date(item.givenAt)) || new Date();\r\n           date.setHours(date.getHours() - date.getTimezoneOffset() / 60);          \r\n            item.givenAt = date;\r\n            if (x == null && withUser) {\r\n                let ids = [];                \r\n                pdlist.map(pd => ids.push(pd.value));                \r\n                item.productDetailIds = ids;\r\n               }\r\n          UserProfileDataService.save(item).then(\r\n                response => {\r\n                    let msg = \r\n                        pdlist && pdlist.length > 0 ? '' + pdlist.length + ' items have been given to ' + this.state.profileShow.profile.userName + \"'s \" :\r\n                            this.state.profileShow.profile.userName + \"'s profile has been updated successfully \";\r\n                    this.props.updateClicked();\r\n                    this.props.refresh();\r\n                    this.props.setMessage(msg);                  \r\n                }).catch(error => {\r\n                    let msg = Function.getErrorMsg(error);                  \r\n                    show.error = 'error : ' + msg;\r\n                    this.setState({ profileShow: show })\r\n                   this.showError();                    \r\n                })\r\n        }\r\n\r\n    }\r\n\r\n    showError(msg) {\r\n        let time = 8;      \r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                let show = this.state.profileShow;\r\n                show.error = null;\r\n                this.setState({\r\n                    profileShow: show\r\n                })\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    onProductChange = (selected) => {\r\n        this.setState({ selectedProductId: selected.value })\r\n        this.getNewSearch('productId', selected.value);\r\n    }\r\n\r\n    onFilterfreeInventoryChange(value) {\r\n        let freeInventory = this.state.freeInventory;\r\n        freeInventory = !freeInventory;\r\n        this.setState({ freeInventory: freeInventory })\r\n        this.getNewSearch('freeInventory', value.target.value);\r\n    }\r\n\r\n    onFilteravailableChange(value) {\r\n        let available = this.state.available;\r\n        this.setState({ available: !available })\r\n        this.getNewSearch('isAvailable', value.target.value);\r\n    }\r\n    onFilternotDiscardedChange(value) {\r\n        let discarded = this.state.notDiscarded;\r\n        this.setState({ notDiscarded: !discarded })\r\n        this.getNewSearch('isDiscarded', value.target.value);\r\n    }\r\n\r\n    getNewSearch = (name, value) => {\r\n        let search = this.state.lastSearch;\r\n        let newPath = ``;\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n                if (!searchItems[i].startsWith(name))\r\n                    newPath += searchItems[i] + '&'               \r\n            }\r\n        }\r\n        if (value && value != 'undefined')\r\n            newPath += name + '=' + value;\r\n        else {\r\n            if (name == 'notIn') {\r\n                let ids = ''\r\n                this.state.selectedPds.map(pd => ids += pd.value + ',')\r\n                ids = ids.substring(0, ids.length - 1);\r\n                newPath+= name+'='+ids\r\n            }\r\n            else\r\n                newPath = newPath.substring(0, newPath.length - 1);\r\n        }\r\n         newPath = '?' + newPath\r\n        this.setState({ lastSearch: newPath })\r\n        this.refresh(newPath)\r\n\r\n    }\r\n    oninventoryAdd = (selected) => {\r\n        if (selected == null) return;\r\n        if (selected.name == '') return;\r\n        if (this.state.profileShow.x == null && this.state.withUser) {\r\n            let selectedPds = this.state.selectedPds;\r\n            selectedPds.push({ name: selected.label, value: selected.value });\r\n            this.setState({ selectedPds: selectedPds })\r\n            this.getNewSearch('notIn')\r\n        } else {\r\n            let up = this.state.profileShow;\r\n            up.profile.inventoryNumber = selected.label;\r\n            up.profile.productDetailId = selected.value;\r\n            this.setState({\r\n                profileShow: up,\r\n                changedPd:true\r\n            })\r\n        }\r\n    }\r\n\r\n    onUserChange(selected) {\r\n        let up = this.state.profileShow;\r\n        let x = up.x;\r\n        if (x == null || x < 0) {\r\n            let found = this.state.filter.userNames.find(n => n.value == selected.value);\r\n            if (found && found.filterBy) {\r\n                up.error = \"user is deleted, can't assign him new inventories !!! \";\r\n                this.setState({ profileShow: up })\r\n                this.showError();\r\n                return;\r\n            }\r\n        }\r\n        up.profile.userName = selected.label;\r\n        up.profile.userId = selected.value;\r\n        this.setState({\r\n            profileShow: up,\r\n            changedUser: true\r\n        })\r\n    }\r\n\r\n    returnOriginalPd() {\r\n        let up = this.state.profileShow;\r\n        let original = this.getFilteredInventoty()\r\n        up.profile.inventoryNumber = original == null ? '' : original.name;\r\n        up.profile.productDetailId = original == null ? null : original.value;\r\n        this.setState({\r\n            profileShow: up,\r\n            changedPd:null\r\n        })\r\n    }\r\n\r\n    returnOriginalUser() {\r\n        let up = this.state.profileShow;\r\n        let original = this.getFilteredUser()\r\n        up.profile.userId = (original == null) ? null : original.value;\r\n        up.profile.userName = (original == null) ? '...' : original.label;\r\n        this.setState({\r\n            profileShow: up,\r\n            changedUser: null\r\n        })\r\n    }\r\n\r\n    oninventoryRemove (i) {\r\n        let selectedPds = this.state.selectedPds;\r\n        selectedPds.splice(i, 1);\r\n        this.setState({ selectedPds: selectedPds })\r\n        this.getNewSearch('notIn')\r\n    }\r\n\r\n    onFilterDateChange = (date) => {\r\n       if (this.isDateEqual(this.state.selectedDate, date)) return; \r\n       if(date) {\r\n            date = date.toISOString();\r\n            date = date.substring(0, date.indexOf('T'))\r\n        }        \r\n        this.setState({ selectedDate: date });\r\n        this.getNewSearch('dateCreatedAfter', date);      \r\n        \r\n    }\r\n\r\n    onDateGivenChange = (date) => {\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.givenAt = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n    onDateReturnedChange = (date) => {\r\n        let profileShow = this.state.profileShow;\r\n        profileShow.profile.returnedAt = date;\r\n        this.setState({\r\n            profileShow: profileShow\r\n        })\r\n    }\r\n\r\n    isDateEqual = (date1, date2) => {\r\n        if (date1 == date2) return true       \r\n        else {\r\n            date1 = new Date(date1);\r\n            date2 = new Date(date2);           \r\n            if (date1.getFullYear() === date2.getFullYear() &&\r\n                date1.getMonth() === date2.getMonth() &&\r\n                date1.getDate() === date2.getDate())\r\n                return true\r\n        }\r\n        return false\r\n    }\r\n    \r\n\r\n    render() {\r\n     let height = (this.state.profileShow.x == null) ? \"70%\" : this.state.profileShow.profile.profileDetail ? \"65%\" : \"52%\";\r\n        return (\r\n            <>               \r\n                <div className={this.state.profileShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.profileShow.show ? \"modal d-block \" : \"d-none\"} style={{ width: \"80%\", height: height , overflow: \"visible\" }} >\r\n\r\n                    <div className=\"\">\r\n                        <span class=\"close pt-2\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                        <h3 className=\"inline pt-3 pl-3 pb-1\">{this.state.profileShow.x != null ? 'Update ' : 'Add '}\r\n                            profile &emsp;({this.state.profileShow.profile.userName})</h3>\r\n                        {this.state.profileShow.x == null && \r\n                            <div className=\"inline pull-right mt-5 mr-5 move-top top-c\">\r\n                                <div className=\"mr-5\">\r\n                            <label className=\"\">\r\n                                    <input className=\"m-0\" type=\"radio\" value={!this.state.freeInventory}\r\n                                        checked={this.state.freeInventory}                                    \r\n                                    />\r\n                                    <span style={{ fontSize: \"80%\", paddingLeft: \"3px\", marginRight: \"10px\" }}>free inventory</span></label>\r\n                            <label className=\"\">\r\n                                <input className=\"m-0\" type=\"radio\" value={!this.state.available}\r\n                                    checked={this.state.available}                                   \r\n                                    />\r\n                                    <span style={{ fontSize: \"80%\", paddingLeft: \"3px\", marginRight: \"10px\" }}>available</span></label>                \r\n                            <label className=\"mr-5\">\r\n                                <input className=\"m-0\" type=\"radio\" value={!this.state.notDiscarded}\r\n                                    checked={this.state.notDiscarded}\r\n                                   />\r\n                                    <span style={{ fontSize: \"80%\", paddingLeft: \"3px\", marginRight: \"10px\" }}>not discarded</span></label>\r\n                            </div>\r\n                        </div>\r\n                        }                        \r\n                    </div>\r\n                    {this.state.profileShow.x == null &&\r\n                        <div className=\"mt-0 inline w100\">\r\n                            <div className=\"border pt-1 b-r r-c foo\"> {/*********************** small filter **************************/}\r\n                                <label className=\"move-top top-l\" style={{ fontSize: \"80%\" }}>filter for inventory select</label>\r\n                            <div className=\"inline w40 pr-1\">\r\n                                <h6 className=\"ml-1 pl-1\">product </h6>\r\n                                    <CustomSelect\r\n                                        className={\"inline w100 ml-0\"}\r\n                                    items={this.state.filter.productNames}\r\n                                    value={this.state.selectedProductId}\r\n                                        onChange={(selected) => this.onProductChange(selected)}\r\n                                    />\r\n                                </div>\r\n                                <div className=\"inline w20\">\r\n                                <h6 className=\"ml-1 pl-1\">created after</h6>\r\n                                    <div className=\"inline w100\">\r\n                                        <DatePicker\r\n                                            className=\"form-control w100 p-2 ml-0\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        maxDate={new Date()}\r\n                                            isClearable\r\n                                            placeholderText=\"...\"\r\n                                            selected={this.state.selectedDate && new Date(this.state.selectedDate) || null}\r\n                                            onChange={selected => {\r\n                                                this.onFilterDateChange(selected)\r\n                                            }} />\r\n                                    </div>\r\n                                </div>\r\n                                <span className=\"move-top top-r\" style={{ fontSize: \"80%\" }}> {this.state.filteredcount} items found</span>\r\n                                <div className=\"inline w40\">\r\n                                    <h6 className=\"inline ml-1 pl-1\">select inventory&nbsp;</h6>\r\n                                    <CustomSelect\r\n                                        className={\"inline w100 ml-0\"}\r\n                                        items={this.state.filteredNumbers}\r\n                                        onChange={(selected) => this.oninventoryAdd(selected)}\r\n                                    />\r\n                                </div>\r\n                        </div>\r\n                    </div>\r\n                        }                  \r\n                    {/*******************    filter over  ******************/}\r\n\r\n                    {this.state.profileShow.error && this.state.profileShow.error.length > 1 && // error div\r\n                        <div className=\"alert alert-warning d-flex mx-1\">{this.state.profileShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.profileShow;\r\n                                    show.error = '';\r\n                                    this.setState({ profileShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>\r\n                    }\r\n                    {/***************  form  ********************/}\r\n                    <div className={this.state.profileShow.error && this.state.profileShow.error.length > 1 ?\r\n                        \"d-flex align-items-top flex-wrap\" : \"mt-5 d-flex align-items-top flex-wrap\"}>\r\n\r\n                        <div className=\"inline w40 m-0 \">{/*************** form right **************/}\r\n\r\n                            <div className=\"inline m-0 pl-5\">\r\n                    <h6 >date given </h6> \r\n                                <div>\r\n                                    <DatePicker\r\n                                        className=\"form-control inline-2-5 p-2\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        maxDate={(this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt)) ||\r\n                                            new Date()}\r\n                                        minDate={(this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt)) ||\r\n                                            new Date()}\r\n                                        selected={(this.state.profileShow.x != null && new Date(this.state.profileShow.profile.givenAt)) ||\r\n                                            new Date()}\r\n                                        onChange={date => {\r\n                                            this.onDateGivenChange(date);\r\n                                        }}\r\n                                    />\r\n                                     \r\n                    </div>\r\n                    </div>\r\n                            <div className=\"inline m-0 px-5\">\r\n                        <h6 >date returned </h6>\r\n                                <div>\r\n                                    <DatePicker\r\n                                        className=\"form-control inline-2-5 p-2\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"\r\n                                        disabled\r\n                                        selected={(this.state.profileShow.x != null && new Date(this.state.profileShow.profile.returnedAt)) || null}\r\n                                    />\r\n                            \r\n                        </div>\r\n                            </div>\r\n                            {\r\n                                this.state.profileShow.x == null &&\r\n                                    <>\r\n                                <div className=\"mt-5 d-flex align-items-center\" >\r\n                                <button className=\"btn btn-mybtn p-x-5 mt-0\" onClick={this.saveUpdated}>Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5 mt-0\" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                            </div>                        \r\n                                    <p style={{ fontSize: \"80%\" }}> ps : changing date will change previous records as well and may cause lose of data </p>\r\n                                    </>\r\n                                    }\r\n                        \r\n                        </div> {/*************** form right over  **************/}\r\n\r\n                        <div className=\"inline w60\">{/*************** form left **************/}\r\n                           \r\n                            <h6 className=\"required-field ml-0\">selected inventory </h6>\r\n                            {this.state.profileShow.x == null && this.state.withUser && this.state.selectedPds &&\r\n                               this.state.selectedPds.map((pd, i) =>\r\n                                <div>\r\n                                    <label className=\"required-field\">{i + 1}&nbsp;</label>\r\n                                    <input value={pd.name} className='form-control inline w80 m-0 ml-1 p-2 pl-3' />\r\n\r\n                                        <button className=\"btn btn-mybtn btn-delete m-0 ml-1\" type=\"button\"\r\n                                            onClick={() => {\r\n                                                this.oninventoryRemove(i);\r\n                                            }}><i class=\"fa fa-close ml-auto\">\r\n                                            </i></button>\r\n                                    </div>\r\n                                    )}                              \r\n                                {(!this.state.withUser || this.state.profileShow.x != null) &&\r\n                                <>\r\n                                <input value={this.state.profileShow.profile.inventoryNumber || ''} className='form-control inline w90 m-0 p-2 pl-3'                                   \r\n                                />{this.state.changedPd && <i class=\"fa fa-undo ml-1\" onClick={() => { this.returnOriginalPd()}}>\r\n                                </i>}\r\n                                {this.state.profileShow.x==null &&\r\n                                    <p style={{ fontSize: \"70%\" }}> ps : selecting inventory from filter will change current inventory </p>}                                \r\n                                <h6 className=\"mt-1 ml-0 required-field\">select user </h6>\r\n                                <CustomSelect\r\n                                    className={\"b-r inline w80 m-0 p-0\"}\r\n                                    items={this.props.usersToGive}\r\n                                    value={this.state.profileShow.profile.userId}\r\n                                    onChange={(selected) => this.onUserChange(selected)}\r\n                                />{this.state.changedUser && <i class=\"fa fa-undo ml-1\" onClick={() => { this.returnOriginalUser() }}>\r\n                                </i>}\r\n                                </>\r\n                            }\r\n                            \r\n                        </div>{/**********  form left over **********************/}\r\n                    </div>{/*************** form over ********************/}\r\n\r\n                    {this.state.profileShow.x != null &&\r\n                        <>\r\n                        {this.state.profileShow.profile.profileDetail != null &&\r\n                            <div className=\"mt-3 px-5\">\r\n                                <h6>owings :</h6>\r\n                                <div className=\"d-flex alighn-items-top\">\r\n                                    <div className=\"w20\">\r\n                                        <p>created at : </p><p>{this.state.profileShow.profile.profileDetail.createdAt}</p>\r\n                                    </div>\r\n                                    <div className=\"w20\">\r\n                                        <p>modified at : </p><p>{this.state.profileShow.profile.profileDetail.modifiedAt}</p>\r\n                                    </div>\r\n                                    <div className=\"w20\">\r\n                                        <p>owed amount : </p><p>{new Intl.NumberFormat(\"en-GB\", {\r\n                                            style: \"currency\",\r\n                                            currency: \"BGN\",\r\n                                            maximumFractionDigits: 2\r\n                                        }).format(this.state.profileShow.profile.profileDetail.owedAmount)}</p>\r\n                                    </div>\r\n                                    <div className=\"w20\">\r\n                                        <p>paid amount : </p><p>{new Intl.NumberFormat(\"en-GB\", {\r\n                                            style: \"currency\",\r\n                                            currency: \"BGN\",\r\n                                            maximumFractionDigits: 2\r\n                                        }).format(this.state.profileShow.profile.profileDetail.paidAmount)}</p>\r\n                                </div>\r\n                                {!this.state.profileShow.profile.profileDetail.cleared &&\r\n                                    <div className=\"w20 d-flex alighn-items-top\">\r\n                                    <p>paid plus : </p>\r\n                                    <input className=\"inline m-0 ml-2 p-1 form-control px100\"\r\n                                        min=\"0\"\r\n                                        max={this.state.profileShow.profile.profileDetail.owedAmount - this.state.profileShow.profile.profileDetail.paidAmount}\r\n                                        value={this.state.profileShow.profile.paidPlus}\r\n                                        onChange={(value) => {\r\n                                            let amount = value.target.value;\r\n                                            let owed = (this.state.profileShow.profile.profileDetail.owedAmount - this.state.profileShow.profile.profileDetail.paidAmount).toFixed(2);\r\n                                           //debugger\r\n                                            if (Number(amount) > Number(owed))\r\n                                                amount = owed\r\n                                            else if (amount <= 0) amount = \"\";\r\n                                                \r\n                                            let profileShow = this.state.profileShow;\r\n                                            profileShow.profile.paidPlus = amount;\r\n                                            this.setState({ profileShow: profileShow })\r\n                                            }}\r\n                                            type=\"number\" />\r\n                                    </div>\r\n                                }\r\n                                {this.state.profileShow.profile.profileDetail.cleared &&\r\n\r\n                                    <div className=\"wxs\">\r\n                                        <p className=\"p-0\">cleared :</p>\r\n                                        <i class=\"fa fa-check ml-1\" />\r\n                                    </div>}\r\n                                {this.state.profileShow.profile.profileDetail.cleared &&\r\n                                       <button className=\"button btn-delete m-1 ml-3\" onClick={() => {\r\n                                        let show = this.state.profileShow;\r\n                                        show.profile.paidPlus = null;\r\n                                        show.profile.profileDetail = null;\r\n                                        this.setState({\r\n                                            profileShow: show,\r\n                                            rememberToSave:true})\r\n                                          }}>delete owings\r\n                                        </button>\r\n                                }                                \r\n                                </div>\r\n                            </div>}\r\n                      \r\n                            <div className=\"mt-3\" >\r\n                                <button className=\"btn btn-mybtn p-x-5 m-0 ml-5\" onClick={this.saveUpdated}>Save</button>\r\n                            <button className=\"btn btn-mybtn btn-delete px-5 m-0 ml-5 mr-5\" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                            {this.state.rememberToSave && <p className=\"inline ml-5\" style={{ fontSize: \"70%\" }}>\r\n                                ps : don't forget to save otherwise your changes won't be affected </p>}\r\n                        </div>\r\n                        <p style={{ fontSize: \"80%\" }}> ps : changing date will change previous records as well and may cause lose of data </p>                           \r\n                        </>}                   \r\n                    </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileInnerComponent"]},"metadata":{},"sourceType":"module"}