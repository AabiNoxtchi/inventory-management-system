{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DDInnerComponent.jsx\";\nimport React, { Component } from 'react';\nimport DeliveryDetailDataService from '../service/DeliveryDetailDataService';\nimport DeliveryDataService from '../service/DeliveryDataService'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nimport '../myStyles/Style.css';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './Filters/CustomSelect';\nimport InventoryNumberInnerComponent from './InventoryNumberInnerComponent';\n\nclass DDInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdateddd = () => {\n      let show = this.state.ddUpdateShow;\n\n      if (this.state.producterror != null) {\n        return;\n      }\n\n      let x = this.state.ddUpdateShow.x;\n      let y = this.state.ddUpdateShow.y;\n      let items = this.state.items;\n      let item = items[x].deliveryDetails[y];\n      let productId = show.dd && show.dd.productId || null;\n      let price = show.dd && show.dd.pricePerOne || null; // console.log(\"date.toISOString() = \" + date.toISOString());\n      // console.log(\"date = \" + date);\n      // console.log(\"new Date(item.date) = \" + new Date(item.date));\n      //console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\n\n      if (!price || !productId) {\n        show.error = \"required fields can't be empty !!!\";\n        this.setState({\n          ddUpdateShow: show\n        });\n      } else if (item && productId == item.productId && price == item.pricePerOne) {\n        show.error = \"delivery detail hasn't changed\";\n        this.setState({\n          ddUpdateShow: show\n        });\n      } else {\n        console.log(\"all good\");\n        let item = show.dd;\n        item.deliveryId = items[x].id;\n        console.log(\"in submit delivery d item = \" + JSON.stringify(item));\n        DeliveryDetailDataService.save(item).then(response => {\n          console.log(\"delivery d submit response = \" + response.data); //item.supplierName = (this.state.suppliers.filter(s => s.value == item.supplierId))[0].name;\n\n          item.id = item.id || response.data;\n          y = y || items[x].deliveryDetails.length;\n          console.log(\"y = \" + y);\n          items[x].deliveryDetails[y] = item;\n          let total = 0;\n          items[x].deliveryDetails.map(i => total = total + i.pricePerOne * i.quantity);\n          items[x].total = items[x].deliveryDetails.map(i => i.pricePerOne * i.quantity); //message = \"update successful\"\n\n          this.props.setItems(items);\n          this.props.updateChildClicked(null);\n          let msg = this.state.ddmessage;\n          msg[x] = \"update successful\";\n          this.props.setddMessage(msg); //this.props.setdeliveryUpdateShow(null)\n          //let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n          // this.props.history.push(path)\n        }).catch(error => {\n          console.log(\"delivery submit error= \" + error.data);\n          show.error = \"errors occured : \" + error + \" !!!\";\n          this.setState({\n            ddUpdateShow: show\n          });\n        });\n      }\n    };\n\n    this.isProductPresent = value => {\n      let isPresent = false;\n      let x = this.state.ddUpdateShow.x;\n      let y = this.state.ddUpdateShow.y;\n      let items = this.state.items;\n      let dds = items[x].deliveryDetails;\n      dds.map((dd, i) => {\n        if (y != null && y != i && dd.productId == value || y == null && dd.productId == value) isPresent = true;\n      });\n      return isPresent;\n    };\n\n    this.onProductChange = selected => {\n      let ddUpdateShow = this.state.ddUpdateShow;\n      if (ddUpdateShow.dd == null) ddUpdateShow.dd = {};\n      ddUpdateShow.dd.productId = selected.value;\n      ddUpdateShow.dd.productName = selected.label;\n      this.setState({\n        ddUpdateShow: ddUpdateShow,\n        producterror: this.isProductPresent(selected.value) ? 'product already exist in this delivery !!!' : null\n      });\n    };\n\n    this.state = {\n      ddUpdateShow: props.ddUpdateShow,\n      items: props.items,\n      products: props.products,\n      ddmessage: props.ddmessage,\n      producterror: null\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.ddUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.ddUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: !this.state.ddUpdateShow.dd || !this.state.ddUpdateShow.dd.id ? \"85%\" : \"50%\",\n          height: \"62%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateChildClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: [this.state.ddUpdateShow.dd ? \"update\" : \"add\", \" delivery detail \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), this.state.ddUpdateShow.error && this.state.ddUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.ddUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.ddUpdateShow;\n              show.error = '';\n              this.setState({\n                ddUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline w-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: this.state.ddUpdateShow.error && this.state.ddUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n            children: \"product : \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n            className: this.state.producterror ? \"mb-0\" : \"\",\n            items: this.state.products,\n            value: this.state.ddUpdateShow.dd && this.state.ddUpdateShow.dd.productId,\n            onChange: selected => this.onProductChange(selected)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 21\n          }, this), this.state.producterror && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex in-error\",\n            children: [this.state.producterror, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: () => {\n                let err = this.state.producterror;\n                err = null;\n                this.setState({\n                  producterror: err\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"ml-5\",\n            children: \"price per one :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            value: this.state.ddUpdateShow.dd ? this.state.ddUpdateShow.dd.pricePerOne : '',\n            min: \"0\",\n            onChange: value => {\n              let show = this.state.ddUpdateShow;\n              if (show.dd == null) show.dd = {};\n              show.dd.pricePerOne = value.target.value;\n              this.setState({\n                ddUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline w-50\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"inline\",\n            children: \"Add Inventory numbers\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5 ml-5\",\n            onClick: () => {},\n            children: \"add\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w-50\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn px-5 ml-5\",\n              onClick: this.saveUpdateddd,\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 ml-3\",\n              onClick: () => this.props.updateChildClicked(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline w-50\",\n            children: (!this.state.ddUpdateShow.dd || !this.state.ddUpdateShow.dd.id) && /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn px-5 ml-3\",\n              onClick: () => {\n                this.onAddQuantity();\n              },\n              children: [\"Add inventory\\xA0\", /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-angle-double-right\",\n                \"aria-hidden\": \"true\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 137\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default DDInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DDInnerComponent.jsx"],"names":["React","Component","DeliveryDetailDataService","DeliveryDataService","DatePicker","CustomSelect","InventoryNumberInnerComponent","DDInnerComponent","constructor","props","saveUpdateddd","show","state","ddUpdateShow","producterror","x","y","items","item","deliveryDetails","productId","dd","price","pricePerOne","error","setState","console","log","deliveryId","id","JSON","stringify","save","then","response","data","length","total","map","i","quantity","setItems","updateChildClicked","msg","ddmessage","setddMessage","catch","isProductPresent","value","isPresent","dds","onProductChange","selected","productName","label","products","render","width","height","err","target","onAddQuantity"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,yBAAP,MAAsC,sCAAtC;AACA,OAAOC,mBAAP,MAAgC,gCAAhC,C,CACA;;AACA,OAAO,uBAAP;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,OAAOC,6BAAP,MAA0C,iCAA1C;;AAEA,MAAMC,gBAAN,SAA+BN,SAA/B,CAAyC;AACrCO,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAenBC,aAfmB,GAeH,MAAM;AAClB,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,YAAtB;;AACA,UAAI,KAAKD,KAAL,CAAWE,YAAX,IAA2B,IAA/B,EAAqC;AACjC;AACH;;AACD,UAAIC,CAAC,GAAG,KAAKH,KAAL,CAAWC,YAAX,CAAwBE,CAAhC;AACA,UAAIC,CAAC,GAAG,KAAKJ,KAAL,CAAWC,YAAX,CAAwBG,CAAhC;AACA,UAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAvB;AACA,UAAIC,IAAI,GAAGD,KAAK,CAACF,CAAD,CAAL,CAASI,eAAT,CAAyBH,CAAzB,CAAX;AAGA,UAAII,SAAS,GAAIT,IAAI,CAACU,EAAL,IAAWV,IAAI,CAACU,EAAL,CAAQD,SAApB,IAAgC,IAAhD;AACA,UAAIE,KAAK,GAAIX,IAAI,CAACU,EAAL,IAAWV,IAAI,CAACU,EAAL,CAAQE,WAApB,IAAkC,IAA9C,CAZkB,CAclB;AACA;AACA;AACA;;AAEA,UAAI,CAACD,KAAD,IAAU,CAACF,SAAf,EAA0B;AACtBT,QAAAA,IAAI,CAACa,KAAL,GAAa,oCAAb;AACA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,YAAY,EAAEF;AAAhB,SAAd;AACH,OAHD,MAGO,IAAIO,IAAI,IAAIE,SAAS,IAAIF,IAAI,CAACE,SAA1B,IAAuCE,KAAK,IAAIJ,IAAI,CAACK,WAAzD,EAAsE;AACzEZ,QAAAA,IAAI,CAACa,KAAL,GAAa,gCAAb;AACA,aAAKC,QAAL,CAAc;AAAEZ,UAAAA,YAAY,EAAEF;AAAhB,SAAd;AACH,OAHM,MAGA;AACHe,QAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACA,YAAIT,IAAI,GAAGP,IAAI,CAACU,EAAhB;AACAH,QAAAA,IAAI,CAACU,UAAL,GAAkBX,KAAK,CAACF,CAAD,CAAL,CAASc,EAA3B;AACAH,QAAAA,OAAO,CAACC,GAAR,CAAY,iCAAiCG,IAAI,CAACC,SAAL,CAAeb,IAAf,CAA7C;AACAhB,QAAAA,yBAAyB,CAAC8B,IAA1B,CAA+Bd,IAA/B,EACKe,IADL,CACWC,QAAD,IAAc;AAChBR,UAAAA,OAAO,CAACC,GAAR,CAAY,kCAAkCO,QAAQ,CAACC,IAAvD,EADgB,CAEhB;;AACAjB,UAAAA,IAAI,CAACW,EAAL,GAAUX,IAAI,CAACW,EAAL,IAAWK,QAAQ,CAACC,IAA9B;AACAnB,UAAAA,CAAC,GAAIA,CAAC,IAAIC,KAAK,CAACF,CAAD,CAAL,CAASI,eAAT,CAAyBiB,MAAnC;AAEAV,UAAAA,OAAO,CAACC,GAAR,CAAY,SAASX,CAArB;AACAC,UAAAA,KAAK,CAACF,CAAD,CAAL,CAASI,eAAT,CAAyBH,CAAzB,IAA8BE,IAA9B;AAEA,cAAImB,KAAK,GAAG,CAAZ;AACApB,UAAAA,KAAK,CAACF,CAAD,CAAL,CAASI,eAAT,CAAyBmB,GAAzB,CAA6BC,CAAC,IAAIF,KAAK,GAAGA,KAAK,GAAIE,CAAC,CAAChB,WAAF,GAAgBgB,CAAC,CAACC,QAArE;AACAvB,UAAAA,KAAK,CAACF,CAAD,CAAL,CAASsB,KAAT,GAAiBpB,KAAK,CAACF,CAAD,CAAL,CAASI,eAAT,CAAyBmB,GAAzB,CAA6BC,CAAC,IAAIA,CAAC,CAAChB,WAAF,GAAgBgB,CAAC,CAACC,QAApD,CAAjB,CAXgB,CAahB;;AACA,eAAK/B,KAAL,CAAWgC,QAAX,CAAoBxB,KAApB;AACA,eAAKR,KAAL,CAAWiC,kBAAX,CAA8B,IAA9B;AACA,cAAIC,GAAG,GAAG,KAAK/B,KAAL,CAAWgC,SAArB;AACAD,UAAAA,GAAG,CAAC5B,CAAD,CAAH,GAAS,mBAAT;AACA,eAAKN,KAAL,CAAWoC,YAAX,CAAwBF,GAAxB,EAlBgB,CAmBhB;AAGA;AACA;AACH,SAzBL,EAyBOG,KAzBP,CAyBctB,KAAD,IAAW;AAChBE,UAAAA,OAAO,CAACC,GAAR,CAAY,4BAA4BH,KAAK,CAACW,IAA9C;AACAxB,UAAAA,IAAI,CAACa,KAAL,GAAa,sBAAsBA,KAAtB,GAA8B,MAA3C;AACA,eAAKC,QAAL,CAAc;AAAEZ,YAAAA,YAAY,EAAEF;AAAhB,WAAd;AACH,SA7BL;AA8BH;AACJ,KA5EkB;;AAAA,SA8EnBoC,gBA9EmB,GA8ECC,KAAD,IAAW;AAC1B,UAAIC,SAAS,GAAG,KAAhB;AAEA,UAAIlC,CAAC,GAAG,KAAKH,KAAL,CAAWC,YAAX,CAAwBE,CAAhC;AACA,UAAIC,CAAC,GAAG,KAAKJ,KAAL,CAAWC,YAAX,CAAwBG,CAAhC;AACA,UAAIC,KAAK,GAAG,KAAKL,KAAL,CAAWK,KAAvB;AACA,UAAIiC,GAAG,GAAGjC,KAAK,CAACF,CAAD,CAAL,CAASI,eAAnB;AAEA+B,MAAAA,GAAG,CAACZ,GAAJ,CAAQ,CAACjB,EAAD,EAAKkB,CAAL,KAAW;AACf,YAAKvB,CAAC,IAAI,IAAL,IAAaA,CAAC,IAAIuB,CAAlB,IAAuBlB,EAAE,CAACD,SAAH,IAAgB4B,KAAxC,IAAmDhC,CAAC,IAAI,IAAL,IAAaK,EAAE,CAACD,SAAH,IAAgB4B,KAApF,EACIC,SAAS,GAAG,IAAZ;AACP,OAHD;AAKA,aAAOA,SAAP;AACH,KA5FkB;;AAAA,SA8FnBE,eA9FmB,GA8FAC,QAAD,IAAc;AAE5B,UAAIvC,YAAY,GAAG,KAAKD,KAAL,CAAWC,YAA9B;AACA,UAAIA,YAAY,CAACQ,EAAb,IAAmB,IAAvB,EAA6BR,YAAY,CAACQ,EAAb,GAAkB,EAAlB;AAC7BR,MAAAA,YAAY,CAACQ,EAAb,CAAgBD,SAAhB,GAA4BgC,QAAQ,CAACJ,KAArC;AACAnC,MAAAA,YAAY,CAACQ,EAAb,CAAgBgC,WAAhB,GAA8BD,QAAQ,CAACE,KAAvC;AACA,WAAK7B,QAAL,CAAc;AACVZ,QAAAA,YAAY,EAAEA,YADJ;AAEVC,QAAAA,YAAY,EAAE,KAAKiC,gBAAL,CAAsBK,QAAQ,CAACJ,KAA/B,IAAwC,4CAAxC,GAAuF;AAF3F,OAAd;AAKH,KAzGkB;;AAGf,SAAKpC,KAAL,GACI;AACAC,MAAAA,YAAY,EAAEJ,KAAK,CAACI,YADpB;AAEII,MAAAA,KAAK,EAAER,KAAK,CAACQ,KAFjB;AAGIsC,MAAAA,QAAQ,EAAE9C,KAAK,CAAC8C,QAHpB;AAIAX,MAAAA,SAAS,EAAEnC,KAAK,CAACmC,SAJjB;AAKA9B,MAAAA,YAAY,EAAE;AALd,KADJ;AASH;;AA+FD0C,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BAEI;AAAK,QAAA,SAAS,EAAE,KAAK5C,KAAL,CAAWC,YAAX,CAAwBF,IAAxB,GAA+B,iBAA/B,GAAmD;AAAnE;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAK,QAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBF,IAAxB,GAA+B,eAA/B,GAAiD,QAAjE;AACI,QAAA,KAAK,EAAE;AAAE8C,UAAAA,KAAK,EAAE,CAAC,KAAK7C,KAAL,CAAWC,YAAX,CAAwBQ,EAAzB,IAA+B,CAAC,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,CAA2BQ,EAA3D,GAAgE,KAAhE,GAAwE,KAAjF;AAAyF6B,UAAAA,MAAM,EAAE;AAAjG,SADX;AAAA,gCAEI;AAAM,UAAA,KAAK,EAAC,OAAZ;AAAoB,UAAA,OAAO,EAAE,MAAM,KAAKjD,KAAL,CAAWiC,kBAAX,CAA8B,IAA9B,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,qBAAK,KAAK9B,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,GAA6B,QAA7B,GAAwC,KAA7C;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,EAIK,KAAKT,KAAL,CAAWC,YAAX,CAAwBW,KAAxB,IAAiC,KAAKZ,KAAL,CAAWC,YAAX,CAAwBW,KAAxB,CAA8BY,MAA9B,GAAuC,CAAxE,iBACG;AAAK,UAAA,SAAS,EAAC,4BAAf;AAAA,qBAA6C,KAAKxB,KAAL,CAAWC,YAAX,CAAwBW,KAArE,eACI;AAAG,YAAA,KAAK,EAAC,+BAAT;AACI,YAAA,OAAO,EAAE,MAAM;AACX,kBAAIb,IAAI,GAAG,KAAKC,KAAL,CAAWC,YAAtB;AACAF,cAAAA,IAAI,CAACa,KAAL,GAAa,EAAb;AACA,mBAAKC,QAAL,CAAc;AAAEZ,gBAAAA,YAAY,EAAEF;AAAhB,eAAd;AACH;AALL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBALR,eAcI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACA;AAAI,YAAA,SAAS,EAAE,KAAKC,KAAL,CAAWC,YAAX,CAAwBW,KAAxB,IAAiC,KAAKZ,KAAL,CAAWC,YAAX,CAAwBW,KAAxB,CAA8BY,MAA9B,GAAuC,CAAxE,GACX,MADW,GACF,WADb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADA,eAGA,QAAC,YAAD;AACI,YAAA,SAAS,EAAE,KAAKxB,KAAL,CAAWE,YAAX,GAA0B,MAA1B,GAAmC,EADlD;AAEI,YAAA,KAAK,EAAE,KAAKF,KAAL,CAAW2C,QAFtB;AAGI,YAAA,KAAK,EAAG,KAAK3C,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,IAA8B,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,CAA2BD,SAHrE;AAKI,YAAA,QAAQ,EAAGgC,QAAD,IAAc,KAAKD,eAAL,CAAqBC,QAArB;AAL5B;AAAA;AAAA;AAAA;AAAA,kBAHA,EAUC,KAAKxC,KAAL,CAAWE,YAAX,iBACG;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,uBAAsD,KAAKF,KAAL,CAAWE,YAAjE,eACI;AAAG,cAAA,KAAK,EAAC,+BAAT;AACA,cAAA,OAAO,EAAE,MAAM;AACX,oBAAI6C,GAAG,GAAG,KAAK/C,KAAL,CAAWE,YAArB;AACA6C,gBAAAA,GAAG,GAAG,IAAN;AACA,qBAAKlC,QAAL,CAAc;AAAEX,kBAAAA,YAAY,EAAE6C;AAAhB,iBAAd;AACC;AALL;AAAA;AAAA;AAAA;AAAA,oBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAXJ,eAoBA;AAAI,YAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBApBA,eAqBA;AAAO,YAAA,IAAI,EAAC,QAAZ;AAAqB,YAAA,KAAK,EAAE,KAAK/C,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,GAA6B,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,CAA2BE,WAAxD,GAAsE,EAAlG;AAAsG,YAAA,GAAG,EAAC,GAA1G;AAA8G,YAAA,QAAQ,EAAGyB,KAAD,IAAW;AAC/H,kBAAIrC,IAAI,GAAG,KAAKC,KAAL,CAAWC,YAAtB;AACA,kBAAIF,IAAI,CAACU,EAAL,IAAW,IAAf,EAAqBV,IAAI,CAACU,EAAL,GAAU,EAAV;AACrBV,cAAAA,IAAI,CAACU,EAAL,CAAQE,WAAR,GAAsByB,KAAK,CAACY,MAAN,CAAaZ,KAAnC;AACA,mBAAKvB,QAAL,CAAc;AAAEZ,gBAAAA,YAAY,EAAEF;AAAhB,eAAd;AACH;AALD;AAAA;AAAA;AAAA;AAAA,kBArBA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAdJ,eA+CI;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA,kCACI;AAAI,YAAA,SAAS,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAEI;AAAQ,YAAA,SAAS,EAAC,yBAAlB;AAA4C,YAAA,OAAO,EAAE,MAAM,CAAG,CAA9D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBA/CJ,eAoDI;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,oCACA;AAAQ,cAAA,SAAS,EAAC,yBAAlB;AAA4C,cAAA,OAAO,EAAE,KAAKD,aAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADA,eAEI;AAAQ,cAAA,SAAS,EAAC,oCAAlB;AAAuD,cAAA,OAAO,EAAE,MAAM,KAAKD,KAAL,CAAWiC,kBAAX,CAA8B,IAA9B,CAAtE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,eAKI;AAAK,YAAA,SAAS,EAAC,aAAf;AAAA,sBAEI,CAAC,CAAC,KAAK9B,KAAL,CAAWC,YAAX,CAAwBQ,EAAzB,IAA+B,CAAC,KAAKT,KAAL,CAAWC,YAAX,CAAwBQ,EAAxB,CAA2BQ,EAA5D,kBACI;AAAQ,cAAA,SAAS,EAAC,yBAAlB;AAA4C,cAAA,OAAO,EAAE,MAAM;AAAE,qBAAKgC,aAAL;AAAsB,eAAnF;AAAA,2DAAwG;AAAG,gBAAA,KAAK,EAAC,0BAAT;AAAoC,+BAAY;AAAhD;AAAA;AAAA;AAAA;AAAA,sBAAxG;AAAA;AAAA;AAAA;AAAA;AAAA;AAHR;AAAA;AAAA;AAAA;AAAA,kBALJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBApDJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA,oBADJ;AAwEH;;AArLoC;;AAwLzC,eAAetD,gBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport InventoryNumberInnerComponent from './InventoryNumberInnerComponent'\r\n\r\nclass DDInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n            ddUpdateShow: props.ddUpdateShow ,\r\n                items: props.items,\r\n                products: props.products,\r\n            ddmessage: props.ddmessage,\r\n            producterror: null\r\n\r\n            }\r\n    }\r\n\r\n   \r\n    saveUpdateddd = () => {\r\n        let show = this.state.ddUpdateShow;\r\n        if (this.state.producterror != null) {            \r\n            return\r\n        }\r\n        let x = this.state.ddUpdateShow.x;\r\n        let y = this.state.ddUpdateShow.y;\r\n        let items = this.state.items;\r\n        let item = items[x].deliveryDetails[y];\r\n\r\n        \r\n        let productId = (show.dd && show.dd.productId)||null;\r\n        let price = (show.dd && show.dd.pricePerOne)||null;\r\n\r\n        // console.log(\"date.toISOString() = \" + date.toISOString());\r\n        // console.log(\"date = \" + date);\r\n        // console.log(\"new Date(item.date) = \" + new Date(item.date));\r\n        //console.log(\"new Date(item.date) === date \" +(new Date(item.date) === date ));\r\n\r\n        if (!price || !productId) {\r\n            show.error = \"required fields can't be empty !!!\";\r\n            this.setState({ ddUpdateShow: show })\r\n        } else if (item && productId == item.productId && price == item.pricePerOne) {\r\n            show.error = \"delivery detail hasn't changed\";\r\n            this.setState({ ddUpdateShow: show })\r\n        } else {\r\n            console.log(\"all good\");\r\n            let item = show.dd;\r\n            item.deliveryId = items[x].id;\r\n            console.log(\"in submit delivery d item = \" + JSON.stringify(item));\r\n            DeliveryDetailDataService.save(item)\r\n                .then((response) => {\r\n                    console.log(\"delivery d submit response = \" + response.data);\r\n                    //item.supplierName = (this.state.suppliers.filter(s => s.value == item.supplierId))[0].name;\r\n                    item.id = item.id || response.data;\r\n                    y = (y || items[x].deliveryDetails.length );\r\n                    \r\n                    console.log(\"y = \" + y);\r\n                    items[x].deliveryDetails[y] = item;\r\n\r\n                    let total = 0;\r\n                    items[x].deliveryDetails.map(i => total = total + (i.pricePerOne * i.quantity));\r\n                    items[x].total = items[x].deliveryDetails.map(i => i.pricePerOne * i.quantity)\r\n                   \r\n                    //message = \"update successful\"\r\n                    this.props.setItems(items);\r\n                    this.props.updateChildClicked(null);\r\n                    let msg = this.state.ddmessage;\r\n                    msg[x] = \"update successful\";\r\n                    this.props.setddMessage(msg);\r\n                    //this.props.setdeliveryUpdateShow(null)\r\n\r\n\r\n                    //let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n                    // this.props.history.push(path)\r\n                }).catch((error) => {\r\n                    console.log(\"delivery submit error= \" + error.data);\r\n                    show.error = \"errors occured : \" + error + \" !!!\";\r\n                    this.setState({ ddUpdateShow: show })\r\n                })\r\n        }\r\n    }\r\n\r\n    isProductPresent = (value) => {\r\n        let isPresent = false;\r\n\r\n        let x = this.state.ddUpdateShow.x;\r\n        let y = this.state.ddUpdateShow.y;\r\n        let items = this.state.items;        \r\n        let dds = items[x].deliveryDetails;\r\n\r\n        dds.map((dd, i) => {\r\n            if ((y != null && y != i && dd.productId == value) || (y == null && dd.productId == value) )\r\n                isPresent = true\r\n        });\r\n\r\n        return isPresent\r\n    }\r\n\r\n    onProductChange = (selected) => {\r\n               \r\n        let ddUpdateShow = this.state.ddUpdateShow;\r\n        if (ddUpdateShow.dd == null) ddUpdateShow.dd = {}\r\n        ddUpdateShow.dd.productId = selected.value;\r\n        ddUpdateShow.dd.productName = selected.label;\r\n        this.setState({\r\n            ddUpdateShow: ddUpdateShow,\r\n            producterror: this.isProductPresent(selected.value) ? 'product already exist in this delivery !!!' : null\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n               \r\n                <div className={this.state.ddUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.ddUpdateShow.show ? \"modal d-block\" : \"d-none\"}\r\n                    style={{ width: !this.state.ddUpdateShow.dd || !this.state.ddUpdateShow.dd.id ? \"85%\" : \"50%\" , height: \"62%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateChildClicked(null)}>&times;</span>\r\n                    <h2>{this.state.ddUpdateShow.dd ? \"update\" : \"add\"} delivery detail </h2>\r\n                    {this.state.ddUpdateShow.error && this.state.ddUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.ddUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.ddUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ ddUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    <div className=\"inline w-50\">\r\n                    <h6 className={this.state.ddUpdateShow.error && this.state.ddUpdateShow.error.length > 1 ?\r\n                        \"ml-5\" : \"mt-5 ml-5\"}>product : </h6>\r\n                    <CustomSelect\r\n                        className={this.state.producterror ? \"mb-0\" : \"\"}\r\n                        items={this.state.products}\r\n                        value={(this.state.ddUpdateShow.dd && this.state.ddUpdateShow.dd.productId)}\r\n                        \r\n                        onChange={(selected) => this.onProductChange(selected)}\r\n                    />\r\n                    {this.state.producterror &&\r\n                        <div className=\"alert alert-warning d-flex in-error\">{this.state.producterror}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                            onClick={() => {\r\n                                let err = this.state.producterror;\r\n                                err = null;\r\n                                this.setState({ producterror: err })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    <h6 className=\"ml-5\">price per one :</h6>\r\n                    <input type=\"number\" value={this.state.ddUpdateShow.dd ? this.state.ddUpdateShow.dd.pricePerOne : ''} min=\"0\" onChange={(value) => {\r\n                        let show = this.state.ddUpdateShow;\r\n                        if (show.dd == null) show.dd = {}\r\n                        show.dd.pricePerOne = value.target.value;\r\n                        this.setState({ ddUpdateShow: show })\r\n                    }} />\r\n\r\n                   \r\n                   \r\n                    \r\n                    </div>\r\n                \r\n                    <div className=\"inline w-50\">\r\n                        <h5 className=\"inline\">Add Inventory numbers</h5>\r\n                        <button className=\"btn btn-mybtn px-5 ml-5\" onClick={() => { }}>add</button>\r\n                    </div>\r\n\r\n                    <div>\r\n                        <div className=\"inline w-50\">\r\n                        <button className=\"btn btn-mybtn px-5 ml-5\" onClick={this.saveUpdateddd}>Save</button>\r\n                            <button className=\"btn btn-mybtn btn-delete px-5 ml-3\" onClick={() => this.props.updateChildClicked(null)}>Cancel</button>\r\n                        </div>\r\n                        <div className=\"inline w-50\">\r\n                        {\r\n                            (!this.state.ddUpdateShow.dd || !this.state.ddUpdateShow.dd.id) &&\r\n                                <button className=\"btn btn-mybtn px-5 ml-3\" onClick={() => { this.onAddQuantity() }}>Add inventory&nbsp;<i class=\"fa fa-angle-double-right\" aria-hidden=\"true\"></i></button>\r\n\r\n                            }\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default DDInnerComponent"]},"metadata":{},"sourceType":"module"}