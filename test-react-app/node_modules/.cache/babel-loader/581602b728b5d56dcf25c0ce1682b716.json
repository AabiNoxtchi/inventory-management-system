{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductDetailInnerComponent.jsx\";\nimport React, { Component } from 'react'; //import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\n//import DeliveryDataService from '../service/DeliveryDataService';\n\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport '../myStyles/Style.css'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nclass ProductDetailInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdatedPd = () => {\n      let x = this.state.pdUpdateShow.x;\n      let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.number.trim() : null;\n\n      if (this.state.pdUpdateShow.pd == null) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"All fields are required\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.state.pdUpdateShow.pd.id && number == this.state.pdShow[x]) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number hasn't changed\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (name.length == 0) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number can't be empty\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.numberExists(name, x, y, i)) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number already exist's in this delivery\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else {\n        //console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\n        let item = {\n          selectItem: {\n            name: this.state.pdUpdateShow.pd.name.trim(),\n            value: this.state.pdUpdateShow.pd.value\n          },\n          deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\n        };\n        console.log(\"submitting item \" + JSON.stringify(item));\n        ProductDetailDataService.updateNumber(item).then(response => {\n          console.log(\"response = \" + JSON.stringify(response));\n          this.props.updatePdChildClicked(null);\n          let pdshow = this.state.pdShow;\n\n          if (this.state.pdUpdateShow.i == undefined) {\n            let list = pdshow[x][y].data;\n            list.push({\n              value: response.data,\n              name: item.selectItem.name\n            });\n            pdshow[x][y].data = list;\n          } else pdshow[x][y].data[i].name = item.selectItem.name;\n\n          let pdmessages = this.state.pdmessage;\n          if (pdmessages[x] == null) pdmessages[x] = [];\n          pdmessages[x][y] = `Update successful`;\n          this.props.setpdShow(pdshow);\n          this.props.setpdMessage(pdmessages);\n          if (this.state.pdUpdateShow.i == undefined) this.props.refresh();\n        }).catch(error => {\n          console.log(\"error = \" + error);\n          console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\n          let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\n          let show = this.state.pdUpdateShow;\n          show.error = errormsg;\n          this.setState({\n            pdUpdateShow: show\n          }); //this.props.setpdUpdateShow( show )\n        });\n      }\n    };\n\n    this.onNumberChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.number = value.target.value;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.onAvailableChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.available = value.target.value;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.state = {\n      pdUpdateShow: props.pdUpdateShow,\n      // pd: props.pd,\n      message: props.message\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"50%\",\n          height: \"48%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.number,\n          onChange: value => {\n            this.onNumberChange(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"inline pr-2 mr-2\",\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"mr-2 pt-3\",\n            type: \"checkbox\",\n            name: \"isAvailable\",\n            value: true,\n            checked: this.state.message.pd.available == true,\n            onChange: value => {\n              this.onAvailableChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 25\n          }, this), \"available\", /*#__PURE__*/_jsxDEV(Field, {\n            className: \"mx-2 pt-3\",\n            type: \"checkbox\",\n            name: \"isAvailable\",\n            value: false,\n            checked: this.state.message.pd.available == false,\n            onChange: value => {\n              this.onAvailableChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 33\n          }, this), \"missing\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5 \",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 \",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default InventoryNumberInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductDetailInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","ProductDetailInnerComponent","constructor","props","saveUpdatedPd","x","state","pdUpdateShow","number","pd","trim","show","error","setState","id","pdShow","name","length","numberExists","y","i","item","selectItem","value","deliveryDetailId","ddid","console","log","JSON","stringify","updateNumber","then","response","updatePdChildClicked","pdshow","undefined","list","data","push","pdmessages","pdmessage","setpdShow","setpdMessage","refresh","catch","errormsg","message","onNumberChange","target","onAvailableChange","available","render","width","height","InventoryNumberInnerComponent"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\n//import DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\n\r\nclass ProductDetailInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                pdUpdateShow: props.pdUpdateShow,\r\n               // pd: props.pd,\r\n                message: props.message\r\n            }\r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n\r\n        let x = this.state.pdUpdateShow.x;    \r\n       \r\n        let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.number.trim() : null;\r\n        if (this.state.pdUpdateShow.pd == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"All fields are required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.id &&\r\n            number == this.state.pdShow[x]) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.numberExists(name, x, y, i)) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number already exist's in this delivery\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {\r\n\r\n            //console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n            let item = {\r\n                selectItem: {\r\n                    name: this.state.pdUpdateShow.pd.name.trim(), value: this.state.pdUpdateShow.pd.value\r\n                },\r\n                deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\r\n            }\r\n            console.log(\"submitting item \" + JSON.stringify(item));\r\n            ProductDetailDataService.updateNumber(item)\r\n                .then(response => {\r\n                    console.log(\"response = \" + JSON.stringify(response));\r\n                    this.props.updatePdChildClicked(null);\r\n\r\n\r\n\r\n                    let pdshow = this.state.pdShow;\r\n\r\n                    if (this.state.pdUpdateShow.i == undefined) {\r\n                        let list = pdshow[x][y].data;\r\n                        list.push({ value: response.data, name: item.selectItem.name });\r\n                        pdshow[x][y].data = list\r\n                    } else\r\n                        pdshow[x][y].data[i].name = item.selectItem.name;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;\r\n\r\n                    this.props.setpdShow(pdshow);\r\n                    this.props.setpdMessage(pdmessages);\r\n                    if (this.state.pdUpdateShow.i == undefined) this.props.refresh()\r\n\r\n                }).catch(error => {\r\n                    console.log(\"error = \" + error);\r\n                    console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\r\n                    let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = errormsg;\r\n                    this.setState({ pdUpdateShow: show })\r\n                    //this.props.setpdUpdateShow( show )\r\n                })\r\n        }\r\n    }\r\n\r\n    onNumberChange = (value) => {\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.number = value.target.value;\r\n        this.setState({ pdUpdateShow: show })\r\n    }\r\n\r\n    onAvailableChange = (value) => {\r\n\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.available = value.target.value;\r\n        this.setState({ pdUpdateShow: show })}\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"50%\", height: \"48%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updatePdChildClicked(null)}>&times;</span>\r\n                    <h2>update inventory</h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.pdUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.pdUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ pdUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    <h6 className={this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number : </h6>\r\n                    <input type=\"text\" className=\"form-control\" value={this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.number}\r\n                        onChange={(value) => {\r\n                            this.onNumberChange(value)\r\n                       \r\n                    }} />\r\n                    <div className=\"inline pr-2 mr-2\">\r\n                        <Field\r\n                            className=\"mr-2 pt-3\" type=\"checkbox\" name=\"isAvailable\"\r\n                            value={true} checked={this.state.message.pd.available == true}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\r\n                            }}\r\n                        />available\r\n                                <Field\r\n                            className=\"mx-2 pt-3\" type=\"checkbox\" name=\"isAvailable\"\r\n                            value={false} checked={this.state.message.pd.available == false}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\r\n                            }}\r\n                        />missing\r\n                        </div>\r\n                    <button className=\"btn btn-mybtn px-5 \" onClick={this.saveUpdatedPd}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 \" onClick={() => this.props.updatePdChildClicked(null)}>Cancel</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default InventoryNumberInnerComponent"]},"metadata":{},"sourceType":"module"}