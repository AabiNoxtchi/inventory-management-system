{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\UserProfileFilter.jsx\";\nimport { Field, Form, Formik } from 'formik';\nimport React, { Component } from 'react';\nimport DatePicker from \"react-datepicker\";\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport Functions from './Functions';\n\nclass UserProfileFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      userId: props.userId,\n      myProfile: props.myProfile,\n      productNames: props.productNames,\n      productId: props.productId,\n      inventoryNumbers: props.inventoryNumbers,\n      filteredInventoryNumbers: props.inventoryNumbers,\n      productDetailId: props.productDetailId,\n      givenAfter: props.givenAfter,\n      returnedBefore: props.returnedBefore,\n      prefix: props.prefix,\n      userRole: props.userRole,\n      current: props.current,\n      allUser: props.allUser,\n      withDetail: props.withDetail\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  convertDate(value) {\n    return Functions.convertDate(value);\n  }\n\n  onSubmit(values) {\n    if (this.props.timeline.show) {\n      let filter = {\n        \"productDetailId\": values.productDetailId,\n        \"givenAfter\": '',\n        \"returnedBefore\": ''\n      };\n      filter.givenAfter = this.convertDate(values.givenAfter);\n      filter.returnedBefore = this.convertDate(values.returnedBefore);\n      this.props.onSearch(filter);\n      return;\n    }\n\n    let path = window.location.pathname;\n    let search = this.props.search || window.location.search;\n    Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch);\n  }\n\n  filter(subs, names, value) {\n    subs = [];\n    if (value == null) subs = names;else {\n      for (let i = 0; i < names.length; i++) {\n        if (names[i].filterBy == value || names[i].value == '') {\n          subs.push(names[i]);\n        }\n      }\n    }\n    return subs;\n  }\n\n  resetForm(setFieldValue, values) {\n    if (this.props.onNewSearch) {\n      this.props.onNewSearch('');\n      /* this.setState({\r\n           all: null,\r\n           userId: null,\r\n           myProfile: null,\r\n           productId: null,\r\n           productDetailId: null,\r\n           givenAfter: null,\r\n           returnedBefore: null,\r\n           current: null,\r\n           allUser: null,\r\n           withDetail: null\r\n       })*/\n\n      setFieldValue(\"all\", null);\n      setFieldValue(\"userId\", null);\n    } else window.location.href = window.location.pathname;\n  }\n\n  render() {\n    let userNames = this.props.userNames;\n    let {\n      all,\n      userId,\n      myProfile,\n      inventoryNumbers,\n      productDetailId,\n      productNames,\n      withDetail,\n      productId,\n      givenAfter,\n      returnedBefore,\n      current,\n      allUser,\n      filteredInventoryNumbers\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      enableReinitialize: true,\n      initialValues: {\n        all,\n        userNames,\n        userId,\n        myProfile,\n        inventoryNumbers,\n        productDetailId,\n        productNames,\n        withDetail,\n        productId,\n        givenAfter,\n        returnedBefore,\n        filteredInventoryNumbers,\n        current,\n        allUser\n      },\n      onSubmit: this.onSubmit,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"ml-2 mr-1\",\n            type: \"checkbox\",\n            name: \"current\",\n            value: values.current,\n            checked: values.current,\n            disabled: this.props.timeline.show,\n            onChange: value => {\n              setFieldValue(\"current\", !values.current);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 30\n          }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"font-weight-bold\",\n            children: \"current\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 33\n          }, this), this.state.userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mr-1\",\n                type: \"checkbox\",\n                name: \"myProfile\",\n                value: values.myProfile,\n                checked: values.myProfile,\n                disabled: this.props.timeline.show,\n                onChange: value => {\n                  setFieldValue(\"myProfile\", !values.myProfile);\n                  setFieldValue(\"userId\", 'undefined');\n                  setFieldValue(\"allUser\", false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 41\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-weight-bold\",\n                children: \"my profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mr-1\",\n                type: \"checkbox\",\n                name: \"allUser\",\n                value: values.allUser,\n                checked: values.allUser,\n                disabled: this.props.timeline.show,\n                onChange: value => {\n                  setFieldValue(\"allUser\", !values.allUser);\n                  setFieldValue(\"userId\", 'undefined');\n                  setFieldValue(\"myProfile\", false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 37\n              }, this), \"  \", /*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"font-weight-bold\",\n                children: \"users\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"font-weight-bold\",\n                children: \"user\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline inline-4\",\n                items: userNames,\n                disabled: this.props.timeline.show,\n                value: values.userId,\n                onChange: selected => {\n                  setFieldValue(\"myProfile\", false);\n                  setFieldValue(\"userId\", selected.value);\n                  setFieldValue(\"allUser\", false);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: productNames,\n              disabled: this.props.timeline.show,\n              value: this.props.timeline.show ? '' : values.productId,\n              onChange: selected => {\n                setFieldValue(\"productId\", selected.value);\n                let subs = values.filteredNames;\n                subs = this.filter(subs, values.inventoryNumbers, selected.value);\n                setFieldValue(\"filteredInventoryNumbers\", subs);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"inventory number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect // ref={(x) => { this.productDetailIdRef = x}}\n            , {\n              className: \"inline inline-4\",\n              items: values.filteredInventoryNumbers,\n              log: true,\n              value: values.productDetailId == null || values.productDetailId == undefined ? 'undefined' : values.productDetailId,\n              onChange: selected => setFieldValue(\"productDetailId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mb-1\",\n              children: \"timeline\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"inline px-2 border\",\n              style: {\n                borderRadius: \"3px\"\n              },\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1 fw-s\",\n                children: \"given after\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"inline \",\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control in-inline inline-2\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  maxDate: values.returnedBefore && new Date(values.returnedBefore) || new Date().setDate(new Date().getDate() - 1),\n                  selected: values.givenAfter && new Date(values.givenAfter),\n                  isClearable: true,\n                  onChange: date => setFieldValue(\"givenAfter\", date),\n                  shouldCloseOnSelect: true,\n                  showYearDropdown: true,\n                  dropdownMode: \"select\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"pl-1 mb-1 fw-s\",\n                children: \"returned before\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(DatePicker, {\n                className: \"form-control in-inline inline-2\",\n                dateFormat: \"MMMM dd yyyy\",\n                locale: \"en-GB\",\n                minDate: values.givenAfter && new Date(values.givenAfter).setDate(new Date(values.givenAfter).getDate() + 1),\n                maxDate: new Date().setDate(new Date().getDate() + 1),\n                selected: values.returnedBefore && new Date(values.returnedBefore),\n                onChange: date => setFieldValue(\"returnedBefore\", date),\n                isClearable: true,\n                highlightDates: new Date(),\n                shouldCloseOnSelect: true,\n                showYearDropdown: true,\n                dropdownMode: \"select\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline pr-2 mr-2\",\n            children: [/*#__PURE__*/_jsxDEV(Field, {\n              className: \"mr-2 pt-3\",\n              type: \"checkbox\",\n              name: \"withDetail\",\n              value: true,\n              checked: values.withDetail == true,\n              onChange: value => {\n                console.log('value of checked = ' + value.target.value);\n                setFieldValue(\"withDetail\", values.withDetail == true ? null : true);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"with owings\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 32\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              disabled: this.props.timeline.show,\n              onClick: (setFieldValue, values) => this.resetForm(setFieldValue, values),\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 32\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserProfileFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/UserProfileFilter.jsx"],"names":["Field","Form","Formik","React","Component","DatePicker","CustomSelect","Functions","UserProfileFilter","constructor","props","state","all","userId","myProfile","productNames","productId","inventoryNumbers","filteredInventoryNumbers","productDetailId","givenAfter","returnedBefore","prefix","userRole","current","allUser","withDetail","onSubmit","bind","resetForm","convertDate","value","values","timeline","show","filter","onSearch","path","window","location","pathname","search","getSubmitPath","onNewSearch","subs","names","i","length","filterBy","push","setFieldValue","href","render","userNames","selected","filteredNames","undefined","borderRadius","Date","setDate","getDate","date","console","log","target"],"mappings":"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","sourcesContent":["import { Field, Form, Formik } from 'formik';\r\nimport React, { Component } from 'react';\r\nimport DatePicker from \"react-datepicker\";\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css';\r\nimport Functions from './Functions';\r\n\r\n\r\nclass UserProfileFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,            \r\n           userId: props.userId,\r\n            myProfile: props.myProfile,\r\n            productNames: props.productNames,\r\n            productId: props.productId,\r\n            inventoryNumbers: props.inventoryNumbers,\r\n            filteredInventoryNumbers: props.inventoryNumbers,\r\n            productDetailId: props.productDetailId,\r\n            givenAfter: props.givenAfter,\r\n            returnedBefore: props.returnedBefore,\r\n            prefix: props.prefix,\r\n            userRole: props.userRole,\r\n            current: props.current,\r\n            allUser: props.allUser,\r\n            withDetail: props.withDetail\r\n             }\r\n     \r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n     \r\n    }\r\n\r\n    convertDate(value) {\r\n       return Functions.convertDate(value);\r\n    }\r\n    onSubmit(values) {\r\n       if (this.props.timeline.show) {\r\n           let filter = { \"productDetailId\": values.productDetailId, \"givenAfter\": '', \"returnedBefore\": '' };\r\n           filter.givenAfter = this.convertDate(values.givenAfter);\r\n           filter.returnedBefore = this.convertDate(values.returnedBefore);\r\n           this.props.onSearch(filter);\r\n           return;\r\n        }\r\n\r\n        let path = window.location.pathname;\r\n        let search = this.props.search || window.location.search;\r\n        Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch)      \r\n    }\r\n\r\n    filter(subs, names, value) {\r\n        subs = [];\r\n        if (value == null) subs = names;\r\n        else {\r\n            for (let i = 0; i < names.length; i++) {\r\n                if (names[i].filterBy == value || names[i].value == '') {\r\n                    subs.push(names[i])\r\n                }\r\n            }\r\n        }\r\n        return subs\r\n    }\r\n\r\n    resetForm(setFieldValue, values) {\r\n\r\n       if (this.props.onNewSearch) {\r\n            this.props.onNewSearch('');\r\n           /* this.setState({\r\n                all: null,\r\n                userId: null,\r\n                myProfile: null,\r\n                productId: null,\r\n                productDetailId: null,\r\n                givenAfter: null,\r\n                returnedBefore: null,\r\n                current: null,\r\n                allUser: null,\r\n                withDetail: null\r\n            })*/\r\n           setFieldValue(\"all\", null);\r\n           setFieldValue(\"userId\", null);\r\n        }\r\n\r\n        else\r\n            window.location.href = window.location.pathname;      \r\n    }\r\n\r\n   \r\n    render() {\r\n       let userNames = this.props.userNames\r\n        let { all,  userId, myProfile, inventoryNumbers, productDetailId, productNames, withDetail,\r\n            productId, givenAfter, returnedBefore, current, allUser, filteredInventoryNumbers} = this.state;\r\n       return (\r\n            <Formik\r\n              enableReinitialize={true}\r\n                initialValues={{\r\n                    all, userNames, userId, myProfile, inventoryNumbers, productDetailId, productNames, withDetail,\r\n                    productId, givenAfter, returnedBefore, filteredInventoryNumbers, current, allUser\r\n                }}\r\n                onSubmit={this.onSubmit}                \r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                             <Field\r\n                                className=\"ml-2 mr-1\" type=\"checkbox\" name=\"current\"\r\n                                value={values.current} checked={values.current}\r\n                                disabled={this.props.timeline.show}\r\n                                onChange={(value) => {                                   \r\n                                    setFieldValue(\"current\", !values.current);                                   \r\n                                }}\r\n                            />  <span className=\"font-weight-bold\">current</span>                           \r\n                            {this.state.userRole == 'ROLE_Mol' &&\r\n                                <div className=\"inline\">\r\n                                    <div className=\"inline ml-3\">\r\n                                        <Field\r\n                                        className=\"mr-1\" type=\"checkbox\" name=\"myProfile\"\r\n                                        value={values.myProfile} checked={values.myProfile}\r\n                                        disabled={this.props.timeline.show}\r\n                                            onChange={(value) => {                                               \r\n                                                setFieldValue(\"myProfile\", !values.myProfile);\r\n                                                setFieldValue(\"userId\", 'undefined');\r\n                                                setFieldValue(\"allUser\", false)\r\n                                            }}\r\n                                    />  <span className=\"font-weight-bold\">my profile</span>\r\n                                    </div>\r\n                                    <div className=\"inline ml-3\">\r\n                                    <Field\r\n                                        className=\"mr-1\" type=\"checkbox\" name=\"allUser\"\r\n                                        value={values.allUser} checked={values.allUser}\r\n                                        disabled={this.props.timeline.show}\r\n                                        onChange={(value) => {\r\n                                           setFieldValue(\"allUser\", !values.allUser);\r\n                                            setFieldValue(\"userId\", 'undefined');\r\n                                            setFieldValue(\"myProfile\", false)\r\n                                        }}\r\n                                        />  <span className=\"font-weight-bold\">users</span>\r\n                                    </div>\r\n                                    <div className=\"inline ml-3\">\r\n                                        <label className=\"font-weight-bold\">user&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"inline inline-4\"}\r\n                                            items={userNames}\r\n                                            disabled={this.props.timeline.show}\r\n                                            value={values.userId}\r\n                                            onChange={(selected) => {\r\n                                                setFieldValue(\"myProfile\", false);\r\n                                                setFieldValue(\"userId\", selected.value);\r\n                                                setFieldValue(\"allUser\", false)\r\n                                            }}/>\r\n                                    </div>\r\n                                </div>\r\n                            }\r\n                            <div className=\"inline\">\r\n                                <label >product&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={productNames}\r\n                                    disabled={this.props.timeline.show}\r\n                                    value={this.props.timeline.show ? '' : values.productId}\r\n                                    onChange={(selected) => {\r\n                                        setFieldValue(\"productId\", selected.value);\r\n                                        let subs = values.filteredNames;\r\n                                        subs = this.filter(subs, values.inventoryNumbers, selected.value);\r\n                                        setFieldValue(\"filteredInventoryNumbers\", subs);\r\n                                    }}/>\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >inventory number&nbsp;</label>\r\n                                <CustomSelect\r\n                                   // ref={(x) => { this.productDetailIdRef = x}}\r\n                                    className={\"inline inline-4\"}\r\n                                    items={values.filteredInventoryNumbers}\r\n                                    log={true}\r\n                                    value={values.productDetailId == null || values.productDetailId==undefined ?'undefined' : values.productDetailId }\r\n                                    onChange={(selected) => setFieldValue(\"productDetailId\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label className=\"mb-1\">timeline&nbsp;</label>\r\n                                <div className=\"inline px-2 border\" style={{borderRadius:\"3px\"}}>\r\n                                    <label className=\"mb-1 fw-s\">given after&nbsp;</label>\r\n                                    <div className=\"inline \">\r\n                                        <DatePicker className=\"form-control in-inline inline-2\"\r\n                                            dateFormat=\"dd MMMM yyyy\"                                           \r\n                                            locale=\"en-GB\"\r\n                                            maxDate={values.returnedBefore && new Date(values.returnedBefore) || (new Date()).setDate((new Date()).getDate() - 1)}\r\n                                            selected={values.givenAfter && new Date(values.givenAfter)}\r\n                                            isClearable\r\n                                            onChange={date => setFieldValue(\"givenAfter\", date)}\r\n                                            shouldCloseOnSelect={true}\r\n                                            showYearDropdown\r\n                                            dropdownMode=\"select\"/>\r\n                                    </div>\r\n                                    <label className=\"pl-1 mb-1 fw-s\">returned before&nbsp;</label>\r\n                                    <DatePicker className=\"form-control in-inline inline-2\"\r\n                                        dateFormat=\"MMMM dd yyyy\"\r\n                                        \r\n                                        locale=\"en-GB\"\r\n                                        minDate={values.givenAfter &&\r\n                                            new Date(values.givenAfter).setDate((new Date(values.givenAfter)).getDate() + 1)}\r\n                                        maxDate={(new Date()).setDate((new Date()).getDate()+1)}\r\n                                        selected={values.returnedBefore && new Date(values.returnedBefore)}\r\n                                        onChange={date => setFieldValue(\"returnedBefore\", date)}\r\n                                        isClearable\r\n                                        highlightDates={new Date()}\r\n                                        shouldCloseOnSelect={true}\r\n                                        showYearDropdown\r\n                                        dropdownMode=\"select\"/>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"inline pr-2 mr-2\">\r\n                                <Field\r\n                                    className=\"mr-2 pt-3\" type=\"checkbox\" name=\"withDetail\"\r\n                                    value={true} checked={values.withDetail == true}\r\n                                    onChange={(value) => {\r\n                                        console.log('value of checked = ' + value.target.value);\r\n                                        setFieldValue(\"withDetail\", values.withDetail == true ? null : true);\r\n                                    }}\r\n                                /><label>with owings</label>\r\n                                </div>                           \r\n                            <div className=\"inline\">\r\n                               <button className=\"button px-5\" type=\"submit\" >Search</button>\r\n                               <button className=\"button btn-delete\" type=\"button\" disabled={this.props.timeline.show} onClick={(setFieldValue, values) => this.resetForm(setFieldValue, values)}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )}\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserProfileFilter"]},"metadata":{},"sourceType":"module"}