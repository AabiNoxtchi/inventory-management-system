{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\InventoryNumberInnerComponent.jsx\";\nimport React, { Component } from 'react'; //import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\n\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport '../myStyles/Style.css'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nclass InventoryNumberInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdatedPd = () => {\n      let x = this.state.pdUpdateShow.x;\n      let y = this.state.pdUpdateShow.y;\n      let i = this.state.pdUpdateShow.i; // console.log(\"i=='undefined'\" + (i == 'undefined'))\n\n      console.log(\"i==undefined\" + (i == undefined));\n      if (i == undefined) i = this.state.pdShow[x][y].data.length; //console.log(\"this.state.pdShow[x][y] = \" + JSON.stringify(this.state.pdShow[x][y]));\n      //console.log(\"this.state.pdShow[x][y].data instanceof array = \" + (this.state.pdShow[x][y].data instanceof Array));\n\n      console.log(\"i = \" + i);\n      let name = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.name : null;\n\n      if (this.state.pdUpdateShow.pd == null) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number is required\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.state.pdUpdateShow.pd.value && name == this.state.pdShow[x][y].data[i].name) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number hasn't changed\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (name.length == 0) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number can't be empty\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else if (this.numberExists(name, x, y, i)) {\n        let show = this.state.pdUpdateShow;\n        show.error = \"number already exist's in this delivery\";\n        this.setState({\n          pdUpdateShow: show\n        });\n      } else {\n        console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\n        let item = {\n          selectItem: this.state.pdUpdateShow.pd,\n          deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\n        };\n        ProductDetailDataService.updateNumber(item).then(response => {\n          this.props.updatePdChildClicked(null);\n          let pdshow = this.state.pdShow;\n          pdshow[x][y].data[i].name = response.data;\n          let pdmessages = this.state.pdmessage;\n          if (pdmessages[x] == null) pdmessages[x] = [];\n          pdmessages[x][y] = `Update successful`;\n          this.props.setpdShow(pdshow);\n          this.props.setpdMessage(pdmessages);\n        }).catch(error => {\n          console.log(\"error = \" + error);\n          console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\n          let show = this.state.pdUpdateShow;\n          show.error = '' + error;\n          this.setState({\n            pdUpdateShow: show\n          }); //this.props.setpdUpdateShow( show )\n        });\n      }\n    };\n\n    this.numberExists = (name, x, y, i) => {\n      let pdshow = this.state.pdShow;\n      let productNums = pdshow[x][y].data;\n\n      for (let j = 0; j < productNums.length; j++) {\n        if (j == i) continue;\n        if (name == productNums[j].name) return true;\n      }\n\n      return false;\n    };\n\n    this.state = {\n      pdUpdateShow: props.pdUpdateShow,\n      pdShow: props.pdShow,\n      pdmessage: props.pdmessage\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"50%\",\n          height: \"48%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory number \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 17\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.name,\n          onChange: value => {\n            let show = this.state.pdUpdateShow;\n            if (show.pd == null) show.pd = {};\n            show.pd.name = value.target.value;\n            this.setState({\n              pdUpdateShow: show\n            });\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5 \",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 \",\n          onClick: () => this.props.updatePdChildClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default InventoryNumberInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/InventoryNumberInnerComponent.jsx"],"names":["React","Component","DeliveryDataService","ProductDetailDataService","InventoryNumberInnerComponent","constructor","props","saveUpdatedPd","x","state","pdUpdateShow","y","i","console","log","undefined","pdShow","data","length","name","pd","show","error","setState","value","numberExists","JSON","stringify","item","selectItem","deliveryDetailId","ddid","updateNumber","then","response","updatePdChildClicked","pdshow","pdmessages","pdmessage","setpdShow","setpdMessage","catch","productNums","j","render","width","height","target"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\n\r\nclass InventoryNumberInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n            pdUpdateShow: props.pdUpdateShow,\r\n            pdShow: props.pdShow,\r\n            pdmessage: props.pdmessage\r\n            }\r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n\r\n        let x = this.state.pdUpdateShow.x;\r\n        let y = this.state.pdUpdateShow.y;\r\n        let i = this.state.pdUpdateShow.i;\r\n        \r\n       // console.log(\"i=='undefined'\" + (i == 'undefined'))\r\n        console.log(\"i==undefined\" + (i == undefined))\r\n        if (i == undefined) i = this.state.pdShow[x][y].data.length;\r\n        //console.log(\"this.state.pdShow[x][y] = \" + JSON.stringify(this.state.pdShow[x][y]));\r\n        //console.log(\"this.state.pdShow[x][y].data instanceof array = \" + (this.state.pdShow[x][y].data instanceof Array));\r\n        console.log(\"i = \" + i);\r\n        let name = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.name : null;\r\n        if (this.state.pdUpdateShow.pd == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number is required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.value &&\r\n            name == this.state.pdShow[x][y].data[i].name) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.numberExists(name, x, y, i)){\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number already exist's in this delivery\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {\r\n\r\n            console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n            let item = {\r\n                selectItem: this.state.pdUpdateShow.pd,\r\n                deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid:null\r\n            }\r\n\r\n            ProductDetailDataService.updateNumber(item)\r\n                .then(response => {\r\n                    this.props.updatePdChildClicked(null);\r\n\r\n                   \r\n\r\n                    let pdshow = this.state.pdShow;\r\n                    pdshow[x][y].data[i].name = response.data;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;\r\n\r\n                    this.props.setpdShow(pdshow);\r\n                    this.props.setpdMessage( pdmessages)\r\n                    \r\n                }).catch(error => {\r\n                    console.log(\"error = \" + error);\r\n                    console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = '' + error;\r\n                    this.setState({ pdUpdateShow: show })\r\n                    //this.props.setpdUpdateShow( show )\r\n                })\r\n        }\r\n    }\r\n\r\n    numberExists = (name, x, y, i) => {\r\n        let pdshow = this.state.pdShow;\r\n        let productNums = pdshow[x][y].data;\r\n        for (let j = 0; j < productNums.length; j++) {\r\n            if (j == i) continue\r\n            if (name == productNums[j].name)               \r\n                return true           \r\n        }  \r\n        return false\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"50%\", height: \"48%\" }}>\r\n                <span class=\"close\" onClick={() => this.props.updatePdChildClicked(null)}>&times;</span>\r\n                <h2>update inventory number </h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.pdUpdateShow.error}\r\n                    <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                        onClick={() => {\r\n                            let show = this.state.pdUpdateShow;\r\n                            show.error = '';\r\n                            this.setState({ pdUpdateShow: show })\r\n                        }}>\r\n                    </i>\r\n                    </div>}\r\n                    <h6 className={this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number : </h6>\r\n                    <input type=\"text\" className = \"form-control\" value={this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.name} onChange={(value) => {\r\n                        let show = this.state.pdUpdateShow;\r\n                        if (show.pd == null) show.pd = {};\r\n                    show.pd.name = value.target.value;\r\n                    this.setState({ pdUpdateShow: show })\r\n                }} />\r\n                <button className=\"btn btn-mybtn px-5 \" onClick={this.saveUpdatedPd}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 \" onClick={() => this.props.updatePdChildClicked(null)}>Cancel</button> \r\n                </div>\r\n                </>\r\n            )\r\n    }\r\n\r\n}\r\nexport default InventoryNumberInnerComponent"]},"metadata":{},"sourceType":"module"}