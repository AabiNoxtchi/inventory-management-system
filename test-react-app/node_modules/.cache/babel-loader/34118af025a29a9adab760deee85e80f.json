{"ast":null,"code":"import { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListUsersComponent.jsx\";\nimport React, { Component } from 'react';\nimport UserDataService from '../service/UserDataService';\nimport PaginationComponent from './PaginationComponent';\nimport UserFilter from './Filters/UserFilter';\nimport '../myStyles/Style.css';\nimport { CSVLink } from \"react-csv\";\nimport Function from './Shared/Function';\nimport { Link, Route, withRouter } from 'react-router-dom';\nimport AuthenticationService from '../service/AuthenticationService';\nconst headers = [{\n  label: \"First Name\",\n  key: \"firstName\"\n}, {\n  label: \"Last Name\",\n  key: \"lastName\"\n}, {\n  label: \"User Name\",\n  key: \"userName\"\n}, {\n  label: \"Email\",\n  key: \"email\"\n}];\n\nclass ListUsersComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.downloadReport = () => {\n      let newSearch = this.getSearchAll();\n      UserDataService.retrieveAll(newSearch).then(response => {\n        this.setState({\n          alldata: response.data.items\n        });\n        this.csvLink.current.link.click();\n      });\n    };\n\n    this.getSearchAll = () => {\n      let search = this.state.search;\n      search.replace(/\\s+/g, '');\n      let newSearch = '';\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage')) continue;else newSearch += searchItems[i] + '&';\n      }\n\n      newSearch = '?' + newSearch;\n      if (newSearch.length > 1) newSearch += '&';\n      newSearch += 'Pager.itemsPerPage=2147483647';\n      return newSearch;\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.state = {\n      items: [],\n      message: null,\n      pager: null,\n      filter: {},\n      filterKey: 0,\n      search: window.location.search || '',\n      alldata: []\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.updateClicked = this.updateClicked.bind(this);\n    this.addClicked = this.addClicked.bind(this);\n    this.csvLink = /*#__PURE__*/React.createRef();\n    this.searchLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.location.search != prevProps.location.search) {\n      let newSearch = this.props.location.search;\n      if (this.state.filter) if (newSearch.indexOf('Filter.filtersSet') < 0) {\n        newSearch += newSearch.length > 1 ? '&' : newSearch.length == 0 ? '?' : '';\n        newSearch += 'Filter.filtersSet=true';\n      }\n      this.refresh(newSearch);\n    }\n  }\n\n  refresh(newSearch) {\n    if (!newSearch) newSearch = this.state.search;\n    UserDataService.retrieveAll(newSearch).then(response => {\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: this.getfilter(response.data.filter),\n        //response.data.filter,\n        filterKey: this.state.filterKey + 1\n      });\n    }).catch(error => {\n      let msg = Function.getErrorMsg(error);\n      this.showError(msg, 5);\n    });\n  }\n\n  getfilter(newfilter) {\n    let filter = this.state.filter;\n    if (!filter) return newfilter;else if (!newfilter.filtersSet) {\n      return newfilter;\n    } else {\n      newfilter.firstNames = filter.firstNames;\n      newfilter.lastNames = filter.lastNames;\n      newfilter.userNames = filter.userNames;\n      newfilter.emails = filter.emails;\n      newfilter.cities = filter.cities;\n      newfilter.countries = filter.countries;\n      return newfilter;\n    }\n  }\n\n  showError(msg, time) {\n    time = time ? time : 10;\n    this.setState({\n      errormsg: msg\n    });\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        this.setState(() => ({\n          errormsg: null\n        }));\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  deleteClicked(id) {\n    UserDataService.delete(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    });\n  }\n\n  undoDeleteClicked(id) {}\n\n  updateClicked(id) {\n    this.props.history.push(`/users/${id}`);\n  }\n\n  addClicked() {\n    this.props.history.push(`/users/-1`);\n  }\n\n  updateLink(newSearch) {\n    this.setState({\n      search: newSearch\n    }, () => this.searchLink.current.click());\n  }\n\n  updateSearch(newSearch) {\n    this.updateLink(newSearch);\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const url = match.url;\n    const userRole = AuthenticationService.getLoggedUerRole();\n    const data = this.state.items;\n    const dataAll = '';\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        ref: this.searchLink,\n        to: `${url}${this.state.search}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/:search`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 17\n      }, this), this.state.filter && /*#__PURE__*/_createElement(UserFilter, { ...this.state.filter,\n        key: this.state.filterKey,\n        userRole: userRole,\n        onNewSearch: search => this.updateSearch(search),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 39\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Users\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap \",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-5  \",\n                onClick: this.addClicked,\n                children: \"Add New\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                data: data,\n                headers: headers,\n                filename: \"users-page.csv\",\n                asyncOnClick: true,\n                onClick: () => {\n                  console.log(\"You click the link\");\n                },\n                children: \"Download this page\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn px-3 ml-2\",\n                onClick: this.downloadReport,\n                children: \"Download All\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(CSVLink, {\n                data: this.state.alldata,\n                filename: \"users-all.csv\",\n                className: \"hidden\",\n                headers: headers,\n                ref: this.csvLink,\n                target: \"_blank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 33\n            }, this), this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager,\n              onNewSearch: search => this.updateSearch(search)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 50\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 25\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success d-flex\",\n            children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: this.togglemsgbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 112\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 48\n          }, this), this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border-bottom my-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"first name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"last name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"user name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 37\n                }, this), console.log(\"userRole  = \" + userRole), console.log(\"userRole === 'ROLE_Admin'  = \" + (userRole === 'ROLE_Admin')), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" city \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 67\n                }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \" last active \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 241,\n                  columnNumber: 67\n                }, this), userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"profiles\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 63\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Update \\u2003\\xA0 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 233,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 232,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.items.map(item => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.firstName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.lastName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.userName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 255,\n                  columnNumber: 45\n                }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", item.countryName, \"/\", item.cityName, \" \"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 75\n                }, this), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [\" \", item.lastActive]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 75\n                }, this), userRole == 'ROLE_Mol' && /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"hoverable\",\n                  onClick: () => {\n                    this.props.history.push(`/userProfiles?Filter.userId=${item.id}`);\n                  },\n                  children: \"\\xA0>>\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 258,\n                  columnNumber: 72\n                }, this), item.deleted && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"\\xA0\\xA0deleted\\u2003\\xA0\\xA0\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 262,\n                  columnNumber: 62\n                }, this), !item.deleted && /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.updateClicked(item.id),\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    onClick: () => this.deleteClicked(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 269,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 266,\n                  columnNumber: 63\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 41\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListUsersComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListUsersComponent.jsx"],"names":["React","Component","UserDataService","PaginationComponent","UserFilter","CSVLink","Function","Link","Route","withRouter","AuthenticationService","headers","label","key","ListUsersComponent","constructor","props","downloadReport","newSearch","getSearchAll","retrieveAll","then","response","setState","alldata","data","items","csvLink","current","link","click","search","state","replace","searchItems","split","i","length","startsWith","togglemsgbox","message","pager","filter","filterKey","window","location","refresh","bind","deleteClicked","updateClicked","addClicked","createRef","searchLink","componentDidMount","componentDidUpdate","prevProps","indexOf","daoitems","getfilter","catch","error","msg","getErrorMsg","showError","newfilter","filtersSet","firstNames","lastNames","userNames","emails","cities","countries","time","errormsg","myInterval","setInterval","clearInterval","componentWillUnmount","id","delete","undoDeleteClicked","history","push","updateLink","updateSearch","render","match","url","userRole","getLoggedUerRole","dataAll","console","log","map","item","firstName","lastName","userName","email","countryName","cityName","lastActive","deleted"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport UserDataService from '../service/UserDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport UserFilter from './Filters/UserFilter';\r\nimport '../myStyles/Style.css';\r\nimport { CSVLink } from \"react-csv\";\r\nimport Function from './Shared/Function';\r\nimport { Link, Route, withRouter } from 'react-router-dom'\r\n\r\nimport AuthenticationService from '../service/AuthenticationService'\r\n\r\nconst headers = [\r\n    { label: \"First Name\", key: \"firstName\" },\r\n    { label: \"Last Name\", key: \"lastName\" },\r\n    { label: \"User Name\", key: \"userName\" },\r\n    { label: \"Email\", key: \"email\" }\r\n];\r\n\r\nclass ListUsersComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            message: null,\r\n            pager: null,\r\n            filter: {},\r\n            filterKey: 0,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n        this.addClicked = this.addClicked.bind(this)\r\n        this.csvLink = React.createRef();   \r\n        this.searchLink = React.createRef();\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location.search != prevProps.location.search) {\r\n            let newSearch = this.props.location.search;\r\n            if (this.state.filter)\r\n                if (newSearch.indexOf('Filter.filtersSet') < 0) {\r\n                    newSearch += newSearch.length > 1 ? '&' : newSearch.length == 0 ? '?' : '';\r\n                    newSearch += 'Filter.filtersSet=true'\r\n                }\r\n            this.refresh(newSearch);\r\n        }\r\n    }\r\n\r\n    refresh(newSearch) {\r\n        if (!newSearch) newSearch = this.state.search;\r\n        UserDataService.retrieveAll(newSearch)\r\n            .then(\r\n            response => {\r\n                    this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: this.getfilter(response.data.filter), //response.data.filter,\r\n                        filterKey: this.state.filterKey + 1\r\n                    });\r\n            }\r\n        ).catch((error) => {\r\n            let msg = Function.getErrorMsg(error);\r\n            this.showError(msg, 5);           \r\n        })\r\n    }\r\n\r\n    getfilter(newfilter) {\r\n        let filter = this.state.filter;\r\n        if (!filter)\r\n            return newfilter\r\n        else if (!newfilter.filtersSet) {\r\n            return newfilter\r\n        }\r\n        else {\r\n            newfilter.firstNames = filter.firstNames;\r\n            newfilter.lastNames = filter.lastNames;\r\n            newfilter.userNames = filter.userNames;\r\n            newfilter.emails = filter.emails;\r\n            newfilter.cities = filter.cities;\r\n            newfilter.countries = filter.countries;          \r\n            return newfilter\r\n        }\r\n    }\r\n\r\n    showError(msg, time) {\r\n        time = time ? time : 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })\r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                this.setState(() => ({\r\n                    errormsg: null\r\n                }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n    downloadReport = () => {\r\n        let newSearch = this.getSearchAll();\r\n        UserDataService.retrieveAll(newSearch)\r\n            .then(response => {\r\n                this.setState({ alldata: response.data.items }); \r\n                this.csvLink.current.link.click()\r\n        })\r\n    }\r\n\r\n    getSearchAll = () => {\r\n        let search = this.state.search;\r\n        search.replace(/\\s+/g, '');\r\n        let newSearch = '';\r\n        let searchItems = search.split('&');\r\n        for (let i = 0; i < searchItems.length; i++) {\r\n            if (searchItems[i].length < 1 || searchItems[i].startsWith('Pager.itemsPerPage'))\r\n                continue\r\n            else\r\n                newSearch += searchItems[i] + '&'\r\n        }\r\n        newSearch = '?' + newSearch;\r\n        if (newSearch.length > 1) newSearch += '&'\r\n        newSearch += 'Pager.itemsPerPage=2147483647';\r\n        return newSearch;\r\n    }\r\n\r\n    deleteClicked(id) {\r\n       UserDataService.delete(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n            )\r\n    }\r\n\r\n    undoDeleteClicked(id) {\r\n\r\n    }\r\n\r\n    updateClicked(id) {\r\n        this.props.history.push(`/users/${id}`)\r\n    }\r\n\r\n    addClicked() {\r\n        this.props.history.push(`/users/-1`)\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null})\r\n    }\r\n\r\n    updateLink(newSearch) {\r\n        this.setState({ search: newSearch },\r\n            () => this.searchLink.current.click())\r\n    }\r\n\r\n    updateSearch(newSearch) {       \r\n       this.updateLink(newSearch);      \r\n    }\r\n\r\n    render() {\r\n        const { match } = this.props;\r\n        const url = match.url;\r\n\r\n        const userRole = AuthenticationService.getLoggedUerRole();\r\n        const data = this.state.items;\r\n        const dataAll = '';\r\n        return (\r\n            <div className=\"px-3 pt-3\">\r\n                <Link ref={this.searchLink} to={`${url}${this.state.search}`}></Link>\r\n                <Route path={`${url}/:search`}>\r\n                    <p></p>\r\n                </Route>\r\n                {this.state.filter && <UserFilter {...this.state.filter}\r\n                    key={this.state.filterKey}\r\n                    userRole={userRole}\r\n                    onNewSearch={(search) =>\r\n                        this.updateSearch(search)\r\n                    }/>}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                            <h5 className=\"panel-title p-2 pb-3\">\r\n                                <strong> Users</strong>\r\n                            </h5>\r\n                    </div>\r\n                    <div className=\"p-1\">\r\n\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap \">\r\n                                <div >\r\n                                    <button className=\"btn btn-mybtn px-5  \" onClick={this.addClicked}>Add New</button>\r\n                                <CSVLink\r\n                                    className=\"btn btn-mybtn px-3 ml-2\"\r\n                                    data={data} headers={headers} filename={\"users-page.csv\"}\r\n                                    asyncOnClick={true}\r\n                                    onClick={() => {\r\n                                        console.log(\"You click the link\"); \r\n                                    }}\r\n                                >\r\n                                    Download this page\r\n                                </CSVLink>\r\n                                <button className=\"btn btn-mybtn px-3 ml-2\" onClick={this.downloadReport}>Download All</button>\r\n                                <CSVLink\r\n                                    data={this.state.alldata}\r\n                                    filename={\"users-all.csv\"}\r\n                                    className=\"hidden\"\r\n                                    headers={headers}\r\n                                    ref={this.csvLink}\r\n                                    target=\"_blank\"\r\n                                />\r\n                                </div>                              \r\n                            {this.state.pager && <PaginationComponent {...this.state.pager}\r\n                                onNewSearch={(search) =>\r\n                                    this.updateSearch(search)\r\n                                }/>}                              \r\n                            </div>\r\n                        {this.state.message && <div className=\"alert alert-success d-flex\">{this.state.message}<i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                            onClick={this.togglemsgbox}></i></div>}\r\n                        {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                      \r\n                    <table className= \"table border-bottom my-table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th>first name</th>\r\n                                <th>last name</th>\r\n                                <th>user name</th>\r\n                                    <th>email</th>\r\n                                    {console.log(\"userRole  = \" + (userRole))}\r\n                                    {console.log(\"userRole === 'ROLE_Admin'  = \"+(userRole === 'ROLE_Admin' ))}\r\n                                    {userRole === 'ROLE_Admin' && <th> city </th>}\r\n                                    {userRole === 'ROLE_Admin' && <th> last active </th>}\r\n\r\n                                    {userRole =='ROLE_Mol' && <th>profiles</th>}\r\n                                <th>Update &emsp;&nbsp; Delete</th>                                                                     \r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                                {\r\n                                    this.state.items.map(\r\n                                    item =>\r\n                                        <tr key={item.id}>\r\n                                            <td>{item.firstName}</td>\r\n                                            <td>{item.lastName}</td>\r\n                                            <td>{item.userName}</td>\r\n                                            <td>{item.email}</td>\r\n                                            {userRole === 'ROLE_Admin' && <td> {item.countryName}/{item.cityName} </td>}\r\n                                            {userRole === 'ROLE_Admin' && <td> {item.lastActive}</td>}\r\n                                            {userRole == 'ROLE_Mol' && <td className=\"hoverable\"\r\n                                                onClick={() => {\r\n                                                    this.props.history.push(`/userProfiles?Filter.userId=${item.id}`);\r\n                                                }}>&nbsp;>></td>}\r\n                                            {item.deleted && <td>\r\n                                                &nbsp;&nbsp;deleted&emsp;&nbsp;&nbsp;{\r\n                                                    /*<button className=\"btn btn-mybtn btn-delete\" onClick={() => this.undoDeleteClicked(item.id)}>Undo</button>*/}\r\n                                            </td>}\r\n                                            {!item.deleted && <td>\r\n\r\n                                                <button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id)}>Update</button>\r\n                                                <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id)}>Delete</button></td>}\r\n                                        </tr>\r\n                                )\r\n                            }\r\n                        </tbody>\r\n                            </table>\r\n                       \r\n                </div>\r\n                </div>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default ListUsersComponent"]},"metadata":{},"sourceType":"module"}