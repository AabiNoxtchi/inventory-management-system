{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\UserComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport UserDataService from '../service/UserDataService';\nimport '../myStyles/Style.css';\nimport AuthenticationService from '../service/AuthenticationService';\nimport CustomSelect from './Filters/CustomSelect';\n\nclass UserComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.changePassword = () => {\n      this.setState({\n        changingpassword: this.state.changingpassword ? false : true\n      });\n    };\n\n    this.onFocus = event => {\n      console.log(\"on focus \");\n\n      if (event.target.autocomplete) {\n        event.target.autocomplete = \"whatever\";\n      }\n    };\n\n    this.state = {\n      id: this.props.match.params.id || -1,\n      firstName: '',\n      lastName: '',\n      userName: '',\n      email: '',\n      password: '',\n      confirmpassword: '',\n      changingpassword: this.props.match.params.id > 0 ? false : true,\n      countries: null,\n      cities: null,\n      filteredcities: null,\n      countryId: null,\n      cityId: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    let userRole = this.getUserRole();\n    {\n      console.log(\"component mount userRole  = \" + userRole);\n    }\n    console.log(this.state.id);\n    console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + (this.state.id === -1 && userRole !== 'ROLE_Admin'));\n\n    if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\n      return;\n    }\n\n    UserDataService.retrieve(this.state.id).then(response => {\n      console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        // userRole: userRole,\n        firstName: response.data.firstName,\n        lastName: response.data.lastName,\n        userName: response.data.userName,\n        email: response.data.email,\n        countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\n        cities: userRole === 'ROLE_Admin' ? response.data.cities : null,\n        filteredcities: userRole === 'ROLE_Admin' ? response.data.countryId ? this.filterCities([], response.data.cities, response.data.countryId) : response.data.cities : null,\n        countryId: userRole === 'ROLE_Admin' && response.data.countryId ? response.data.countryId : null,\n        cityId: userRole === 'ROLE_Admin' && response.data.cityId ? response.data.cityId : null\n      });\n    });\n  }\n\n  getUserRole() {\n    return AuthenticationService.getLoggedUerRole();\n  }\n\n  onSubmit(values) {\n    let user = {\n      id: this.state.id,\n      firstName: values.firstName,\n      lastName: values.lastName,\n      username: values.userName,\n      email: values.email,\n      password: this.state.changingpassword ? values.password : null,\n      cityId: this.getUserRole() === 'ROLE_Admin' ? values.cityId : null,\n      targetDate: values.targetDate\n    };\n    console.log(\"user to update = \" + JSON.stringify(user));\n    UserDataService.save(user).then(() => this.props.history.push('/users')).catch(error => {\n      console.log(\"error = \" + error);\n      console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.userName) {\n      errors.userName = 'required field !!!';\n    } else if (values.userName.length < 4) {\n      errors.userName = 'Enter at least 4 Characters';\n    }\n\n    if (!values.email) {\n      errors.email = 'required field !!!';\n    } else if (values.email.length < 4) {\n      errors.email = 'Enter at least 4 Characters';\n    }\n\n    if (this.state.id === -1 || this.state.changingpassword) {\n      if (!values.password) {\n        errors.password = 'required field !!!';\n      } else if (values.password.length < 6) {\n        errors.password = 'Enter at least 6 Characters';\n      } else if (values.password != values.confirmpassword) {\n        errors.confirmpassword = 'password and confirm password don\\'t match';\n      }\n    }\n\n    if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\n      errors.cityId = 'required field !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    // this.props.history.push('/users')\n    window.history.back();\n  }\n\n  filterCities(subs, cities, value) {\n    subs = [];\n\n    for (let i = 0; i < cities.length; i++) {\n      if (cities[i].filterBy == value) {\n        subs.push(cities[i]);\n      }\n    }\n\n    return subs;\n  }\n\n  render() {\n    const userRole = this.getUserRole();\n    let {\n      id,\n      firstName,\n      lastName,\n      userName,\n      email,\n      password,\n      confirmpassword,\n      countries,\n      cities,\n      filteredcities,\n      countryId,\n      cityId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update User\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New User \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 79\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          firstName,\n          lastName,\n          userName,\n          email,\n          password,\n          confirmpassword,\n          countries,\n          cities,\n          filteredcities,\n          countryId,\n          cityId\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          props,\n          setFieldValue,\n          values,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"first name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-4\",\n              type: \"text\",\n              name: \"firstName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"firstName\",\n              component: \"div\",\n              className: \"alert alert-warning inline-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"last name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-4\",\n              type: \"text\",\n              name: \"lastName\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"lastName\",\n              component: \"div\",\n              className: \"alert alert-warning inline-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required-field\",\n              children: \"user name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-4\",\n              type: \"text\",\n              name: \"userName\",\n              autoComplete: \"new-password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 186,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"userName\",\n              component: \"div\",\n              className: \"alert alert-warning inline-4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 33\n          }, this), console.log(\"userRole  = \" + userRole), console.log(\"userRole === 'ROLE_Admin' = \" + (userRole === 'ROLE_Admin')), console.log(\"countries = \" + JSON.stringify(countries)), console.log(\"filteredcities = \" + JSON.stringify(filteredcities)), console.log(\"values.filteredcities = \" + JSON.stringify(values.filteredcities)), userRole === 'ROLE_Admin' && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"Country\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"inline-4\",\n                items: countries,\n                value: values.countryId || '',\n                onChange: selected => {\n                  setFieldValue(\"countryId\", selected.value);\n                  let subs = values.filteredcities;\n                  subs = this.filterCities(subs, values.cities, selected.value); // let sub = values.filteredInventoryNumbers.\n\n                  /*  subs = [];\r\n                    for (let i = 0; i < values.cities.length; i++) {\r\n                          if (values.cities[i].filterBy == selected.value) {\r\n                            subs.push(values.cities[i])\r\n                        }\r\n                    }*/\n\n                  setFieldValue(\"filteredcities\", subs);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"city\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \" inline-4\",\n                items: values.filteredcities || filteredcities || cities,\n                value: values.cityId || '',\n                onChange: selected => setFieldValue(\"cityId\", selected.value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 49\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"cityId\",\n                component: \"div\",\n                className: \"alert alert-warning inline-4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required-field\",\n              children: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              type: \"email\",\n              name: \"email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"email\",\n              component: \"div\",\n              className: \"alert alert-warning w-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 33\n          }, this), this.state.id > 0 && !this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn mt-5 mb-5 d-flex\",\n            onClick: this.changePassword,\n            children: \"change password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 252,\n            columnNumber: 41\n          }, this), this.state.id > 0 && this.state.changingpassword && /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn mt-5 mb-5 d-flex\",\n            onClick: this.changePassword,\n            children: \"leave password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 41\n          }, this), (this.state.id < 1 || this.state.changingpassword) && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control w-50\",\n                type: \"password\",\n                name: \"password\",\n                autoComplete: \"new-password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"password\",\n                component: \"div\",\n                className: \"alert alert-warning w-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 261,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 45\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"confirm password\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 265,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control w-50\",\n                type: \"password\",\n                name: \"confirmpassword\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 45\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"confirmpassword\",\n                component: \"div\",\n                className: \"alert alert-warning w-50\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 267,\n                columnNumber: 49\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 45\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 256,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            disabled: !props.dirty,\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 37\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default UserComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/UserComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","UserDataService","AuthenticationService","CustomSelect","UserComponent","constructor","props","changePassword","setState","changingpassword","state","onFocus","event","console","log","target","autocomplete","id","match","params","firstName","lastName","userName","email","password","confirmpassword","countries","cities","filteredcities","countryId","cityId","onSubmit","bind","validate","cancelForm","componentDidMount","userRole","getUserRole","retrieve","then","response","JSON","stringify","data","filterCities","getLoggedUerRole","values","user","username","targetDate","save","history","push","catch","error","errors","length","window","back","subs","value","i","filterBy","render","setFieldValue","dirty","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport UserDataService from '../service/UserDataService';\r\nimport '../myStyles/Style.css';\r\nimport AuthenticationService from '../service/AuthenticationService';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\n\r\nclass UserComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id || -1,\r\n            firstName: '',\r\n            lastName: '',\r\n            userName: '',\r\n            email: '',\r\n            password: '',\r\n            confirmpassword: '',\r\n            changingpassword: this.props.match.params.id > 0 ? false : true,\r\n            countries: null,\r\n            cities: null,\r\n            filteredcities: null,\r\n            countryId: null,\r\n            cityId:null\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        let userRole = this.getUserRole();\r\n            \r\n        {\r\n            console.log(\"component mount userRole  = \" + (userRole))\r\n        }\r\n        console.log(this.state.id)\r\n        console.log(\"(this.state.id === -1 && userRole !== 'ROLE_Admin') = \" + ((this.state.id === -1 && userRole !== 'ROLE_Admin')));\r\n        if (this.state.id === -1 && userRole !== 'ROLE_Admin') {\r\n            return\r\n        }\r\n        UserDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log(\"response = \" + JSON.stringify(response));\r\n                this.setState({\r\n                   // userRole: userRole,\r\n                    firstName: response.data.firstName,\r\n                    lastName: response.data.lastName,\r\n                    userName: response.data.userName,\r\n                    email: response.data.email,\r\n                    countries: userRole === 'ROLE_Admin' ? response.data.countries : null,\r\n                    cities: userRole === 'ROLE_Admin' ? response.data.cities : null,\r\n                    filteredcities: userRole === 'ROLE_Admin' ? response.data.countryId ? \r\n                        this.filterCities([], response.data.cities, response.data.countryId): response.data.cities : null,\r\n                    countryId: userRole === 'ROLE_Admin' && response.data.countryId ? response.data.countryId : null,\r\n                    cityId: userRole === 'ROLE_Admin' && response.data.cityId ? response.data.cityId : null\r\n                })\r\n            })\r\n    }\r\n\r\n    getUserRole() {\r\n        return AuthenticationService.getLoggedUerRole();\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let user = {\r\n            id: this.state.id,\r\n            firstName: values.firstName,\r\n            lastName: values.lastName,\r\n            username: values.userName,\r\n            email: values.email,\r\n            password: this.state.changingpassword ? values.password : null,\r\n            cityId: this.getUserRole() === 'ROLE_Admin' ? values.cityId : null,\r\n            targetDate: values.targetDate\r\n        }\r\n        console.log(\"user to update = \" + JSON.stringify(user))\r\n        UserDataService.save(user)\r\n            .then(() => this.props.history.push('/users'))\r\n            .catch(error => {\r\n                console.log(\"error = \" + error);\r\n                console.log(\"error.response.data = \" + JSON.stringify(error.response.data))\r\n    })\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.userName) {\r\n            errors.userName = 'required field !!!'\r\n        } else if (values.userName.length < 4) {\r\n            errors.userName = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (!values.email) {\r\n            errors.email = 'required field !!!'\r\n        } else if (values.email.length < 4) {\r\n            errors.email = 'Enter at least 4 Characters'\r\n        }\r\n\r\n        if (this.state.id === -1 || this.state.changingpassword) {\r\n            if (!values.password) {\r\n                errors.password = 'required field !!!'\r\n            } else if (values.password.length < 6) {\r\n                errors.password = 'Enter at least 6 Characters'\r\n            } else if (values.password != values.confirmpassword) {\r\n                errors.confirmpassword='password and confirm password don\\'t match'\r\n            }\r\n        }\r\n\r\n        if (this.getUserRole() === 'ROLE_Admin' && !values.cityId) {\r\n            errors.cityId = 'required field !!!'           \r\n        }\r\n\r\n        return errors\r\n    }\r\n\r\n   cancelForm() {\r\n      // this.props.history.push('/users')\r\n       window.history.back();\r\n    }\r\n\r\n    changePassword = () => {\r\n        this.setState({\r\n            changingpassword: this.state.changingpassword ? false : true\r\n        })\r\n    }\r\n\r\n    onFocus = event => {\r\n        console.log(\"on focus \");\r\n\r\n        if (event.target.autocomplete) {\r\n            event.target.autocomplete = \"whatever\";\r\n        }\r\n\r\n    }\r\n\r\n    filterCities(subs, cities, value) {\r\n       \r\n        subs = []\r\n        for (let i = 0; i < cities.length; i++) {\r\n\r\n            if (cities[i].filterBy == value) {\r\n                subs.push(cities[i])\r\n            }\r\n        }\r\n\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n        const userRole = this.getUserRole();\r\n        let { id, firstName, lastName, userName, email, password, confirmpassword, countries, cities, filteredcities, countryId, cityId } = this.state\r\n       \r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update User</h3> : <h3 className=\"mb-3\"> Add New User </h3>}\r\n                <Formik\r\n                    initialValues={{ id, firstName, lastName, userName, email, password, confirmpassword, countries, cities, filteredcities, countryId, cityId }}\r\n                        onSubmit={this.onSubmit}\r\n                        validateOnChange={false}\r\n                        validateOnBlur={false}\r\n                        validate={this.validate}\r\n                        enableReinitialize={true}\r\n                    >\r\n                        {\r\n                        ({ props, setFieldValue, values, dirty }) => (\r\n                            <Form >                                   \r\n                                   \r\n                                    <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                   \r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>first name</label>\r\n                                    <Field className=\"form-control inline-4\" type=\"text\" name=\"firstName\" />\r\n                                        <ErrorMessage name=\"firstName\" component=\"div\"\r\n                                        className=\"alert alert-warning inline-4\" />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                        <label>last name</label>\r\n                                    <Field className=\"form-control inline-4\" type=\"text\" name=\"lastName\" />\r\n                                        <ErrorMessage name=\"lastName\" component=\"div\"\r\n                                        className=\"alert alert-warning inline-4\" />\r\n                                    </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label className=\"required-field\">user name</label>\r\n                                       \r\n                                    <Field className=\"form-control inline-4\" type=\"text\" name=\"userName\"\r\n                                            autoComplete=\"new-password\"/>\r\n                                        <ErrorMessage name=\"userName\" component=\"div\"\r\n                                        className=\"alert alert-warning inline-4\" />\r\n                                    </fieldset>\r\n                                   \r\n                                {console.log(\"userRole  = \" + (userRole))\r\n                                }\r\n                                {console.log(\"userRole === 'ROLE_Admin' = \" + (userRole === 'ROLE_Admin'))\r\n                                }\r\n                                {console.log(\"countries = \" + JSON.stringify(countries))\r\n                                }\r\n                                    {console.log(\"filteredcities = \" + JSON.stringify(filteredcities))\r\n                                    }\r\n                                {console.log(\"values.filteredcities = \" + JSON.stringify(values.filteredcities))\r\n                                }\r\n                                {userRole === 'ROLE_Admin' &&\r\n                                    <>\r\n                                    <fieldset className=\"form-group\">\r\n                                            \r\n                                                <label>Country&nbsp;</label>\r\n                                                <CustomSelect\r\n                                                className={\"inline-4\"}\r\n                                                items={countries}\r\n                                                    value={values.countryId || ''}\r\n                                                    onChange={(selected) => {\r\n                                                        setFieldValue(\"countryId\", selected.value);\r\n\r\n                                                        let subs = values.filteredcities;\r\n                                                        subs = this.filterCities(subs, values.cities, selected.value);\r\n                                                        // let sub = values.filteredInventoryNumbers.\r\n                                                      /*  subs = [];\r\n                                                        for (let i = 0; i < values.cities.length; i++) {\r\n\r\n                                                            if (values.cities[i].filterBy == selected.value) {\r\n                                                                subs.push(values.cities[i])\r\n                                                            }\r\n                                                        }*/\r\n                                                        setFieldValue(\"filteredcities\", subs);\r\n                                                    }}\r\n                                        />\r\n                                    </fieldset>\r\n                                    <fieldset className=\"form-group\">\r\n                                            \r\n                                        <label className=\"required-field\">city&nbsp;</label>\r\n                                                <CustomSelect\r\n                                                    className={\" inline-4\"}\r\n                                            items={values.filteredcities || filteredcities || cities}\r\n                                                value={values.cityId ||''}\r\n                                                    onChange={(selected) => setFieldValue(\"cityId\", selected.value)}\r\n                                        />\r\n                                        <ErrorMessage name=\"cityId\" component=\"div\"\r\n                                            className=\"alert alert-warning inline-4\" />\r\n                                           \r\n                                    </fieldset>\r\n                                    </>\r\n                                }\r\n\r\n                                <fieldset className=\"form-group\">\r\n                                    <label className=\"required-field\">email</label>\r\n                                    <Field className=\"form-control w-50\" type=\"email\" name=\"email\" />\r\n                                    <ErrorMessage name=\"email\" component=\"div\"\r\n                                        className=\"alert alert-warning w-50\" />\r\n                                </fieldset>\r\n\r\n                                    {(this.state.id > 0 && !this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-5 mb-5 d-flex\" onClick={this.changePassword}>change password</button>}\r\n                                    {(this.state.id > 0 && this.state.changingpassword) &&\r\n                                        <button className=\"btn btn-mybtn mt-5 mb-5 d-flex\" onClick={this.changePassword}>leave password</button>}\r\n                                    {(this.state.id < 1 || this.state.changingpassword) &&\r\n                                        <div>\r\n                                            <fieldset className=\"form-group\">\r\n                                        <label className=\"required-field\">password</label>\r\n                                            <Field className=\"form-control w-50\" type=\"password\" name=\"password\"\r\n                                                autoComplete=\"new-password\"/>\r\n                                                <ErrorMessage name=\"password\" component=\"div\"\r\n                                            className=\"alert alert-warning w-50\" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                        <label className=\"required-field\">confirm password</label>\r\n                                            <Field className=\"form-control w-50\" type=\"password\" name=\"confirmpassword\" />\r\n                                                <ErrorMessage name=\"confirmpassword\" component=\"div\"\r\n                                            className=\"alert alert-warning w-50\" />\r\n                                            </fieldset>\r\n                                        </div>\r\n                                    }\r\n\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\" disabled={!props.dirty}>Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                    \r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default UserComponent"]},"metadata":{},"sourceType":"module"}