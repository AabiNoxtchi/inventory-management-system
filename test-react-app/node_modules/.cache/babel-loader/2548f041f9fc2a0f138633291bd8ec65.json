{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ListPendingUsersComponent.jsx\";\nimport React, { Component } from 'react';\nimport PendingUserDataService from '../service/PendingUserDataService';\nimport PaginationComponent from './PaginationComponent';\nimport PendingUserFilter from './Filters/PendingUserFilter';\nimport '../myStyles/Style.css';\nimport Function from './Shared/Function';\nimport CityInnerComponent from './CityInnerComponent';\nimport CustomSelect from './Filters/CustomSelect';\nimport { Link, Route, withRouter } from 'react-router-dom';\n\nclass ListPendingUsersComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.updateClickedInnerChild = item => {\n      /* let messages = this.state.message;\r\n       if (messages != null )\r\n           messages = null;*/\n      item = item || {};\n      let show = this.state.cityUpdateShow;\n      show.show = !show.show;\n\n      if (show.show == true) {\n        show.city = JSON.parse(JSON.stringify(item));\n      } else {\n        show.error = '';\n      }\n\n      this.setState({\n        cityUpdateShow: show,\n        message: null\n      });\n    };\n\n    this.togglemsgbox = () => {\n      this.setState({\n        message: null\n      });\n    };\n\n    this.state = {\n      items: [],\n      message: null,\n      pager: null,\n      filter: null,\n      search: window.location.search || '',\n      alldata: [],\n      cityUpdateShow: {\n        city: {},\n        show: false\n      },\n      updatingItemId: null,\n      filterkey: 0\n    };\n    this.refresh = this.refresh.bind(this);\n    this.deleteClicked = this.deleteClicked.bind(this);\n    this.updateClicked = this.updateClicked.bind(this);\n    this.saveClicked = this.saveClicked.bind(this);\n    this.searchLink = /*#__PURE__*/React.createRef();\n  }\n\n  componentDidMount() {\n    this.refresh();\n  }\n\n  componentDidUpdate(prevProps, prevState, snapshot) {\n    // Check to see if the \"applied\" flag got changed (NOT just \"set\")\n    console.log(\"this.props.location = \" + JSON.stringify(this.props.location));\n    console.log(\"previousprops.location = \" + JSON.stringify(prevProps.location));\n    console.log(\"this.state.search = \" + this.state.search);\n    console.log(\"this.props.location.search != prevProps.location.search = \" + (this.props.location.search != prevProps.location.search));\n\n    if (this.props.location.search != prevProps.location.search || this.props.location.search.indexOf(\"refresh\") > -1) {\n      this.setState({\n        search: this.props.location.search\n      }, () => this.refresh());\n    } //if (this.props.location.state.applied && !prevProps.location.state.applied) {\n    //}\n\n  }\n\n  refresh() {\n    PendingUserDataService.retrieveAll(this.state.search).then(response => {\n      console.log(\"response = \" + JSON.stringify(response));\n      this.setState({\n        items: response.data.items || response.data.daoitems,\n        pager: response.data.pager,\n        filter: this.state.filter == null ? response.data.filter : this.state.filter,\n        filterkey: this.state.filterkey + 1\n      });\n    }).catch(error => {\n      let msg = Function.getErrorMsg(error);\n      this.showError(msg, 5); // this.setState({\n      //     errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\n      // })\n    });\n  }\n\n  showError(msg, time) {\n    // let time = 10;\n    time = time ? time : 10;\n    this.setState({\n      errormsg: msg\n    });\n    this.myInterval = setInterval(() => {\n      time = time - 1;\n\n      if (time == 0) {\n        this.setState(({\n          errormsg\n        }) => ({\n          errormsg: null\n        }));\n        clearInterval(this.myInterval);\n      }\n    }, 1000);\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.myInterval);\n  }\n\n  deleteClicked(id) {\n    PendingUserDataService.delete(id).then(response => {\n      this.setState({\n        message: `Delete successful`\n      });\n      this.refresh();\n    }).catch(error => console.log(error));\n  }\n\n  undoDeleteClicked(id) {}\n\n  updateClicked(id, countryId, newCity) {\n    // this.props.history.push(`/users/${id}`)\n    this.setState({\n      updatingItemId: id\n    });\n    this.updateClickedInnerChild({\n      \"countryId\": `${countryId}`,\n      \"name\": `${newCity}`\n    });\n  }\n\n  updateItemCityId(cityId, city) {\n    let filter = this.state.filter;\n    let cities = filter.cities;\n    cities.push({\n      \"value\": cityId,\n      \"name\": city.name,\n      \"filterBy\": city.countryId\n    }); // let id = this.state.updatingItemId;\n    // let list = this.state.items;\n    // let item = list.find(x => x.id == id);\n    // if (item == null) return;\n    // item.cityId = cityId;\n    //  item.newCity = city.name;\n    //  item.countryId = city.countryId;\n\n    this.setState({\n      // items: list,\n      filter: filter\n    });\n  }\n\n  setItemCity(selected, itemx) {\n    debugger;\n    let id = itemx.id; //this.state.updatingItemId;\n\n    let list = this.state.items;\n    let item = list.find(x => x.id == id);\n    if (item == null) return;\n    item.cityId = selected.value;\n    item.newCity = selected.label; //  item.countryId = city.countryId;\n\n    this.setState({\n      items: list\n    });\n  }\n\n  saveClicked(item) {\n    console.log(\"item = \" + JSON.stringify(item));\n    PendingUserDataService.save(item).then(response => {\n      this.setState({\n        message: `Save successful`\n      });\n      this.refresh();\n    }).catch(error => {\n      console.log(error);\n      console.log(JSON.stringify(error));\n      console.log(JSON.stringify(error.response));\n    });\n  }\n\n  togglecitybox(i) {\n    this.setState({\n      showcitybox: !this.state.showcitybox,\n      showcityboxi: i\n    });\n  }\n\n  getFilteredList(value) {\n    let subs = [];\n    let names = this.state.filter.cities;\n\n    for (let i = 0; i < names.length; i++) {\n      if (names[i].filterBy == value || names[i].value == '') {\n        subs.push(names[i]);\n      }\n    }\n\n    return subs;\n  }\n\n  updateLink(newSearch) {\n    this.setState({\n      search: newSearch\n    }, () => this.searchLink.current.click());\n  }\n\n  updateSearch(newSearch) {\n    // this.setState({ search: newSearch },\n    ///     () => this.searchLink.current.click()\n    // )\n    this.updateLink(newSearch);\n\n    if (newSearch.indexOf('Filter.filtersSet') < 0) {\n      newSearch += newSearch.length > 1 ? '&' : newSearch.length == 0 ? '?' : '';\n      newSearch += 'Filter.filtersSet=true';\n    }\n\n    console.log(\"newSearch = \" + newSearch); // this.setState({ search: newSearch } )\n    // this.refresh(newSearch);\n  }\n\n  render() {\n    const {\n      match\n    } = this.props;\n    const url = match.url;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"px-3 pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        ref: this.searchLink,\n        to: `${url}${this.state.search}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${url}/:search`,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 17\n      }, this), this.state.cityUpdateShow && this.state.cityUpdateShow.show == true && /*#__PURE__*/_jsxDEV(CityInnerComponent, {\n        cityUpdateShow: this.state.cityUpdateShow,\n        updateClickedInnerChild: () => this.updateClickedInnerChild(null),\n        setMessage: value => this.setState({\n          message: value\n        }) //refresh={() => this.refresh()}\n        ,\n        updatedCity: (id, updated) => this.updateItemCityId(id, updated)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 21\n      }, this), this.state.filter && /*#__PURE__*/_createElement(PendingUserFilter, { ...this.state.filter,\n        key: this.state.filterkey,\n        onNewSearch: search => this.updateSearch(search),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 39\n        }\n      }), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"panel-heading\",\n          children: /*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"panel-title p-2 pb-3\",\n            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \" Pending Requests\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"p-1\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \" pt-3 px-2 mx-3 d-flex flex-wrap \",\n            children: this.state.pager && /*#__PURE__*/_jsxDEV(PaginationComponent, { ...this.state.pager,\n              search: this.state.search,\n              onNewSearch: search => this.updateSearch(search)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 50\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), this.state.message && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-success d-flex\",\n            children: [this.state.message, /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"fa fa-close ml-auto pr-3 pt-1\",\n              onClick: this.togglemsgbox\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 112\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 295,\n            columnNumber: 48\n          }, this), this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 49\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border-bottom my-table\",\n            children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n              children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"user name\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 303,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"email\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 304,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"country\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"city\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 306,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                  children: \"Update \\u2003\\xA0 Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 308,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 301,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 300,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: this.state.items.map((item, i) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.username\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 317,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: item.email\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 318,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: this.state.filter.countries.find(x => x.value == item.countryId).name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 319,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  className: \"w20\",\n                  children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"\",\n                      children: [item.newCity, /*#__PURE__*/_jsxDEV(\"i\", {\n                        class: \"fa fa-caret-down ml-3 pr-3 pt-1\",\n                        onClick: () => this.togglecitybox(i)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 325,\n                        columnNumber: 61\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 322,\n                      columnNumber: 57\n                    }, this), this.state.showcitybox && this.state.showcityboxi == i && /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"above-row hidden-select-control\",\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"above-select\",\n                        children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                          className: \"inline-3 \",\n                          items: this.state.filter.cities && this.getFilteredList(item.countryId),\n                          value: item.cityId,\n                          defaultMenuIsOpen: true,\n                          onChange: selected => {\n                            //let items = this.state.items;\n                            //items[i].cityId = selected.value;\n                            //item[i].newCity = selected.name;\n                            // this.setState({items.})\n                            if (selected.value != 'undefined' && selected.value) this.setItemCity(selected, item); //item.cityId = selected.value\n                            //this.saveClicked(item)\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 330,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 329,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 328,\n                      columnNumber: 61\n                    }, this)]\n                  }, void 0, true)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 320,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [item.cityId == null && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.updateClicked(item.id, item.countryId, item.newCity),\n                    children: \"Add\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 358,\n                    columnNumber: 57\n                  }, this), item.cityId != null && /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    onClick: () => this.saveClicked(item),\n                    children: \"Save\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 360,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    onClick: () => this.deleteClicked(item.id),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 361,\n                    columnNumber: 53\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 356,\n                  columnNumber: 49\n                }, this)]\n              }, item.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 315,\n                columnNumber: 45\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 311,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 285,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ListPendingUsersComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ListPendingUsersComponent.jsx"],"names":["React","Component","PendingUserDataService","PaginationComponent","PendingUserFilter","Function","CityInnerComponent","CustomSelect","Link","Route","withRouter","ListPendingUsersComponent","constructor","props","updateClickedInnerChild","item","show","state","cityUpdateShow","city","JSON","parse","stringify","error","setState","message","togglemsgbox","items","pager","filter","search","window","location","alldata","updatingItemId","filterkey","refresh","bind","deleteClicked","updateClicked","saveClicked","searchLink","createRef","componentDidMount","componentDidUpdate","prevProps","prevState","snapshot","console","log","indexOf","retrieveAll","then","response","data","daoitems","catch","msg","getErrorMsg","showError","time","errormsg","myInterval","setInterval","clearInterval","componentWillUnmount","id","delete","undoDeleteClicked","countryId","newCity","updateItemCityId","cityId","cities","push","name","setItemCity","selected","itemx","list","find","x","value","label","save","togglecitybox","i","showcitybox","showcityboxi","getFilteredList","subs","names","length","filterBy","updateLink","newSearch","current","click","updateSearch","render","match","url","updated","map","username","email","countries"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,sBAAP,MAAmC,mCAAnC;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,iBAAP,MAA8B,6BAA9B;AACA,OAAO,uBAAP;AAEA,OAAOC,QAAP,MAAqB,mBAArB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,UAAtB,QAAwC,kBAAxC;;AAIA,MAAMC,yBAAN,SAAwCV,SAAxC,CAAkD;AAC9CW,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAmJnBC,uBAnJmB,GAmJQC,IAAD,IAAU;AAChC;AACR;AACA;AACQA,MAAAA,IAAI,GAAGA,IAAI,IAAI,EAAf;AACA,UAAIC,IAAI,GAAG,KAAKC,KAAL,CAAWC,cAAtB;AACAF,MAAAA,IAAI,CAACA,IAAL,GAAY,CAACA,IAAI,CAACA,IAAlB;;AACA,UAAIA,IAAI,CAACA,IAAL,IAAa,IAAjB,EAAuB;AACnBA,QAAAA,IAAI,CAACG,IAAL,GAAYC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeP,IAAf,CAAX,CAAZ;AAEH,OAHD,MAGO;AACHC,QAAAA,IAAI,CAACO,KAAL,GAAa,EAAb;AACH;;AACD,WAAKC,QAAL,CAAc;AACVN,QAAAA,cAAc,EAAEF,IADN;AAEVS,QAAAA,OAAO,EAAE;AAFC,OAAd;AAIH,KApKkB;;AAAA,SA2LnBC,YA3LmB,GA2LJ,MAAM;AACjB,WAAKF,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAAd;AACH,KA7LkB;;AAEf,SAAKR,KAAL,GAAa;AACTU,MAAAA,KAAK,EAAE,EADE;AAETF,MAAAA,OAAO,EAAE,IAFA;AAGTG,MAAAA,KAAK,EAAE,IAHE;AAITC,MAAAA,MAAM,EAAE,IAJC;AAKTC,MAAAA,MAAM,EAAEC,MAAM,CAACC,QAAP,CAAgBF,MAAhB,IAA0B,EALzB;AAMTG,MAAAA,OAAO,EAAE,EANA;AAOTf,MAAAA,cAAc,EAAE;AACZC,QAAAA,IAAI,EAAE,EADM;AACFH,QAAAA,IAAI,EAAE;AADJ,OAPP;AAUTkB,MAAAA,cAAc,EAAE,IAVP;AAWTC,MAAAA,SAAS,EAAE;AAXF,KAAb;AAaA,SAAKC,OAAL,GAAe,KAAKA,OAAL,CAAaC,IAAb,CAAkB,IAAlB,CAAf;AACA,SAAKC,aAAL,GAAqB,KAAKA,aAAL,CAAmBD,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKE,aAAL,GAAqB,KAAKA,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CAArB;AACA,SAAKG,WAAL,GAAmB,KAAKA,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CAAnB;AACA,SAAKI,UAAL,gBAAkBzC,KAAK,CAAC0C,SAAN,EAAlB;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,SAAKP,OAAL;AACH;;AAEDQ,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuBC,QAAvB,EAAiC;AAC/C;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,2BAA2B7B,IAAI,CAACE,SAAL,CAAe,KAAKT,KAAL,CAAWmB,QAA1B,CAAvC;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,8BAA8B7B,IAAI,CAACE,SAAL,CAAeuB,SAAS,CAACb,QAAzB,CAA1C;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyB,KAAKhC,KAAL,CAAWa,MAAhD;AAEAkB,IAAAA,OAAO,CAACC,GAAR,CAAY,gEAAgE,KAAKpC,KAAL,CAAWmB,QAAX,CAAoBF,MAApB,IAA8Be,SAAS,CAACb,QAAV,CAAmBF,MAAjH,CAAZ;;AACA,QAAI,KAAKjB,KAAL,CAAWmB,QAAX,CAAoBF,MAApB,IAA8Be,SAAS,CAACb,QAAV,CAAmBF,MAAjD,IAA2D,KAAKjB,KAAL,CAAWmB,QAAX,CAAoBF,MAApB,CAA2BoB,OAA3B,CAAmC,SAAnC,IAA8C,CAAC,CAA9G,EAAiH;AAE7G,WAAK1B,QAAL,CAAc;AAAEM,QAAAA,MAAM,EAAE,KAAKjB,KAAL,CAAWmB,QAAX,CAAoBF;AAA9B,OAAd,EACI,MAAM,KAAKM,OAAL,EADV;AAEH,KAZ8C,CAc/C;AAEA;;AACH;;AAEDA,EAAAA,OAAO,GAAG;AACNlC,IAAAA,sBAAsB,CAACiD,WAAvB,CAAmC,KAAKlC,KAAL,CAAWa,MAA9C,EACKsB,IADL,CAEQC,QAAQ,IAAI;AACRL,MAAAA,OAAO,CAACC,GAAR,CAAY,gBAAgB7B,IAAI,CAACE,SAAL,CAAe+B,QAAf,CAA5B;AACA,WAAK7B,QAAL,CAAc;AACVG,QAAAA,KAAK,EAAE0B,QAAQ,CAACC,IAAT,CAAc3B,KAAd,IAAuB0B,QAAQ,CAACC,IAAT,CAAcC,QADlC;AAEV3B,QAAAA,KAAK,EAAEyB,QAAQ,CAACC,IAAT,CAAc1B,KAFX;AAGVC,QAAAA,MAAM,EAAE,KAAKZ,KAAL,CAAWY,MAAX,IAAqB,IAArB,GAA4BwB,QAAQ,CAACC,IAAT,CAAczB,MAA1C,GAAmD,KAAKZ,KAAL,CAAWY,MAH5D;AAIVM,QAAAA,SAAS,EAAG,KAAKlB,KAAL,CAAWkB,SAAX,GAAuB;AAJzB,OAAd;AAMH,KAVT,EAWMqB,KAXN,CAWajC,KAAD,IAAW;AAEf,UAAIkC,GAAG,GAAGpD,QAAQ,CAACqD,WAAT,CAAqBnC,KAArB,CAAV;AACA,WAAKoC,SAAL,CAAeF,GAAf,EAAoB,CAApB,EAHe,CAIf;AACA;AACA;AACH,KAlBL;AAmBH;;AAEDE,EAAAA,SAAS,CAACF,GAAD,EAAMG,IAAN,EAAY;AACjB;AACAA,IAAAA,IAAI,GAAGA,IAAI,GAAGA,IAAH,GAAU,EAArB;AACA,SAAKpC,QAAL,CAAc;AACVqC,MAAAA,QAAQ,EAAEJ;AADA,KAAd;AAGA,SAAKK,UAAL,GAAkBC,WAAW,CAAC,MAAM;AAChCH,MAAAA,IAAI,GAAGA,IAAI,GAAG,CAAd;;AACA,UAAIA,IAAI,IAAI,CAAZ,EAAe;AACX,aAAKpC,QAAL,CAAc,CAAC;AAAEqC,UAAAA;AAAF,SAAD,MAAmB;AAC7BA,UAAAA,QAAQ,EAAE;AADmB,SAAnB,CAAd;AAGAG,QAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACH;AACJ,KAR4B,EAQ1B,IAR0B,CAA7B;AASH;;AAEDG,EAAAA,oBAAoB,GAAG;AACnBD,IAAAA,aAAa,CAAC,KAAKF,UAAN,CAAb;AACH;;AAKDxB,EAAAA,aAAa,CAAC4B,EAAD,EAAK;AACdhE,IAAAA,sBAAsB,CAACiE,MAAvB,CAA8BD,EAA9B,EACKd,IADL,CAEQC,QAAQ,IAAI;AACR,WAAK7B,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAG;AAAZ,OAAd;AACA,WAAKW,OAAL;AACH,KALT,EAMMoB,KANN,CAMYjC,KAAK,IACTyB,OAAO,CAACC,GAAR,CAAY1B,KAAZ,CAPR;AASH;;AAED6C,EAAAA,iBAAiB,CAACF,EAAD,EAAK,CAErB;;AAED3B,EAAAA,aAAa,CAAC2B,EAAD,EAAKG,SAAL,EAAgBC,OAAhB,EAAyB;AAClC;AACA,SAAK9C,QAAL,CAAc;AAAEU,MAAAA,cAAc,EAAEgC;AAAlB,KAAd;AACA,SAAKpD,uBAAL,CAA6B;AAAE,mBAAc,GAAEuD,SAAU,EAA5B;AAA+B,cAAS,GAAEC,OAAQ;AAAlD,KAA7B;AACH;;AAEDC,EAAAA,gBAAgB,CAACC,MAAD,EAASrD,IAAT,EAAe;AAE3B,QAAIU,MAAM,GAAG,KAAKZ,KAAL,CAAWY,MAAxB;AACA,QAAI4C,MAAM,GAAG5C,MAAM,CAAC4C,MAApB;AACAA,IAAAA,MAAM,CAACC,IAAP,CAAY;AAAE,eAASF,MAAX;AAAmB,cAAQrD,IAAI,CAACwD,IAAhC;AAAsC,kBAAYxD,IAAI,CAACkD;AAAvD,KAAZ,EAJ2B,CAM5B;AACA;AACA;AACA;AACA;AACD;AACA;;AACE,SAAK7C,QAAL,CAAc;AACX;AACHK,MAAAA,MAAM,EAAEA;AAFM,KAAd;AAIH;;AAED+C,EAAAA,WAAW,CAACC,QAAD,EAAWC,KAAX,EAAkB;AACzB;AACA,QAAIZ,EAAE,GAAGY,KAAK,CAACZ,EAAf,CAFyB,CAEP;;AAClB,QAAIa,IAAI,GAAG,KAAK9D,KAAL,CAAWU,KAAtB;AACA,QAAIZ,IAAI,GAAGgE,IAAI,CAACC,IAAL,CAAUC,CAAC,IAAIA,CAAC,CAACf,EAAF,IAAQA,EAAvB,CAAX;AACA,QAAInD,IAAI,IAAI,IAAZ,EAAkB;AAClBA,IAAAA,IAAI,CAACyD,MAAL,GAAcK,QAAQ,CAACK,KAAvB;AACAnE,IAAAA,IAAI,CAACuD,OAAL,GAAeO,QAAQ,CAACM,KAAxB,CAPyB,CAQ3B;;AAEE,SAAK3D,QAAL,CAAc;AAAEG,MAAAA,KAAK,EAAEoD;AAAT,KAAd;AACH;;AAqBDvC,EAAAA,WAAW,CAACzB,IAAD,EAAO;AAEdiC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAY7B,IAAI,CAACE,SAAL,CAAeP,IAAf,CAAxB;AACAb,IAAAA,sBAAsB,CAACkF,IAAvB,CAA4BrE,IAA5B,EACKqC,IADL,CAEQC,QAAQ,IAAI;AACR,WAAK7B,QAAL,CAAc;AAAEC,QAAAA,OAAO,EAAG;AAAZ,OAAd;AAEA,WAAKW,OAAL;AAEH,KAPT,EAQEoB,KARF,CAQQjC,KAAK,IAAI;AACbyB,MAAAA,OAAO,CAACC,GAAR,CAAY1B,KAAZ;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAI,CAACE,SAAL,CAAeC,KAAf,CAAZ;AACAyB,MAAAA,OAAO,CAACC,GAAR,CAAY7B,IAAI,CAACE,SAAL,CAAeC,KAAK,CAAC8B,QAArB,CAAZ;AACH,KAZD;AAeH;;AAODgC,EAAAA,aAAa,CAACC,CAAD,EAAG;AACZ,SAAK9D,QAAL,CAAc;AACV+D,MAAAA,WAAW,EAAE,CAAC,KAAKtE,KAAL,CAAWsE,WADf;AAEdC,MAAAA,YAAY,EAAGF;AAFD,KAAd;AAGH;;AAEDG,EAAAA,eAAe,CAACP,KAAD,EAAQ;AACnB,QAAIQ,IAAI,GAAG,EAAX;AACA,QAAIC,KAAK,GAAG,KAAK1E,KAAL,CAAWY,MAAX,CAAkB4C,MAA9B;;AAEA,SAAK,IAAIa,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,KAAK,CAACC,MAA1B,EAAkCN,CAAC,EAAnC,EAAuC;AAEnC,UAAIK,KAAK,CAACL,CAAD,CAAL,CAASO,QAAT,IAAqBX,KAArB,IAA8BS,KAAK,CAACL,CAAD,CAAL,CAASJ,KAAT,IAAkB,EAApD,EAAwD;AACpDQ,QAAAA,IAAI,CAAChB,IAAL,CAAUiB,KAAK,CAACL,CAAD,CAAf;AACH;AACJ;;AAED,WAAOI,IAAP;AACH;;AAIDI,EAAAA,UAAU,CAACC,SAAD,EAAY;AAClB,SAAKvE,QAAL,CAAc;AAAEM,MAAAA,MAAM,EAAEiE;AAAV,KAAd,EACI,MAAM,KAAKtD,UAAL,CAAgBuD,OAAhB,CAAwBC,KAAxB,EADV;AAEH;;AAEDC,EAAAA,YAAY,CAACH,SAAD,EAAY;AACpB;AACA;AACA;AACA,SAAKD,UAAL,CAAgBC,SAAhB;;AACA,QAAIA,SAAS,CAAC7C,OAAV,CAAkB,mBAAlB,IAAyC,CAA7C,EAAgD;AAC5C6C,MAAAA,SAAS,IAAIA,SAAS,CAACH,MAAV,GAAmB,CAAnB,GAAuB,GAAvB,GAA6BG,SAAS,CAACH,MAAV,IAAoB,CAApB,GAAwB,GAAxB,GAA8B,EAAxE;AACAG,MAAAA,SAAS,IAAI,wBAAb;AACH;;AAED/C,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiB8C,SAA7B,EAVoB,CAWpB;AAED;AACF;;AAIDI,EAAAA,MAAM,GAAG;AAEL,UAAM;AAAEC,MAAAA;AAAF,QAAY,KAAKvF,KAAvB;AACA,UAAMwF,GAAG,GAAGD,KAAK,CAACC,GAAlB;AAEA,wBACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BAEI,QAAC,IAAD;AAAM,QAAA,GAAG,EAAE,KAAK5D,UAAhB;AAA4B,QAAA,EAAE,EAAG,GAAE4D,GAAI,GAAE,KAAKpF,KAAL,CAAWa,MAAO;AAA3D;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI,QAAC,KAAD;AAAO,QAAA,IAAI,EAAG,GAAEuE,GAAI,UAApB;AAAA,+BACI;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAHJ,EAOK,KAAKpF,KAAL,CAAWC,cAAX,IAA6B,KAAKD,KAAL,CAAWC,cAAX,CAA0BF,IAA1B,IAAkC,IAA/D,iBACG,QAAC,kBAAD;AACA,QAAA,cAAc,EAAE,KAAKC,KAAL,CAAWC,cAD3B;AAEA,QAAA,uBAAuB,EAAE,MAAM,KAAKJ,uBAAL,CAA6B,IAA7B,CAF/B;AAGA,QAAA,UAAU,EAAGoE,KAAD,IAAW,KAAK1D,QAAL,CAAc;AAAEC,UAAAA,OAAO,EAAEyD;AAAX,SAAd,CAHvB,CAIA;AAJA;AAKA,QAAA,WAAW,EAAE,CAAChB,EAAD,EAAKoC,OAAL,KAAiB,KAAK/B,gBAAL,CAAsBL,EAAtB,EAA0BoC,OAA1B;AAL9B;AAAA;AAAA;AAAA;AAAA,cARR,EAiBK,KAAKrF,KAAL,CAAWY,MAAX,iBAAqB,eAAC,iBAAD,OAAuB,KAAKZ,KAAL,CAAWY,MAAlC;AAClB,QAAA,GAAG,EAAE,KAAKZ,KAAL,CAAWkB,SADE;AAElB,QAAA,WAAW,EAAGL,MAAD,IACT,KAAKoE,YAAL,CAAkBpE,MAAlB,CAHc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjB1B,eAsBI;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACI;AAAK,UAAA,SAAS,EAAC,eAAf;AAAA,iCACI;AAAI,YAAA,SAAS,EAAC,sBAAd;AAAA,mCACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAMI;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCAEI;AAAK,YAAA,SAAS,EAAC,mCAAf;AAAA,sBAEK,KAAKb,KAAL,CAAWW,KAAX,iBAAoB,QAAC,mBAAD,OAAyB,KAAKX,KAAL,CAAWW,KAApC;AACjB,cAAA,MAAM,EAAE,KAAKX,KAAL,CAAWa,MADF;AAEjB,cAAA,WAAW,EAAGA,MAAD,IACT,KAAKoE,YAAL,CAAkBpE,MAAlB;AAHa;AAAA;AAAA;AAAA;AAAA;AAFzB;AAAA;AAAA;AAAA;AAAA,kBAFJ,EAUK,KAAKb,KAAL,CAAWQ,OAAX,iBAAsB;AAAK,YAAA,SAAS,EAAC,4BAAf;AAAA,uBAA6C,KAAKR,KAAL,CAAWQ,OAAxD,eAAgE;AAAG,cAAA,KAAK,EAAC,+BAAT;AACnF,cAAA,OAAO,EAAE,KAAKC;AADqE;AAAA;AAAA;AAAA;AAAA,oBAAhE;AAAA;AAAA;AAAA;AAAA;AAAA,kBAV3B,EAYK,KAAKT,KAAL,CAAW4C,QAAX,iBAAuB;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA,sBAAsC,KAAK5C,KAAL,CAAW4C;AAAjD;AAAA;AAAA;AAAA;AAAA,kBAZ5B,eAcI;AAAO,YAAA,SAAS,EAAC,8BAAjB;AAAA,oCACI;AAAA,qCACI;AAAA,wCAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBALJ,eAOI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI;AAAA,wBAEQ,KAAK5C,KAAL,CAAWU,KAAX,CAAiB4E,GAAjB,CACI,CAACxF,IAAD,EAAOuE,CAAP,kBACI;AAAA,wCAEI;AAAA,4BAAKvE,IAAI,CAACyF;AAAV;AAAA;AAAA;AAAA;AAAA,wBAFJ,eAGI;AAAA,4BAAKzF,IAAI,CAAC0F;AAAV;AAAA;AAAA;AAAA;AAAA,wBAHJ,eAII;AAAA,4BAAK,KAAKxF,KAAL,CAAWY,MAAX,CAAkB6E,SAAlB,CAA4B1B,IAA5B,CAAiCC,CAAC,IAAIA,CAAC,CAACC,KAAF,IAAWnE,IAAI,CAACsD,SAAtD,EAAiEM;AAAtE;AAAA;AAAA;AAAA;AAAA,wBAJJ,eAKI;AAAI,kBAAA,SAAS,EAAC,KAAd;AAAA,yCACI;AAAA,4CACI;AAAK,sBAAA,SAAS,EAAC,EAAf;AAAA,iCACH5D,IAAI,CAACuD,OADF,eAGI;AAAG,wBAAA,KAAK,EAAC,iCAAT;AAA2C,wBAAA,OAAO,EAAE,MAAM,KAAKe,aAAL,CAAmBC,CAAnB;AAA1D;AAAA;AAAA;AAAA;AAAA,8BAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,4BADJ,EAMK,KAAKrE,KAAL,CAAWsE,WAAX,IAA0B,KAAKtE,KAAL,CAAWuE,YAAX,IAA2BF,CAArD,iBACG;AAAK,sBAAA,SAAS,EAAC,iCAAf;AAAA,6CACA;AAAK,wBAAA,SAAS,EAAC,cAAf;AAAA,+CACI,QAAC,YAAD;AACI,0BAAA,SAAS,EAAC,WADd;AAGI,0BAAA,KAAK,EAAE,KAAKrE,KAAL,CAAWY,MAAX,CAAkB4C,MAAlB,IAA4B,KAAKgB,eAAL,CAAqB1E,IAAI,CAACsD,SAA1B,CAHvC;AAII,0BAAA,KAAK,EAAEtD,IAAI,CAACyD,MAJhB;AAKI,0BAAA,iBAAiB,EAAE,IALvB;AAMI,0BAAA,QAAQ,EAAGK,QAAD,IAAc;AACpB;AAEA;AACA;AAEA;AAGA,gCAAIA,QAAQ,CAACK,KAAT,IAAkB,WAAlB,IAAiCL,QAAQ,CAACK,KAA9C,EACI,KAAKN,WAAL,CAAiBC,QAAjB,EAA2B9D,IAA3B,EAVgB,CAWhB;AACJ;AACH;AAnBL;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,4BAPR;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,wBALJ,eAyCI;AAAA,6BACKA,IAAI,CAACyD,MAAL,IAAe,IAAf,iBACG;AAAQ,oBAAA,SAAS,EAAC,oBAAlB;AAAuC,oBAAA,OAAO,EAAE,MAAM,KAAKjC,aAAL,CAAmBxB,IAAI,CAACmD,EAAxB,EAA4BnD,IAAI,CAACsD,SAAjC,EAA4CtD,IAAI,CAACuD,OAAjD,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAFR,EAGKvD,IAAI,CAACyD,MAAL,IAAe,IAAf,iBACG;AAAQ,oBAAA,SAAS,EAAC,oBAAlB;AAAuC,oBAAA,OAAO,EAAE,MAAM,KAAKhC,WAAL,CAAiBzB,IAAjB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAJR,eAKI;AAAQ,oBAAA,SAAS,EAAC,0BAAlB;AAA6C,oBAAA,OAAO,EAAE,MAAM,KAAKuB,aAAL,CAAmBvB,IAAI,CAACmD,EAAxB,CAA5D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BALJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAzCJ;AAAA,iBAASnD,IAAI,CAACmD,EAAd;AAAA;AAAA;AAAA;AAAA,sBAFR;AAFR;AAAA;AAAA;AAAA;AAAA,oBAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAqHH;;AAvW6C;;AA0WlD,eAAevD,yBAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport PendingUserDataService from '../service/PendingUserDataService';\r\nimport PaginationComponent from './PaginationComponent';\r\nimport PendingUserFilter from './Filters/PendingUserFilter';\r\nimport '../myStyles/Style.css';\r\n\r\nimport Function from './Shared/Function';\r\nimport CityInnerComponent from './CityInnerComponent';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport { Link, Route, withRouter } from 'react-router-dom'\r\n\r\n\r\n\r\nclass ListPendingUsersComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            message: null,\r\n            pager: null,\r\n            filter: null,\r\n            search: window.location.search || '',\r\n            alldata: [],\r\n            cityUpdateShow: {\r\n                city: {}, show: false\r\n            },\r\n            updatingItemId: null,\r\n            filterkey: 0\r\n        }\r\n        this.refresh = this.refresh.bind(this)\r\n        this.deleteClicked = this.deleteClicked.bind(this)\r\n        this.updateClicked = this.updateClicked.bind(this)\r\n        this.saveClicked = this.saveClicked.bind(this)\r\n        this.searchLink = React.createRef();\r\n       \r\n       \r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refresh();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        // Check to see if the \"applied\" flag got changed (NOT just \"set\")\r\n\r\n        console.log(\"this.props.location = \" + JSON.stringify(this.props.location));\r\n        console.log(\"previousprops.location = \" + JSON.stringify(prevProps.location));\r\n        console.log(\"this.state.search = \" + this.state.search);\r\n\r\n        console.log(\"this.props.location.search != prevProps.location.search = \" + (this.props.location.search != prevProps.location.search));\r\n        if (this.props.location.search != prevProps.location.search || this.props.location.search.indexOf(\"refresh\")>-1) {\r\n\r\n            this.setState({ search: this.props.location.search },\r\n                () => this.refresh())\r\n        }\r\n\r\n        //if (this.props.location.state.applied && !prevProps.location.state.applied) {\r\n\r\n        //}\r\n    }\r\n\r\n    refresh() {\r\n        PendingUserDataService.retrieveAll(this.state.search)\r\n            .then(\r\n                response => {\r\n                    console.log(\"response = \" + JSON.stringify(response));\r\n                    this.setState({\r\n                        items: response.data.items || response.data.daoitems,\r\n                        pager: response.data.pager,\r\n                        filter: this.state.filter == null ? response.data.filter : this.state.filter,\r\n                        filterkey : this.state.filterkey + 1\r\n                    });\r\n                }\r\n            ).catch((error) => {\r\n\r\n                let msg = Function.getErrorMsg(error);\r\n                this.showError(msg, 5);\r\n                // this.setState({\r\n                //     errormsg: '' + error == 'Error: Request failed with status code 401' ? 'need to login again !!!' : '' + error\r\n                // })\r\n            })\r\n    }\r\n\r\n    showError(msg, time) {\r\n        // let time = 10;\r\n        time = time ? time : 10;\r\n        this.setState({\r\n            errormsg: msg,\r\n        })\r\n        this.myInterval = setInterval(() => {\r\n            time = time - 1;\r\n            if (time == 0) {\r\n                this.setState(({ errormsg }) => ({\r\n                    errormsg: null\r\n                }))\r\n                clearInterval(this.myInterval)\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        clearInterval(this.myInterval)\r\n    }\r\n\r\n\r\n   \r\n\r\n    deleteClicked(id) {\r\n        PendingUserDataService.delete(id)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Delete successful` })\r\n                    this.refresh()\r\n                }\r\n            ).catch(error =>\r\n                console.log(error)    \r\n            )\r\n    }\r\n\r\n    undoDeleteClicked(id) {\r\n\r\n    }\r\n\r\n    updateClicked(id, countryId, newCity) {\r\n        // this.props.history.push(`/users/${id}`)\r\n        this.setState({ updatingItemId: id });\r\n        this.updateClickedInnerChild({ \"countryId\": `${countryId}`, \"name\": `${newCity}` })\r\n    }\r\n\r\n    updateItemCityId(cityId, city) {\r\n\r\n        let filter = this.state.filter;\r\n        let cities = filter.cities;\r\n        cities.push({ \"value\": cityId, \"name\": city.name, \"filterBy\": city.countryId })\r\n\r\n       // let id = this.state.updatingItemId;\r\n       // let list = this.state.items;\r\n       // let item = list.find(x => x.id == id);\r\n       // if (item == null) return;\r\n       // item.cityId = cityId;\r\n      //  item.newCity = city.name;\r\n      //  item.countryId = city.countryId;\r\n        this.setState({\r\n           // items: list,\r\n        filter: filter})\r\n\r\n    }\r\n\r\n    setItemCity(selected, itemx) {\r\n        debugger\r\n        let id = itemx.id;//this.state.updatingItemId;\r\n        let list = this.state.items;\r\n        let item = list.find(x => x.id == id);\r\n        if (item == null) return;\r\n        item.cityId = selected.value;\r\n        item.newCity = selected.label;\r\n      //  item.countryId = city.countryId;\r\n\r\n        this.setState({ items: list })\r\n    }\r\n\r\n    updateClickedInnerChild = (item) => {\r\n        /* let messages = this.state.message;\r\n         if (messages != null )\r\n             messages = null;*/\r\n        item = item || {};\r\n        let show = this.state.cityUpdateShow;\r\n        show.show = !show.show;\r\n        if (show.show == true) {\r\n            show.city = JSON.parse(JSON.stringify(item))\r\n\r\n        } else {\r\n            show.error = ''\r\n        }\r\n        this.setState({\r\n            cityUpdateShow: show,\r\n            message: null,\r\n        });\r\n    }\r\n\r\n    saveClicked(item) {\r\n\r\n        console.log(\"item = \" + JSON.stringify(item))\r\n        PendingUserDataService.save(item)\r\n            .then(\r\n                response => {\r\n                    this.setState({ message: `Save successful` })\r\n\r\n                    this.refresh()\r\n\r\n                }\r\n        ).catch(error => {\r\n            console.log(error)\r\n            console.log(JSON.stringify(error))\r\n            console.log(JSON.stringify(error.response))\r\n        }\r\n\r\n            )\r\n    }\r\n    \r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ message: null })\r\n    }\r\n\r\n    togglecitybox(i){\r\n        this.setState({\r\n            showcitybox: !this.state.showcitybox,\r\n        showcityboxi : i})\r\n    }\r\n\r\n    getFilteredList(value) {\r\n        let subs = [];\r\n        let names = this.state.filter.cities;\r\n       \r\n        for (let i = 0; i < names.length; i++) {\r\n\r\n            if (names[i].filterBy == value || names[i].value == '') {\r\n                subs.push(names[i])\r\n            }\r\n        }\r\n\r\n        return subs\r\n    }\r\n\r\n   \r\n\r\n    updateLink(newSearch) {\r\n        this.setState({ search: newSearch },\r\n            () => this.searchLink.current.click())\r\n    }\r\n\r\n    updateSearch(newSearch) {\r\n        // this.setState({ search: newSearch },\r\n        ///     () => this.searchLink.current.click()\r\n        // )\r\n        this.updateLink(newSearch);\r\n        if (newSearch.indexOf('Filter.filtersSet') < 0) {\r\n            newSearch += newSearch.length > 1 ? '&' : newSearch.length == 0 ? '?' : '';\r\n            newSearch += 'Filter.filtersSet=true'\r\n        }\r\n\r\n        console.log(\"newSearch = \" + newSearch);\r\n        // this.setState({ search: newSearch } )\r\n\r\n       // this.refresh(newSearch);\r\n    }\r\n\r\n   \r\n\r\n    render() {\r\n\r\n        const { match } = this.props;\r\n        const url = match.url;\r\n       \r\n        return (\r\n            <div className=\"px-3 pt-3\">\r\n\r\n                <Link ref={this.searchLink} to={`${url}${this.state.search}`}></Link>\r\n                <Route path={`${url}/:search`}>\r\n                    <p></p>\r\n                </Route>\r\n\r\n                {this.state.cityUpdateShow && this.state.cityUpdateShow.show == true &&\r\n                    <CityInnerComponent\r\n                    cityUpdateShow={this.state.cityUpdateShow}\r\n                    updateClickedInnerChild={() => this.updateClickedInnerChild(null)}\r\n                    setMessage={(value) => this.setState({ message: value })}\r\n                    //refresh={() => this.refresh()}\r\n                    updatedCity={(id, updated) => this.updateItemCityId(id, updated)}\r\n                    />}\r\n\r\n\r\n                {this.state.filter && <PendingUserFilter {...this.state.filter}\r\n                    key={this.state.filterkey}\r\n                    onNewSearch={(search) =>\r\n                        this.updateSearch(search)\r\n                    }/>}\r\n                <div className=\"border\">\r\n                    <div className=\"panel-heading\">\r\n                        <h5 className=\"panel-title p-2 pb-3\">\r\n                            <strong> Pending Requests</strong>\r\n                        </h5>\r\n                    </div>\r\n                    <div className=\"p-1\">\r\n\r\n                        <div className=\" pt-3 px-2 mx-3 d-flex flex-wrap \">\r\n                           \r\n                            {this.state.pager && <PaginationComponent {...this.state.pager}\r\n                                search={this.state.search}\r\n                                onNewSearch={(search) =>\r\n                                    this.updateSearch(search)\r\n                                }/>}\r\n                        </div>\r\n                        {this.state.message && <div className=\"alert alert-success d-flex\">{this.state.message}<i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                            onClick={this.togglemsgbox}></i></div>}\r\n                        {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n\r\n                        <table className=\"table border-bottom my-table\">\r\n                            <thead>\r\n                                <tr>\r\n                                  \r\n                                    <th>user name</th>\r\n                                    <th>email</th>\r\n                                    <th>country</th>\r\n                                    <th>city</th>\r\n                                   \r\n                                    <th>Update &emsp;&nbsp; Delete</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    this.state.items.map(\r\n                                        (item, i) =>\r\n                                            <tr key={item.id}>\r\n                                                \r\n                                                <td>{item.username}</td>\r\n                                                <td>{item.email}</td>\r\n                                                <td>{this.state.filter.countries.find(x => x.value == item.countryId).name}</td>\r\n                                                <td className=\"w20\">\r\n                                                    <>\r\n                                                        <div className=\"\">\r\n                                                    {item.newCity}                                                    \r\n                                                        \r\n                                                            <i class=\"fa fa-caret-down ml-3 pr-3 pt-1\" onClick={() => this.togglecitybox(i)}></i>\r\n                                                        </div>\r\n                                                        {this.state.showcitybox && this.state.showcityboxi == i &&\r\n                                                            <div className=\"above-row hidden-select-control\">\r\n                                                            <div className=\"above-select\">\r\n                                                                <CustomSelect\r\n                                                                    className=\"inline-3 \"\r\n\r\n                                                                    items={this.state.filter.cities && this.getFilteredList(item.countryId)}\r\n                                                                    value={item.cityId}\r\n                                                                    defaultMenuIsOpen={true}\r\n                                                                    onChange={(selected) => {\r\n                                                                        //let items = this.state.items;\r\n                                                                        \r\n                                                                        //items[i].cityId = selected.value;\r\n                                                                        //item[i].newCity = selected.name;\r\n\r\n                                                                        // this.setState({items.})\r\n\r\n                                                                        \r\n                                                                        if (selected.value != 'undefined' && selected.value)\r\n                                                                            this.setItemCity(selected, item);\r\n                                                                            //item.cityId = selected.value\r\n                                                                        //this.saveClicked(item)\r\n                                                                    }}\r\n                                                                />\r\n                                                            </div>\r\n                                                            </div>}\r\n                                                        </>\r\n                                                </td>\r\n                                               \r\n                                                <td>\r\n                                                    {item.cityId == null &&\r\n                                                        <button className=\"btn btn-mybtn mr-1\" onClick={() => this.updateClicked(item.id, item.countryId, item.newCity)}>Add</button>}\r\n                                                    {item.cityId != null &&\r\n                                                        <button className=\"btn btn-mybtn mr-1\" onClick={() => this.saveClicked(item)}>Save</button>}\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" onClick={() => this.deleteClicked(item.id)}>Delete</button></td>\r\n                                            </tr>\r\n                                    )\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListPendingUsersComponent"]},"metadata":{},"sourceType":"module"}