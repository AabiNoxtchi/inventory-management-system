{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\UserFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\n\nclass UserFilter extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleCancel = () => {\n      console.log('in reset 2');\n      this.setState({\n        all: null,\n        firstName: null,\n        lastName: null,\n        userName: null,\n        email: null\n      });\n    };\n\n    this.state = {\n      all: props.all,\n      firstNames: props.firstNames,\n      firstName: props.firstName,\n      lastNames: props.lastNames,\n      lastName: props.lastName,\n      userNames: props.userNames,\n      userName: props.userName,\n      emails: props.emails,\n      email: props.email,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.onReset = this.onReset.bind(this);\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      if (!key.endsWith(\"s\") && value) {\n        newPath += prefix + '.' + key + '=' + value + '&';\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    newPath = path + '?' + newPath;\n    console.log('newPath =' + newPath); // window.location.href = newPath;\n  }\n\n  onReset() {\n    console.log('in reset ');\n  }\n\n  render() {\n    const handleReset = resetForm => {\n      // if (window.confirm('Reset?')) {\n      resetForm(); // }\n    };\n\n    let {\n      all,\n      firstNames,\n      firstName,\n      lastNames,\n      lastName,\n      userNames,\n      userName,\n      emails,\n      email\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          all,\n          firstNames,\n          firstName,\n          lastNames,\n          lastName,\n          userNames,\n          userName,\n          emails,\n          email\n        },\n        onSubmit: this.onSubmit,\n        enableReinitialize: true,\n        onReset: this.onReset,\n        children: ({\n          props,\n          setFieldValue,\n          onReset\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"form-to-reset\",\n          children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"border\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"row pt-3 pb-3\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"col-12\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"form-inline\",\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"pr-3\",\n                      children: \"first name :\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow-1\",\n                      children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                        items: firstNames,\n                        value: firstName,\n                        onChange: value => this.setState({\n                          firstName: value.value\n                        }) //firstName = value.value}\n\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 103,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"pr-3\",\n                      children: \"last name :\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 49\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow-1\",\n                      children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                        items: lastNames,\n                        value: lastName,\n                        onChange: value => lastName = value.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 114,\n                        columnNumber: 53\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"pr-3\",\n                      children: \"user name :\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow-1\",\n                      children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                        items: userNames,\n                        value: userName,\n                        onChange: selected => setFieldValue(\"userName\", selected.value)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 126,\n                        columnNumber: 45\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 123,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"form-group col-3\",\n                    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                      className: \"pr-3\",\n                      children: \"email :\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 45\n                    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: \"flex-grow-1\",\n                      children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                        items: emails,\n                        value: email,\n                        onChange: value => email = value.value\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 143,\n                        columnNumber: 49\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 53\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 140,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \" btn btn-warning px-5 m-3\",\n              type: \"button\",\n              onClick: handleReset.bind(null, props.resetForm),\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-success px-5 m-3\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 37\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 17\n    }, this);\n  }\n\n}\n\nexport default UserFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/UserFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","UserFilter","constructor","props","handleCancel","console","log","setState","all","firstName","lastName","userName","email","state","firstNames","lastNames","userNames","emails","prefix","onSubmit","bind","onReset","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","render","handleReset","resetForm","setFieldValue","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\n\r\n\r\nclass UserFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all:props.all,\r\n            firstNames: props.firstNames,\r\n            firstName: props.firstName,\r\n            lastNames: props.lastNames,\r\n            lastName: props.lastName,\r\n            userNames: props.userNames,\r\n            userName: props.userName,\r\n            emails: props.emails,\r\n            email: props.email,\r\n            prefix: props.prefix\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.onReset = this.onReset.bind(this)\r\n\r\n    }\r\n    \r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'               \r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            if (!key.endsWith(\"s\") && value) {\r\n                newPath += prefix + '.' + key +'='+ value+'&'\r\n            }\r\n           \r\n        })\r\n        newPath = newPath.substring(0, newPath.length-1);\r\n        newPath = path + '?' + newPath;\r\n        console.log('newPath =' + newPath);\r\n\r\n       // window.location.href = newPath;\r\n\r\n\r\n    }\r\n    onReset() {\r\n       console.log('in reset ')\r\n    }\r\n    handleCancel = () => {\r\n        console.log('in reset 2')\r\n        this.setState({\r\n            all:null,           \r\n            firstName:null,           \r\n            lastName: null,            \r\n            userName: null,           \r\n            email: null,           \r\n        })\r\n    }\r\n\r\n    render() {  \r\n        const handleReset = (resetForm) => {\r\n           // if (window.confirm('Reset?')) {\r\n                resetForm();\r\n           // }\r\n        };\r\n\r\n        let { all, firstNames, firstName, lastNames, lastName, userNames, userName, emails, email } = this.state\r\n        return (                        \r\n                <div className=\"container\">\r\n                    <Formik\r\n                        initialValues={{ all, firstNames, firstName, lastNames, lastName, userNames, userName, emails, email }}\r\n                        onSubmit={this.onSubmit}                       \r\n                    enableReinitialize={true}\r\n                    onReset={this.onReset}\r\n                   \r\n                    >\r\n                    {({ props, setFieldValue, onReset }) => (\r\n                        <Form className=\"form-to-reset\">\r\n                                    <fieldset className=\"border\">\r\n                                <div className=\"row pt-3 pb-3\">\r\n                                        <div className=\"col-12\">\r\n                                            <div className=\"form-inline\">\r\n\r\n                                    <div className=\"form-group col-3\">                                   \r\n                                                    <label className=\"pr-3\">first name :</label>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                        <CustomSelect   \r\n                                        items={firstNames}\r\n                                        value={firstName}\r\n                                                                onChange={value =>  this.setState({ firstName: value.value })}//firstName = value.value}\r\n                                                        />\r\n                                                    </div>\r\n                                            </div>\r\n\r\n                                            <div className=\"form-group col-3\">\r\n                                                <label className=\"pr-3\">last name :</label>\r\n                                                <div className=\"flex-grow-1\">\r\n                                                    <CustomSelect\r\n                                                        items={lastNames}\r\n                                                        value={lastName}\r\n                                                        onChange={value => lastName = value.value}\r\n                                                    />\r\n                                                </div>\r\n                                            </div>\r\n                                   \r\n\r\n                                        <div className=\"form-group col-3\">   \r\n                                                    <label className=\"pr-3\">user name :</label>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                            <CustomSelect  \r\n                                                                items={userNames}\r\n                                                            value={userName}\r\n                                                            onChange={(selected) => \r\n                                                               \r\n\r\n                                                                setFieldValue(\"userName\", selected.value)\r\n                                                           \r\n                                                            }\r\n                                                        />\r\n                                                    </div>\r\n                                        </div>\r\n\r\n                                       \r\n                                        <div className=\"form-group col-3\">  \r\n                                            <label className=\"pr-3\">email :</label>\r\n                                                    <div className=\"flex-grow-1\">\r\n                                                <CustomSelect\r\n                                                items={emails}\r\n                                                value={email}\r\n                                                onChange={value => email = value.value} \r\n                                                        />\r\n                                                    </div>\r\n                                        </div>\r\n\r\n                                            </div>\r\n                                    </div>\r\n                                </div>    \r\n\r\n                                <button className=\" btn btn-warning px-5 m-3\" type=\"button\" onClick={handleReset.bind(null, props.resetForm)}>reset</button>\r\n                                        <button className=\"btn btn-success px-5 m-3\" type=\"submit\">Search</button>\r\n                                    </fieldset>\r\n                                </Form>\r\n                            )\r\n                        }\r\n                    </Formik>\r\n                </div>           \r\n        )\r\n    }\r\n}\r\n\r\nexport default UserFilter"]},"metadata":{},"sourceType":"module"}