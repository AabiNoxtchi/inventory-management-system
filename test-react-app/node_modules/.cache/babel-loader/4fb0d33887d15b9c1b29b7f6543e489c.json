{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\nimport Function from './Shared/Function';\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.isSame = values => {\n      // console.log(\"isSame(values)\");\n      // console.log(\"values = \" + JSON.stringify(values));\n      // console.log(\"values.date = \" + values.date);\n      console.log(\"(values.originalSupplierId != values.supplierId) = \" + (values.originalSupplierId != values.supplierId));\n      console.log(\"(values.originalSupplierId  = \" + values.originalSupplierId);\n      console.log(\"( values.supplierId) = \" + values.supplierId);\n      console.log(\"(values.originalDate != values.date) = \" + (values.originalDate != values.date)); //console.log(\"(values.deliveryDetailEditVMs.length != values.originaldds.length) = \" + \n      //  (!(values.deliveryDetailEditVMs.length == values.originaldds.length ||\n      //   values.deliveryDetailEditVMs.length == this.state.originaldds.length)));\n      // if (values.deliveryDetailEditVMs.length == 0)\n\n      let same = true;\n      if (values.originalSupplierId != values.supplierId) return false;\n      if (values.originalDate != values.date) return false;\n      /* if (!(values.deliveryDetailEditVMs.length == values.originaldds.length ||\r\n           values.deliveryDetailEditVMs.length == this.state.originaldds.length)) return false;*/\n      // console.log(\"values.originaldds.length = \" + values.originaldds.length);\n      //console.log(\"values.deliveryDetailEditVMs.length = \" + values.deliveryDetailEditVMs.length);\n\n      if (values.originaldds.length == 0 && values.deliveryDetailEditVMs.length == 0) return true;\n\n      if (!this.listssame(values.originaldds, values.deliveryDetailEditVMs)) {\n        if (!this.listssame(this.state.originaldds, values.deliveryDetailEditVMs)) return false;\n      } //else return false;\n      // values.originaldds.map(dd => {\n\n\n      console.log(\"same = \" + same);\n      return same;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      originaldds: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date || new Date(),\n        suppliers: response.data.suppliers,\n        originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values, actions) {\n    actions.setFieldValue('EnumErrors', null);\n    actions.setFieldValue('deletionErrors', null);\n    actions.setFieldValue('ddDeletionErrors', null);\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    }; // console.log(\"in submit delivery item = \" + JSON.stringify(item));\n\n    DeliveryDataService.save(item).then(response => {\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      console.log(\"values.originaldds\" + JSON.stringify(values.originaldds));\n      console.log(\"values.values.deliveryDetailEditVMs\" + JSON.stringify(values.deliveryDetailEditVMs));\n      let errormsg = Function.getErrorMsg(error); //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\n\n      actions.setFieldValue('EnumErrors', error.response.data.numErrors);\n      actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\n      actions.setFieldValue('ddDeletionErrors', errormsg); //values.originalSupplierId\n\n      actions.setFieldValue('originalSupplierId', values.supplierId);\n      actions.setFieldValue('originalDate', values.date);\n      actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\n      actions.setFieldValue(\"deliveryDetailEditVMs\", values.deliveryDetailEditVMs);\n      /*this.setState({\r\n          supplierId: values.supplierId,\r\n          date: values.date,\r\n         // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n      })*/\n      //console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors))//if (values.ddDeletionErrors == null )\n    });\n  }\n\n  validate(values) {\n    //console.log(\"validating : values.supplierId = \" + values.supplierId);\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    } //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\n\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    const productNums = [...values.ddEditVM.productNums];\n    const quantity = e.target.value || 0;\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          value: '',\n          name: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          if (num[0].value !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].value);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n          } else {\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.value == '-' + i);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        }\n      }\n    }\n\n    setFieldValue(\"ddEditVM.productNums\", productNums);\n    setFieldValue(\"ddEditVM.quantity\", e.target.value);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.value == id);\n    if (index < 0) updatedProductNums.push({\n      value: id,\n      name: e.target.value\n    });else updatedProductNums[index].name = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  listssame(originaldds, deliveryDetailEditVMs) {\n    console.log(\"original dds = \" + JSON.stringify(originaldds));\n    console.log(JSON.stringify(deliveryDetailEditVMs)); // console.log(\"(deliveryDetailEditVMs.length != originaldds.length) = \" + (deliveryDetailEditVMs.length != originaldds.length))\n    // debugger\n\n    if (deliveryDetailEditVMs.length != originaldds.length) return false;\n\n    for (let z = 0; z < originaldds.length; z++) {\n      console.log(\"z = \" + z);\n      let dd = originaldds[z]; // if (!same) return false;\n\n      let found = deliveryDetailEditVMs.find(x => x.productId == dd.productId);\n      console.log(\"found = \" + JSON.stringify(found));\n      console.log(\"dd = \" + JSON.stringify(dd));\n\n      if (!found) {\n        return false;\n      }\n\n      if (dd.productNums.length != found.productNums.length) {\n        return false;\n      }\n\n      if (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne) {\n        return false;\n      } // dd.productNums.map(num => {\n\n\n      for (let q = 0; q < dd.productNums.length; q++) {\n        let num = dd.productNums[q];\n        let foundNum = found.productNums.find(i => i.name == num.name);\n        console.log(\"foundNum = \" + JSON.stringify(foundNum));\n        console.log(\"num = \" + JSON.stringify(num));\n        console.log(\"foundNum = \" + (foundNum == 'undefined'));\n        console.log(\"foundNum = \" + (foundNum == undefined));\n        console.log(\"foundNum = \" + !foundNum);\n\n        if (!foundNum) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = [];\n    let productNumErrors = []; // client side validation\n\n    let EnumErrors = null; // from server\n\n    let deletionErrors = null; // from server\n\n    let originaldds = JSON.parse(JSON.stringify(this.state.originaldds));\n    let originalSupplierId = this.state.supplierId;\n    let originalDate = this.state.date;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors,\n          EnumErrors,\n          deletionErrors,\n          originaldds,\n          originalSupplierId,\n          originalDate\n        },\n        onSubmit: async (values, actions) => {\n          this.onSubmit(values, actions);\n        },\n        validateOnChange: true,\n        validateOnBlur: true,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          dirty,\n          isSubmitting,\n          touched,\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 266,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  maxDate: new Date(),\n                  onChange: date => {\n                    setFieldValue(\"date\", Function.convertDate(date));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 276,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 275,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 286,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 273,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 292,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 291,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 302,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"add/update products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-flex align-items-top  mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"product :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 312,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    className: \"d-inline-block inline-2-5\",\n                    items: products,\n                    value: values.ddEditVM.productId,\n                    onChange: selected => {\n                      setFieldValue(\"ddEditVM.productName\", selected.label);\n                      setFieldValue(\"ddEditVM.productId\", selected.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 313,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 324,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 323,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 311,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"quantity :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 329,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.quantity\",\n                    onChange: e => {\n                      this.onChangeQuantity(e, values, setFieldValue);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 330,\n                    columnNumber: 45\n                  }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 337,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 328,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"unit price :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 342,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.pricePerOne\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 343,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 347,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 346,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 341,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 310,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn mr-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let iserror = false;\n\n                    if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                      setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                      iserror = true;\n                    } else {\n                      values.deliveryDetailEditVMs.map((x, y) => {\n                        if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                          iserror = true;\n                          let ddErrorName = values.ddEditVMerror.name;\n                          ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                          setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                        }\n                      });\n                    }\n\n                    if (values.ddEditVM.pricePerOne == '') {\n                      setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity == '') {\n                      setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity > 0) {\n                      let ddErrorNums = values.productNumErrors;\n\n                      for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                        if (values.ddEditVM.productNums[i].name.length < 1) {\n                          ddErrorNums[i] = 'required field !!!';\n                          iserror = true;\n                        } else if (values.ddEditVM.productNums[i].name.length < 4) {\n                          ddErrorNums[i] = 'too short !!!';\n                          iserror = true;\n                        } else {\n                          let isSame = false;\n\n                          for (let j = 0; j < i; j++) {\n                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\n                              isSame = true;\n                              iserror = true;\n                            }\n                          }\n\n                          ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                        }\n                      }\n\n                      setFieldValue(\"productNumErrors\", ddErrorNums);\n                    }\n\n                    if (!iserror) {\n                      if (values.index === '') {\n                        let list = values.deliveryDetailEditVMs;\n                        list.push(values.ddEditVM);\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      } else {\n                        let list = values.deliveryDetailEditVMs;\n                        list[values.index] = values.ddEditVM; // edited;\n\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      }\n\n                      this.resetddEditVMForm(values, setFieldValue);\n                    }\n                  },\n                  children: values.index !== '' ? \"Update\" : \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete\",\n                  type: \"button\",\n                  onClick: () => {\n                    this.resetddEditVMForm(values, setFieldValue);\n                  },\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"mb-1\",\n              children: [values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: [\"inventory number \", i + 1, \"\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 426,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `ddEditVM.productNums.${i}.name`,\n                  type: \"text\",\n                  className: 'form-control d-inline-block inline-4 ml-1',\n                  onChange: e => {\n                    if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-' + i, values, setFieldValue);\n                    setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 427,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let list = values.ddEditVM.productNums;\n                    list.splice(i, 1);\n                    setFieldValue(\"ddEditVM.productNums\", list);\n\n                    if (values.ddEditVM.id !== '') {\n                      let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                      let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\n\n                      if (index > -1) {\n                        updatedProductNums.splice(index, 1);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      if (+num.value > 0) {\n                        let deleted = values.ddEditVM.deletedNums || [];\n                        deleted.push(num);\n                        setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                      }\n                    }\n\n                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 435,\n                  columnNumber: 45\n                }, this), values.EnumErrors && values.EnumErrors instanceof Array && values.index !== '' && values.EnumErrors[values.index] && values.EnumErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: values.EnumErrors[values.index][i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 459,\n                  columnNumber: 53\n                }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-3 pt-1\",\n                    onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 467,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 465,\n                  columnNumber: 53\n                }, this)]\n              }, num.value || i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 45\n              }, this)), values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" deleting : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 478,\n                  columnNumber: 45\n                }, this), values.ddEditVM.deletedNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `ddEditVM.deletedNums.${i}.name`,\n                    type: \"text\",\n                    className: 'form-control d-inline-block inline-4',\n                    onChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 481,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.ddEditVM.deletedNums;\n                      list.splice(i, 1);\n                      setFieldValue(\"ddEditVM.deletedNums\", list);\n                      let productNums = values.ddEditVM.productNums;\n                      productNums.push(num);\n                      setFieldValue(\"ddEditVM.productNums\", productNums);\n\n                      if (values.ddEditVM.id !== '') {\n                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                        updatedProductNums.push(num);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      setFieldValue(\"ddEditVM.quantity\", Number(values.ddEditVM.quantity) + 1);\n                    },\n                    children: \"un Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 486,\n                    columnNumber: 53\n                  }, this), values.deletionErrors && values.deletionErrors instanceof Array && values.index !== '' && values.deletionErrors[values.index] && values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-inline ml-1\",\n                    children: \"item has associated profiles with owings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 57\n                  }, this)]\n                }, num.value || i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 480,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 477,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 422,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 522,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 521,\n            columnNumber: 33\n          }, this), values.EnumErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 526,\n            columnNumber: 33\n          }, this), values.deletionErrors && values.ddDeletionErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning  mbt-01\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: values.ddDeletionErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 530,\n              columnNumber: 78\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"hoverable\",\n              onClick: () => {\n                // console.log(\"clicked\")\n                let ddlist = values.deliveryDetailEditVMs;\n                let todeleteitems = values.todeleteitems;\n                todeleteitems.map(i => ddlist.push(i)); //ddlist = ddlist.concat(todeleteitems);//push(...todeleteitems);\n                // console.log(\"todeleteitems = \" + JSON.stringify(ddlist));\n\n                setFieldValue(\"deliveryDetailEditVMs\", ddlist);\n                setFieldValue(\"deleteddds\", []);\n                setFieldValue(\"todeleteitems\", []);\n                setFieldValue(\"ddDeletionErrors\", null);\n              },\n              children: /*#__PURE__*/_jsxDEV(\"p\", {\n                className: \"inline\",\n                children: [\"return deleted items \", /*#__PURE__*/_jsxDEV(\"i\", {\n                  class: \"fa fa-undo ml-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 543,\n                  columnNumber: 79\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 543,\n                columnNumber: 36\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 531,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 530,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"required-field\",\n              children: \"products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 547,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table x-Table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 551,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 552,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 553,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '173px',\n                      padding: '.35rem .5rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 554,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 550,\n                  columnNumber: 45\n                }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: values.index === index ? \"table-active\" : \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 560,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 561,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Intl.NumberFormat(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"BGN\",\n                        maximumFractionDigits: 2\n                      }).format(dd.pricePerOne)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 562,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '173px',\n                        padding: '.35rem .5rem'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn mr-1\",\n                        type: \"button\",\n                        onClick: () => {\n                          //console.log(\"index = \" + index);                                                  \n                          setFieldValue(\"index\", index);\n                          setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)));\n                        },\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 568,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn btn-delete\",\n                        type: \"button\",\n                        onClick: () => {\n                          let list = values.deliveryDetailEditVMs;\n                          list.splice(index, 1);\n                          setFieldValue(\"deliveryDetailEditVMs\", list);\n\n                          if (dd.id > 0) {\n                            let deleted = values.deleteddds;\n                            deleted.push(dd.id);\n                            setFieldValue(\"deleteddds\", deleted);\n                            let todeleteitems = values.todeleteitems || [];\n                            todeleteitems.push(dd);\n                            setFieldValue(\"todeleteitems\", todeleteitems);\n                          }\n\n                          if (values.index == index) {\n                            this.resetddEditVMForm(values, setFieldValue);\n                          }\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 574,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 567,\n                      columnNumber: 57\n                    }, this), values.EnumErrors && values.EnumErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 597,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 596,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 595,\n                      columnNumber: 61\n                    }, this), values.deletionErrors && values.deletionErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 605,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 604,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 603,\n                      columnNumber: 61\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 559,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 549,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 548,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-5 ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn p-x-5\",\n                disabled: isSubmitting || this.isSame(values),\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 623,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 625,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 618,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 547,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 250,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","Function","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","isSame","values","console","log","originalSupplierId","supplierId","originalDate","date","same","originaldds","length","deliveryDetailEditVMs","listssame","state","id","match","params","deliveryView","number","suppliers","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","Date","JSON","parse","stringify","actions","setFieldValue","item","deletedDetailsIds","deleteddds","targetDate","save","path","history","push","catch","error","errormsg","getErrorMsg","numErrors","deletionErrors","errors","window","back","onChangeQuantity","e","productNums","ddEditVM","quantity","target","value","previousQuantity","parseInt","i","name","num","splice","undefined","deletedNums","updatedNums","updatedProductNums","findIndex","x","onUpdateProductNums","resetddEditVMForm","VM","productId","productName","pricePerOne","z","dd","found","find","q","foundNum","render","productNumErrors","EnumErrors","dirty","isSubmitting","touched","convertDate","selected","label","iserror","map","y","ddErrorName","ddErrorNums","j","list","deleted","Array","Number","indexOf","ddDeletionErrors","ddlist","todeleteitems","width","padding","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Function from './Shared/Function'\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n           suppliers: [],\r\n           originaldds : [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},           \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                 this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date || new Date(),\r\n                     suppliers: response.data.suppliers, \r\n                     originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\r\n                     deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []                    \r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n\r\n        actions.setFieldValue('EnumErrors', null);\r\n        actions.setFieldValue('deletionErrors', null);\r\n        actions.setFieldValue('ddDeletionErrors', null);\r\n      \r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number: values.number,\r\n            supplierId: values.supplierId,\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        };\r\n       // console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n\r\n\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n               let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n               this.props.history.push(path)\r\n            }).catch((error) => { \r\n                \r\n                console.log(\"values.originaldds\" + JSON.stringify(values.originaldds));\r\n                console.log(\"values.values.deliveryDetailEditVMs\" + JSON.stringify(values.deliveryDetailEditVMs));\r\n                let errormsg = Function.getErrorMsg(error);\r\n                //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\r\n                actions.setFieldValue('EnumErrors', error.response.data.numErrors);\r\n                actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\r\n                actions.setFieldValue('ddDeletionErrors', errormsg);\r\n                //values.originalSupplierId\r\n                actions.setFieldValue('originalSupplierId', values.supplierId);\r\n                actions.setFieldValue('originalDate', values.date);\r\n                actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\r\n\r\n                actions.setFieldValue(\"deliveryDetailEditVMs\", values.deliveryDetailEditVMs);\r\n\r\n                /*this.setState({\r\n                    supplierId: values.supplierId,\r\n                    date: values.date,\r\n                   // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n                })*/\r\n                //console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors))//if (values.ddDeletionErrors == null )\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n        //console.log(\"validating : values.supplierId = \" + values.supplierId);\r\n        let errors = {}  \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        const productNums = [...values.ddEditVM.productNums];\r\n        const quantity = e.target.value || 0;\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n\r\n     if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ value: '', name: '' });\r\n        }\r\n     } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n            let num = productNums.splice(i, 1);\r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               if ( num[0].value !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].value);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);                   \r\n                } else {\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.value == '-' + i);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n        }}\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];        \r\n        let index = updatedProductNums.findIndex(x => x.value == id);\r\n         if (index < 0)\r\n            updatedProductNums.push({ value: id, name: e.target.value });\r\n        else\r\n            updatedProductNums[index].name = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    isSame = (values) => {\r\n       // console.log(\"isSame(values)\");\r\n       // console.log(\"values = \" + JSON.stringify(values));\r\n       // console.log(\"values.date = \" + values.date);\r\n        console.log(\"(values.originalSupplierId != values.supplierId) = \" + (values.originalSupplierId != values.supplierId));\r\n        console.log(\"(values.originalSupplierId  = \" + (values.originalSupplierId ));\r\n        console.log(\"( values.supplierId) = \" + ( values.supplierId));\r\n        console.log(\"(values.originalDate != values.date) = \" + (values.originalDate != values.date));\r\n        //console.log(\"(values.deliveryDetailEditVMs.length != values.originaldds.length) = \" + \r\n          //  (!(values.deliveryDetailEditVMs.length == values.originaldds.length ||\r\n             //   values.deliveryDetailEditVMs.length == this.state.originaldds.length)));\r\n\r\n       // if (values.deliveryDetailEditVMs.length == 0)\r\n        let same = true;\r\n        if (values.originalSupplierId != values.supplierId) return false;\r\n        if (values.originalDate != values.date) return false;\r\n       /* if (!(values.deliveryDetailEditVMs.length == values.originaldds.length ||\r\n            values.deliveryDetailEditVMs.length == this.state.originaldds.length)) return false;*/\r\n       // console.log(\"values.originaldds.length = \" + values.originaldds.length);\r\n        //console.log(\"values.deliveryDetailEditVMs.length = \" + values.deliveryDetailEditVMs.length);\r\n        if (values.originaldds.length == 0 && values.deliveryDetailEditVMs.length == 0) return true;\r\n        if (!this.listssame(values.originaldds, values.deliveryDetailEditVMs)) {\r\n            if (!this.listssame(this.state.originaldds, values.deliveryDetailEditVMs)) return false;\r\n\r\n            }\r\n            //else return false;\r\n           // values.originaldds.map(dd => {\r\n           \r\n       \r\n        console.log(\"same = \" + same);\r\n        return same;\r\n    }\r\n\r\n    listssame(originaldds, deliveryDetailEditVMs) {\r\n        console.log(\"original dds = \" + JSON.stringify(originaldds));\r\n        console.log(JSON.stringify(deliveryDetailEditVMs))\r\n\r\n       // console.log(\"(deliveryDetailEditVMs.length != originaldds.length) = \" + (deliveryDetailEditVMs.length != originaldds.length))\r\n       // debugger\r\n        if (deliveryDetailEditVMs.length != originaldds.length) return false;\r\n\r\n        for (let z = 0; z < originaldds.length; z++) {\r\n            console.log(\"z = \" + z)\r\n            let dd = originaldds[z];\r\n            // if (!same) return false;\r\n            let found = deliveryDetailEditVMs.find(x => x.productId == dd.productId);\r\n            console.log(\"found = \" + JSON.stringify(found))\r\n            console.log(\"dd = \" + JSON.stringify(dd))\r\n            if (!found) { return false }\r\n            if ( dd.productNums.length != found.productNums.length) { return false }\r\n            if ( (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne)) { return false }\r\n\r\n            // dd.productNums.map(num => {\r\n            for (let q = 0; q < dd.productNums.length; q++) {\r\n                let num = dd.productNums[q];\r\n\r\n                let foundNum = found.productNums.find(i => i.name == num.name);\r\n                console.log(\"foundNum = \" + JSON.stringify(foundNum));\r\n                console.log(\"num = \" + JSON.stringify(num));\r\n                 console.log(\"foundNum = \" + (foundNum == 'undefined'));\r\n                 console.log(\"foundNum = \" + (foundNum == undefined));\r\n                 console.log(\"foundNum = \" + (!foundNum));\r\n                if (!foundNum) { return false }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];    \r\n        let productNumErrors = []; // client side validation\r\n        let EnumErrors = null;// from server\r\n        let deletionErrors = null; // from server\r\n        let originaldds = JSON.parse(JSON.stringify(this.state.originaldds));\r\n        let originalSupplierId = this.state.supplierId;\r\n        let originalDate = this.state.date;\r\n       \r\n        return (\r\n            <div className=\"container pt-5\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds\r\n                        , productNumErrors, EnumErrors, deletionErrors, originaldds, originalSupplierId, originalDate\r\n                    }}\r\n                   \r\n                    onSubmit={async (values, actions) => {\r\n                        this.onSubmit(values,actions)                       \r\n                    }}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={true}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ dirty, isSubmitting, touched, setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label className=\"required-field\">date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                            className=\"form-control inline-2-5\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            selected={(values.date && new Date(values.date))}\r\n                                            maxDate={new Date()}\r\n                                            onChange={date => {\r\n                                                setFieldValue(\"date\", Function.convertDate(date));\r\n                                            }} />                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                    <label className=\"required-field\">supplier</label>\r\n                                    <div>                                     \r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}/>    \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                            {/* ********************************************************  */}\r\n\r\n                            <div className=\"mt-5\"><h6>add/update products</h6>\r\n                            <fieldset className=\"d-flex align-items-top  mb-3\">                               \r\n                                  <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                            <label>product :&nbsp;</label>                                           \r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {                                                                                                 \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n                                                }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                  </div>                                   \r\n                                  <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {                                           \r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                                if (x.productName == values.ddEditVM.productName &&\r\n                                                    (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].name.length < 1) {                                                        \r\n                                                         ddErrorNums[i] = 'required field !!!';                                                      \r\n                                                        iserror = true;                                                       \r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].name.length < 4) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                    }                                                 \r\n                                                }\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;                                              \r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }\r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)                                            \r\n                                        }}>reset</button>\r\n                                  </div>\r\n                                </fieldset>                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {  values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                            <div key={num.value || i} className=\"ml-3\">                                               \r\n                                                <label className=\"required-field\">inventory number {i + 1}&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.name`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4 ml-1'}\r\n                                                    onChange={e => {                                                      \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);                                                       \r\n                                                }} /> \r\n                                            <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                onClick={() => {\r\n                                                    let list = values.ddEditVM.productNums;\r\n                                                    list.splice(i, 1)\r\n                                                    setFieldValue(\"ddEditVM.productNums\", list)\r\n                                                    if (values.ddEditVM.id !== '') {\r\n                                                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                        let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\r\n\r\n                                                        if (index > -1) {\r\n                                                            updatedProductNums.splice(index, 1)\r\n                                                            setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n                                                        }\r\n                                                        if (+num.value > 0) {\r\n                                                            let deleted = values.ddEditVM.deletedNums || [];\r\n                                                            deleted.push(num)\r\n                                                            setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                        }\r\n                                                    }\r\n                                                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                }}>Delete</button>                                                                                            \r\n                                                { values.EnumErrors && values.EnumErrors instanceof Array\r\n                                                    && values.index !== '' && values.EnumErrors[values.index]\r\n                                                    && values.EnumErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                       \r\n                                                        {values.EnumErrors[values.index][i]}\r\n                                                    </div>\r\n                                            }   \r\n                                           \r\n                                                { values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                        \r\n                                                        { values.productNumErrors[i] }\r\n                                                        <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>                                                       \r\n                                                    </div>\r\n                                                }                                                  \r\n                                            </div>\r\n                                        )}\r\n\r\n                                    {/************ deleting ***************/}\r\n\r\n                                    {values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 &&\r\n                                        <div>\r\n                                            <label> deleting : </label>\r\n                                            {values.ddEditVM.deletedNums.map((num, i) =>\r\n                                                <div key={num.value || i} className=\"ml-3\">\r\n                                                    <Field\r\n                                                        name={`ddEditVM.deletedNums.${i}.name`}\r\n                                                        type=\"text\"\r\n                                                        className={'form-control d-inline-block inline-4'}\r\n                                                        onChange={() => { }} />\r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n\r\n                                                            let list = values.ddEditVM.deletedNums;\r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.deletedNums\", list)\r\n\r\n                                                            let productNums = values.ddEditVM.productNums;\r\n                                                            productNums.push(num);\r\n                                                            setFieldValue(\"ddEditVM.productNums\", productNums);\r\n\r\n                                                            if (values.ddEditVM.id !== '') {\r\n\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                updatedProductNums.push(num);\r\n                                                                setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n\r\n                                                            }\r\n                                                            setFieldValue(\"ddEditVM.quantity\", Number(values.ddEditVM.quantity) + 1)\r\n                                                    }}>un Delete</button>                                              \r\n                                                    {values.deletionErrors && values.deletionErrors instanceof Array\r\n                                                        && values.index !== '' && values.deletionErrors[values.index] &&\r\n                                                        values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 &&\r\n                                                        <div className=\"alert alert-warning d-inline ml-1\">\r\n                                                            item has associated profiles with owings\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                </fieldset>\r\n                            </div>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                            </fieldset>\r\n                            {(values.EnumErrors) &&\r\n                                <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                            }\r\n\r\n                            {(values.deletionErrors && values.ddDeletionErrors) &&\r\n                                <div className=\"alert alert-warning  mbt-01\"><div>{values.ddDeletionErrors}</div>\r\n                                <div className=\"hoverable\" onClick={() => {\r\n                                   // console.log(\"clicked\")\r\n                                    let ddlist = values.deliveryDetailEditVMs;\r\n                                    let todeleteitems = values.todeleteitems;\r\n                                    todeleteitems.map(i =>\r\n                                        ddlist.push(i));                              \r\n                                    //ddlist = ddlist.concat(todeleteitems);//push(...todeleteitems);\r\n                                   // console.log(\"todeleteitems = \" + JSON.stringify(ddlist));\r\n                                    setFieldValue(\"deliveryDetailEditVMs\", ddlist);\r\n                                    setFieldValue(\"deleteddds\", []);\r\n                                    setFieldValue(\"todeleteitems\", []);\r\n                                    setFieldValue(\"ddDeletionErrors\", null)\r\n                                }}><p className=\"inline\">return deleted items <i class=\"fa fa-undo ml-1\"></i></p></div></div>\r\n                                }\r\n                                \r\n                               \r\n                            <div className=\"mt-3 \"><h6 className=\"required-field\">products</h6>                               \r\n                                    <table className=\"table x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                            <td style={{ width: '173px' , padding: '.35rem .5rem' }}></td>\r\n                                             </tr>\r\n                                    {\r\n                                            deliveryDetailEditVMs.map((dd, index) =>\r\n                                                <>                                                   \r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                        <td style={{ width: '173px' , padding: '.35rem .5rem' }}>\r\n                                                            <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    //console.log(\"index = \" + index);                                                  \r\n                                                                setFieldValue(\"index\", index);\r\n                                                                setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)))\r\n                                                            }}>Update</button>\r\n                                                            {/*console.log(\"typeof list dd = \" + (values.deliveryDetailEditVMs instanceof Array))*/}\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;                                                            \r\n                                                            list.splice(index, 1);\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)  \r\n                                                            \r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)\r\n\r\n                                                                let todeleteitems = values.todeleteitems || [];\r\n                                                                todeleteitems.push(dd);\r\n                                                                setFieldValue(\"todeleteitems\", todeleteitems);\r\n                                                            }\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }                                                           \r\n                                                        }}>Delete</button>\r\n                                                        </td>\r\n                                                        { values.EnumErrors && values.EnumErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                            <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                <i class=\"fa fa-bomb \"\r\n                                                                    onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                        { values.deletionErrors && values.deletionErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                                <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                    <i class=\"fa fa-bomb \"\r\n                                                                        onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                </tr>                                                \r\n                                            </>\r\n                                    )}\r\n                                        </tbody>\r\n                                </table>  \r\n\r\n                                \r\n                              \r\n                                <div className=\"mt-5 ml-3\">\r\n                                    {/*console.log(\"JSON.stringify(values.deliveryDetailEditVMs) = \" + JSON.stringify(values.deliveryDetailEditVMs))}\r\n                                    {console.log(\"JSON.stringify(values.originaldds) = \" + JSON.stringify(values.originaldds))}\r\n                                    {console.log(\" JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)) = \" +\r\n                                        (JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)))*/}\r\n                                    <button className=\"btn btn-mybtn p-x-5\" disabled={isSubmitting || this.isSame(values)}\r\n                                        type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}