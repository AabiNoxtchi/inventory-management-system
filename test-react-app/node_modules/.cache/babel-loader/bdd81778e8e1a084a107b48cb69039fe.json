{"ast":null,"code":"import React from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nexport default (({\n  products,\n  index,\n  ddEditVM,\n  onSubmit\n}) => {\n  let ddEditVMerror = '';\n  return {\n    /*  <Formik\r\n       initialValues={{\r\n           products, index, ddEditVMerror, ddEditVM\r\n       }}\r\n       onSubmit={onSubmit}\r\n       validateOnChange={false}\r\n       validateOnBlur={false}\r\n       validate={this.validate}\r\n       enableReinitialize={true}\r\n    >\r\n       {\r\n           ({ setFieldValue, values }) => (\r\n               <Form>\r\n    <fieldset className=\"form-group\">\r\n       <div className=\"d-inline\">\r\n           <label>product :&nbsp;</label>\r\n           <CustomSelect\r\n               className={\"d-inline-block inline-2\"}\r\n               items={products}\r\n               value={values.ddEditVM.productId}\r\n               onChange={(selected) => {\r\n                   let ddVM = values.ddEditVM;\r\n                   ddVM.productId = selected.value;\r\n                   ddVM.productName = selected.label;\r\n                   setFieldValue(\"ddEditVM\", ddVM);\r\n               }}\r\n           />\r\n         </div>\r\n       <div className=\"d-inline px-3\">\r\n           <label className=\"mb-1\">quantity :&nbsp;</label>\r\n           <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\" />\r\n       </div>\r\n       <div className=\"d-inline px-3\">\r\n           <label className=\"mb-1\">pricePerOne :&nbsp;</label>\r\n           <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n       </div>\r\n       <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n           if (values.index === '') {\r\n               let equals = false;\r\n               values.deliveryDetailEditVMs.map((x) => {\r\n                   if (x.productName == values.ddEditVM.productName)\r\n                       equals = true\r\n               });\r\n               if (!equals) setFieldValue(\"deliveryDetailEditVMs\", deliveryDetailEditVMs.push(values.ddEditVM))\r\n               else {\r\n                   let ddError = values.ddEditVMerror;\r\n                   ddError = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                   setFieldValue(\"ddEditVMerror\", 'error');\r\n               }\r\n           }\r\n           else {\r\n               let list = values.deliveryDetailEditVMs;\r\n               list[values.index] = values.ddEditVM;\r\n               setFieldValue(\"deliveryDetailEditVMs\", list);\r\n           }\r\n         }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n         <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n           let VM = values.ddEditVM;\r\n           VM = { id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '' };\r\n           setFieldValue(\"ddEditVM\", VM);\r\n           setFieldValue(\"index\", '');\r\n           setFieldValue(\"ddEditVMerror\", null);\r\n       }}>reset</button>\r\n       {\r\n           values.ddEditVMerror &&\r\n           <div className=\"alert alert-warning d-flex\">{values.ddEditVMerror}\r\n               <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                   onClick={() => setFieldValue(\"ddEditVMerror\", null)}></i></div>\r\n       }\r\n         <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n           className=\"alert alert-warning\" />\r\n                     </fieldset>\r\n               </Form>\r\n           )\r\n       }\r\n    </Formik>\r\n    */\n  };\n});","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryDetailComponent.jsx"],"names":["React","Formik","Form","Field","ErrorMessage","CustomSelect","products","index","ddEditVM","onSubmit","ddEditVMerror"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,KAAvB,EAA8BC,YAA9B,QAAkD,QAAlD;AACA,OAAO,uBAAP;AACA,OAAOC,YAAP,MAAyB,wBAAzB;AAEA,gBAAe,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA,KAAZ;AAAmBC,EAAAA,QAAnB;AAA6BC,EAAAA;AAA7B,CAAD,KAA6C;AAExD,MAAIC,aAAa,GAAG,EAApB;AAEA,SACI;AAAC;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA5EQ,GADJ;AAoFH,CAxFD","sourcesContent":["import React from 'react'\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\n\r\nexport default ({ products, index, ddEditVM, onSubmit }) => {\r\n\r\n    let ddEditVMerror = '';\r\n\r\n    return (\r\n        {/*  <Formik\r\n            initialValues={{\r\n                products, index, ddEditVMerror, ddEditVM\r\n            }}\r\n            onSubmit={onSubmit}\r\n            validateOnChange={false}\r\n            validateOnBlur={false}\r\n            validate={this.validate}\r\n            enableReinitialize={true}\r\n        >\r\n            {\r\n                ({ setFieldValue, values }) => (\r\n                    <Form>\r\n        <fieldset className=\"form-group\">\r\n            <div className=\"d-inline\">\r\n                <label>product :&nbsp;</label>\r\n                <CustomSelect\r\n                    className={\"d-inline-block inline-2\"}\r\n                    items={products}\r\n                    value={values.ddEditVM.productId}\r\n                    onChange={(selected) => {\r\n                        let ddVM = values.ddEditVM;\r\n                        ddVM.productId = selected.value;\r\n                        ddVM.productName = selected.label;\r\n                        setFieldValue(\"ddEditVM\", ddVM);\r\n                    }}\r\n                />\r\n\r\n            </div>\r\n            <div className=\"d-inline px-3\">\r\n                <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\" />\r\n            </div>\r\n            <div className=\"d-inline px-3\">\r\n                <label className=\"mb-1\">pricePerOne :&nbsp;</label>\r\n                <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n            </div>\r\n            <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                if (values.index === '') {\r\n                    let equals = false;\r\n                    values.deliveryDetailEditVMs.map((x) => {\r\n                        if (x.productName == values.ddEditVM.productName)\r\n                            equals = true\r\n                    });\r\n                    if (!equals) setFieldValue(\"deliveryDetailEditVMs\", deliveryDetailEditVMs.push(values.ddEditVM))\r\n                    else {\r\n                        let ddError = values.ddEditVMerror;\r\n                        ddError = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                        setFieldValue(\"ddEditVMerror\", 'error');\r\n                    }\r\n                }\r\n                else {\r\n                    let list = values.deliveryDetailEditVMs;\r\n                    list[values.index] = values.ddEditVM;\r\n                    setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                }\r\n\r\n            }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n\r\n            <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                let VM = values.ddEditVM;\r\n                VM = { id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '' };\r\n                setFieldValue(\"ddEditVM\", VM);\r\n                setFieldValue(\"index\", '');\r\n                setFieldValue(\"ddEditVMerror\", null);\r\n            }}>reset</button>\r\n            {\r\n                values.ddEditVMerror &&\r\n                <div className=\"alert alert-warning d-flex\">{values.ddEditVMerror}\r\n                    <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                        onClick={() => setFieldValue(\"ddEditVMerror\", null)}></i></div>\r\n            }\r\n\r\n            <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                className=\"alert alert-warning\" />\r\n\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n            }\r\n        </Formik>\r\n        */}\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}