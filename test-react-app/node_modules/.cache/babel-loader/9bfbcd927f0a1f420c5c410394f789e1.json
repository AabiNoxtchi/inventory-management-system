{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\SupplierFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\n\nclass SupplierFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      all: props.all,\n      name: props.name,\n      names: props.names,\n      phoneNumber: props.phoneNumber,\n      phoneNumbers: props.phoneNumbers,\n      ddcnumber: props.ddcnumber,\n      ddcnumbers: props.ddcnumbers,\n      emails: props.emails,\n      email: props.email,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    let newPath = ``;\n\n    if (search.length > 1) {\n      while (search.charAt(0) === '?') {\n        search = search.substring(1);\n      }\n\n      let searchItems = search.split('&');\n\n      for (let i = 0; i < searchItems.length; i++) {\n        if (searchItems[i].startsWith('Pager.itemsPerPage=')) newPath += searchItems[i] + '&';\n      }\n    }\n\n    let prefix = this.state.prefix;\n    Object.entries(values).map(([key, value]) => {\n      if (!key.endsWith(\"s\") && value && value != 'undefined' && value.length > 1) {\n        newPath += prefix + '.' + key + '=' + value + '&';\n      }\n    });\n    newPath = newPath.substring(0, newPath.length - 1);\n    console.log(\"new path = \" + newPath);\n    newPath = '?' + newPath;\n    newPath = this.props.onNewSearch ? newPath : path + newPath;\n    this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath;\n  }\n\n  resetForm() {\n    /* this.setState({\r\n         all: '',\r\n         name: '',\r\n         phoneNumber: '',\r\n         ddcnumber: '',\r\n         email: '',\r\n     });\r\n     console.log('in reset form ');*/\n    // window.location.href = window.location.pathname;\n    this.props.onNewSearch ? this.props.onNewSearch('') : window.location.href = window.location.pathname;\n  }\n\n  render() {\n    let {\n      all,\n      name,\n      names,\n      phoneNumber,\n      phoneNumbers,\n      ddcnumber,\n      ddcnumbers,\n      email,\n      emails\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        all,\n        name,\n        names,\n        phoneNumber,\n        phoneNumbers,\n        ddcnumber,\n        ddcnumbers,\n        email,\n        emails\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"name\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2-5\",\n              items: names,\n              value: name,\n              onChange: selected => setFieldValue(\"name\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"phone number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2\",\n              items: phoneNumbers,\n              value: phoneNumber,\n              onChange: selected => setFieldValue(\"phoneNumber\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"DDC number\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-2\",\n              name: \"ddcNumber\",\n              items: ddcnumbers,\n              value: ddcnumber,\n              onChange: selected => setFieldValue(\"ddcNumber\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"email\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-3\",\n              items: emails,\n              value: email,\n              onChange: selected => setFieldValue(\"email\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default SupplierFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/SupplierFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","SupplierFilter","constructor","props","state","all","name","names","phoneNumber","phoneNumbers","ddcnumber","ddcnumbers","emails","email","prefix","onSubmit","bind","resetForm","values","path","window","location","pathname","search","newPath","length","charAt","substring","searchItems","split","i","startsWith","Object","entries","map","key","value","endsWith","console","log","onNewSearch","history","push","href","render","setFieldValue","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css'\r\n\r\nclass SupplierFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            all: props.all,\r\n            name: props.name,\r\n            names: props.names,\r\n            phoneNumber: props.phoneNumber,\r\n            phoneNumbers: props.phoneNumbers,\r\n            ddcnumber: props.ddcnumber,\r\n            ddcnumbers: props.ddcnumbers,\r\n            emails: props.emails,\r\n            email: props.email,\r\n            prefix: props.prefix\r\n        }\r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        let newPath = ``;\r\n\r\n        if (search.length > 1) {\r\n            while (search.charAt(0) === '?') {\r\n                search = search.substring(1);\r\n            }\r\n            let searchItems = search.split('&');\r\n            for (let i = 0; i < searchItems.length; i++) {\r\n\r\n                if (searchItems[i].startsWith('Pager.itemsPerPage='))\r\n                    newPath += searchItems[i] + '&'\r\n            }\r\n        }\r\n\r\n        let prefix = this.state.prefix;\r\n        Object.entries(values).map(([key, value]) => {\r\n            if (!key.endsWith(\"s\") && value && value != 'undefined' && value.length > 1) {\r\n                newPath += prefix + '.' + key + '=' + value + '&'\r\n            }\r\n\r\n        })\r\n        newPath = newPath.substring(0, newPath.length - 1);\r\n        console.log(\"new path = \" + newPath);\r\n        newPath = '?' + newPath;\r\n        newPath = this.props.onNewSearch ? newPath : path + newPath;\r\n        this.props.onNewSearch ? this.props.onNewSearch(newPath) : this.props.history ? this.props.history.push(newPath) : window.location.href = newPath;\r\n    }\r\n\r\n    resetForm() {\r\n       /* this.setState({\r\n            all: '',\r\n            name: '',\r\n            phoneNumber: '',\r\n            ddcnumber: '',\r\n            email: '',\r\n        });\r\n        console.log('in reset form ');*/\r\n\r\n       // window.location.href = window.location.pathname;\r\n\r\n        this.props.onNewSearch ?\r\n            this.props.onNewSearch('') :\r\n            window.location.href = window.location.pathname;\r\n    }\r\n\r\n    render() {\r\n\r\n        let { all, name, names, phoneNumber, phoneNumbers, ddcnumber, ddcnumbers, email, emails } = this.state\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{ all, name, names, phoneNumber, phoneNumbers, ddcnumber, ddcnumbers, email, emails }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                            <div className=\"inline\">\r\n                                <label>name&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2-5\"}\r\n                                    items={names}\r\n                                    value={name}\r\n                                    onChange={(selected) => setFieldValue(\"name\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >phone number&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2\"}\r\n                                    items={phoneNumbers}\r\n                                    value={phoneNumber}\r\n                                    onChange={(selected) => setFieldValue(\"phoneNumber\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label>DDC number&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-2\"}\r\n                                    name=\"ddcNumber\"\r\n                                    items={ddcnumbers}\r\n                                    value={ddcnumber}\r\n                                    onChange={(selected) => setFieldValue(\"ddcNumber\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >email&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-3\"}\r\n                                    items={emails}\r\n                                    value={email}\r\n                                    onChange={(selected) => setFieldValue(\"email\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"button\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SupplierFilter"]},"metadata":{},"sourceType":"module"}