{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductDetailInnerComponent.jsx\";\nimport React, { Component } from 'react'; //import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\n//import DeliveryDataService from '../service/DeliveryDataService';\n\nimport ProductDetailDataService from '../service/ProductDetailDataService';\nimport '../myStyles/Style.css'; //import ProductDetailDataService from '../service/ProductDetailDataService';\n\nclass ProductDetailInnerComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.saveUpdatedPd = () => {\n      /*  let x = this.state.pdUpdateShow.x;    \r\n       \r\n        let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.number.trim() : null;\r\n        if (this.state.pdUpdateShow.pd == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"All fields are required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.id &&\r\n            number == this.state.pdShow[x]) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.numberExists(name, x, y, i)) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number already exist's in this delivery\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {\r\n              //console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n            let item = {\r\n                selectItem: {\r\n                    name: this.state.pdUpdateShow.pd.name.trim(), value: this.state.pdUpdateShow.pd.value\r\n                },\r\n                deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\r\n            }\r\n            console.log(\"submitting item \" + JSON.stringify(item));\r\n            ProductDetailDataService.updateNumber(item)\r\n                .then(response => {\r\n                    console.log(\"response = \" + JSON.stringify(response));\r\n                    this.props.updatePdChildClicked(null);\r\n                          let pdshow = this.state.pdShow;\r\n                      if (this.state.pdUpdateShow.i == undefined) {\r\n                        let list = pdshow[x][y].data;\r\n                        list.push({ value: response.data, name: item.selectItem.name });\r\n                        pdshow[x][y].data = list\r\n                    } else\r\n                        pdshow[x][y].data[i].name = item.selectItem.name;\r\n                      let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;\r\n                      this.props.setpdShow(pdshow);\r\n                    this.props.setpdMessage(pdmessages);\r\n                    if (this.state.pdUpdateShow.i == undefined) this.props.refresh()\r\n                  }).catch(error => {\r\n                    console.log(\"error = \" + error);\r\n                    console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\r\n                    let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = errormsg;\r\n                    this.setState({ pdUpdateShow: show })\r\n                    //this.props.setpdUpdateShow( show )\r\n                })\r\n        }*/\n    };\n\n    this.onNumberChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.number = value.target.value;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.onAvailableChange = value => {\n      /* console.log(\"value = \" + value);\r\n       console.log(\"value.target.value = \" + value.target.value);\r\n       console.log(\"value.target.value ==true \" + value.target.value == true);\r\n       console.log(\"value.target.value ==true' \" + (value.target.value == 'true'));\r\n       console.log(\"value.target.value ===true \" + value.target.value === true);\r\n       console.log(\"state.available ==true \" + this.state.pdUpdateShow.pd.available == true);\r\n       console.log(\"state.available ==true' \" + this.state.pdUpdateShow.pd.available == 'true');\r\n       console.log(\"state.available ===true \" + this.state.pdUpdateShow.pd.available === true);*/\n      var isTrue = value.target.value == 'true';\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.available = isTrue;\n      this.setState({\n        pdUpdateShow: show\n      });\n      console.log(\"state.pd = \" + JSON.stringify(this.state.pdUpdateShow.pd));\n    };\n\n    this.onDiscardedChange = value => {\n      let show = this.state.pdUpdateShow;\n      if (show.pd == null) show.pd = {};\n      show.pd.discarded = value.target.value;\n      this.setState({\n        pdUpdateShow: show\n      });\n    };\n\n    this.state = {\n      pdUpdateShow: props.pdUpdateShow,\n      // pd: props.pd,\n      message: props.message\n    };\n    console.log(\"item = \" + JSON.stringify(this.state.pdUpdateShow.pd));\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\",\n        style: {\n          width: \"60%\",\n          height: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          class: \"close\",\n          onClick: () => this.props.updateClicked(null),\n          children: \"\\xD7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"update inventory\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"alert alert-warning d-flex\",\n          children: [this.state.pdUpdateShow.error, /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fa fa-close ml-auto pr-3 pt-1\",\n            onClick: () => {\n              let show = this.state.pdUpdateShow;\n              show.error = '';\n              this.setState({\n                pdUpdateShow: show\n              });\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"h6\", {\n          className: this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\",\n          children: \"number : \"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          className: \"form-control\",\n          value: this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.inventoryNumber,\n          onChange: value => {\n            this.onNumberChange(value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pr-2 mr-2 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \"px-5\",\n            children: \"available :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: true,\n            checked: this.state.pdUpdateShow.pd.available == true,\n            onChange: value => {\n              this.onAvailableChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \" pl-1\",\n            children: \"Available\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: false,\n            checked: this.state.pdUpdateShow.pd.available == false,\n            onChange: value => {\n              this.onAvailableChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Missing\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pr-2 mr-2 mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n            className: \" px-5\",\n            children: \"discarded :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: true,\n            checked: this.state.pdUpdateShow.pd.discarded == true,\n            onChange: value => {\n              // this.onChange(value, discarded)\n              this.onDiscardedChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Discarded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 27\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            className: \"\",\n            type: \"checkbox\",\n            value: false,\n            checked: this.state.pdUpdateShow.pd.discarded == false,\n            onChange: value => {\n              this.onDiscardedChange(value); // console.log('value of checked = ' + value.target.value);\n              //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"pl-1\",\n            children: \"Alive\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn px-5 \",\n          onClick: this.saveUpdatedPd,\n          children: \"Save\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-mybtn btn-delete px-5 \",\n          onClick: () => this.props.updateClicked(null),\n          children: \"Cancel\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nexport default ProductDetailInnerComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductDetailInnerComponent.jsx"],"names":["React","Component","ProductDetailDataService","ProductDetailInnerComponent","constructor","props","saveUpdatedPd","onNumberChange","value","show","state","pdUpdateShow","pd","number","target","setState","onAvailableChange","isTrue","available","console","log","JSON","stringify","onDiscardedChange","discarded","message","render","width","height","updateClicked","error","length","inventoryNumber"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\n//import DeliveryDetailDataService from '../service/DeliveryDetailDataService';\r\n//import DeliveryDataService from '../service/DeliveryDataService';\r\nimport ProductDetailDataService from '../service/ProductDetailDataService';\r\nimport '../myStyles/Style.css';\r\n//import ProductDetailDataService from '../service/ProductDetailDataService';\r\n\r\nclass ProductDetailInnerComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state =\r\n            {\r\n                pdUpdateShow: props.pdUpdateShow,\r\n               // pd: props.pd,\r\n                message: props.message\r\n            }\r\n        console.log(\"item = \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n    }\r\n\r\n    saveUpdatedPd = () => {\r\n\r\n      /*  let x = this.state.pdUpdateShow.x;    \r\n       \r\n        let number = this.state.pdUpdateShow.pd ? this.state.pdUpdateShow.pd.number.trim() : null;\r\n        if (this.state.pdUpdateShow.pd == null) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"All fields are required\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.state.pdUpdateShow.pd.id &&\r\n            number == this.state.pdShow[x]) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number hasn't changed\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (name.length == 0) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number can't be empty\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else if (this.numberExists(name, x, y, i)) {\r\n            let show = this.state.pdUpdateShow;\r\n            show.error = \"number already exist's in this delivery\";\r\n            this.setState({ pdUpdateShow: show })\r\n        } else {\r\n\r\n            //console.log(\"submitting pd \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n            let item = {\r\n                selectItem: {\r\n                    name: this.state.pdUpdateShow.pd.name.trim(), value: this.state.pdUpdateShow.pd.value\r\n                },\r\n                deliveryDetailId: this.state.pdUpdateShow.ddid != null ? this.state.pdUpdateShow.ddid : null\r\n            }\r\n            console.log(\"submitting item \" + JSON.stringify(item));\r\n            ProductDetailDataService.updateNumber(item)\r\n                .then(response => {\r\n                    console.log(\"response = \" + JSON.stringify(response));\r\n                    this.props.updatePdChildClicked(null);\r\n\r\n\r\n\r\n                    let pdshow = this.state.pdShow;\r\n\r\n                    if (this.state.pdUpdateShow.i == undefined) {\r\n                        let list = pdshow[x][y].data;\r\n                        list.push({ value: response.data, name: item.selectItem.name });\r\n                        pdshow[x][y].data = list\r\n                    } else\r\n                        pdshow[x][y].data[i].name = item.selectItem.name;\r\n\r\n                    let pdmessages = this.state.pdmessage;\r\n                    if (pdmessages[x] == null) pdmessages[x] = [];\r\n                    pdmessages[x][y] = `Update successful`;\r\n\r\n                    this.props.setpdShow(pdshow);\r\n                    this.props.setpdMessage(pdmessages);\r\n                    if (this.state.pdUpdateShow.i == undefined) this.props.refresh()\r\n\r\n                }).catch(error => {\r\n                    console.log(\"error = \" + error);\r\n                    console.log(\"error.response.data = \" + JSON.stringify(error.response.data));\r\n                    let errormsg = error.response && error.response.data ? error.response.data.message : error + '';\r\n                    let show = this.state.pdUpdateShow;\r\n                    show.error = errormsg;\r\n                    this.setState({ pdUpdateShow: show })\r\n                    //this.props.setpdUpdateShow( show )\r\n                })\r\n        }*/\r\n    }\r\n\r\n   /* onChange = (value, field) => {\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.[field] = value.target.value;\r\n        this.setState({ pdUpdateShow: show })\r\n    }*/\r\n\r\n    onNumberChange = (value) => {\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.number = value.target.value;\r\n        this.setState({ pdUpdateShow: show })\r\n    }\r\n\r\n    onAvailableChange = (value) => {\r\n       /* console.log(\"value = \" + value);\r\n        console.log(\"value.target.value = \" + value.target.value);\r\n        console.log(\"value.target.value ==true \" + value.target.value == true);\r\n        console.log(\"value.target.value ==true' \" + (value.target.value == 'true'));\r\n        console.log(\"value.target.value ===true \" + value.target.value === true);\r\n        console.log(\"state.available ==true \" + this.state.pdUpdateShow.pd.available == true);\r\n        console.log(\"state.available ==true' \" + this.state.pdUpdateShow.pd.available == 'true');\r\n        console.log(\"state.available ===true \" + this.state.pdUpdateShow.pd.available === true);*/\r\n        var isTrue = (value.target.value == 'true');\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.available = isTrue;\r\n        this.setState({ pdUpdateShow: show })\r\n        console.log(\"state.pd = \" + JSON.stringify(this.state.pdUpdateShow.pd));\r\n    }\r\n\r\n    onDiscardedChange = (value) => {\r\n        let show = this.state.pdUpdateShow;\r\n        if (show.pd == null) show.pd = {};\r\n        show.pd.discarded = value.target.value;\r\n        this.setState({ pdUpdateShow: show })}\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n                <div className={this.state.pdUpdateShow.show ? \"overlay d-block\" : \"d-none\"}></div>\r\n                <div className={this.state.pdUpdateShow.show ? \"modal d-block\" : \"d-none\"} style={{ width: \"60%\", height: \"70%\" }}>\r\n                    <span class=\"close\" onClick={() => this.props.updateClicked(null)}>&times;</span>\r\n                    <h2>update inventory</h2>\r\n                    {this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 &&\r\n                        <div className=\"alert alert-warning d-flex\">{this.state.pdUpdateShow.error}\r\n                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                onClick={() => {\r\n                                    let show = this.state.pdUpdateShow;\r\n                                    show.error = '';\r\n                                    this.setState({ pdUpdateShow: show })\r\n                                }}>\r\n                            </i>\r\n                        </div>}\r\n                    <h6 className={this.state.pdUpdateShow.error && this.state.pdUpdateShow.error.length > 1 ? \"ml-5\" : \"mt-5 ml-5\"}>number : </h6>\r\n                    <input type=\"text\" className=\"form-control\" value={this.state.pdUpdateShow.pd && this.state.pdUpdateShow.pd.inventoryNumber}\r\n                        onChange={(value) => {\r\n                            this.onNumberChange(value)\r\n                       \r\n                    }} />\r\n                    <div className=\"pr-2 mr-2 mt-3\">\r\n                        <h6 className=\"px-5\">available :</h6>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={true} checked={this.state.pdUpdateShow.pd.available == true}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\r\n                            }}\r\n                        /><span className=\" pl-1\" >Available</span>\r\n                                <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={false} checked={this.state.pdUpdateShow.pd.available == false}\r\n                            onChange={(value) => {\r\n                                this.onAvailableChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\r\n                            }}\r\n                        /><span className=\"pl-1\" >Missing</span>\r\n                    </div>\r\n                    <div className=\"pr-2 mr-2 mt-3\">\r\n                        <h6 className=\" px-5\">discarded :</h6>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\"\r\n                            value={true} checked={this.state.pdUpdateShow.pd.discarded == true}\r\n                            onChange={(value) => {\r\n                               // this.onChange(value, discarded)\r\n                                this.onDiscardedChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == true ? null : true);\r\n                            }}\r\n                        /><span className=\"pl-1\" >Discarded</span>\r\n                        <input\r\n                            className=\"\" type=\"checkbox\" \r\n                            value={false} checked={this.state.pdUpdateShow.pd.discarded == false}\r\n                            onChange={(value) => {\r\n                                this.onDiscardedChange(value)\r\n                                // console.log('value of checked = ' + value.target.value);\r\n                                //setFieldValue(\"isAvailable\", values.isAvailable == false ? null : false);\r\n                            }}\r\n                        /><span className=\"pl-1\" >Alive</span>\r\n                    </div>\r\n                    <button className=\"btn btn-mybtn px-5 \" onClick={this.saveUpdatedPd}>Save</button>\r\n                    <button className=\"btn btn-mybtn btn-delete px-5 \" onClick={() => this.props.updateClicked(null)}>Cancel</button>\r\n                </div>\r\n            </>\r\n        )\r\n    }\r\n\r\n}\r\nexport default ProductDetailInnerComponent"]},"metadata":{},"sourceType":"module"}