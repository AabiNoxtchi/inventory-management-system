{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\nimport Function from './Shared/Function';\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.isSame = values => {\n      // console.log(\"isSame(values)\");\n      //console.log(\"values.originaldate = \" + values.originalDate);\n      // console.log(\"values.date = \" + values.date);\n      let same = true;\n      if (values.originalSupplierId != values.supplierId) return false;\n      if (values.originalDate != values.date) return false;\n      if (values.deliveryDetailEditVMs.length != values.originaldds.length) return false;\n\n      if (same) {\n        values.originaldds.map(dd => {\n          // if (!same) return false;\n          let found = values.deliveryDetailEditVMs.find(x => x.id == dd.id);\n\n          if (!found) {\n            same = false;\n          }\n\n          if (dd.productNums.length != found.productNums.length) {\n            same = false;\n          }\n\n          if (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne) {\n            same = false;\n          }\n\n          dd.productNums.map(num => {\n            let foundNum = found.productNums.find(i => i.name == num.name); // console.log(\"foundNum = \" + JSON.stringify(foundNum));\n            // console.log(\"foundNum = \" + (foundNum == 'undefined'));\n            // console.log(\"foundNum = \" + (foundNum == undefined));\n            // console.log(\"foundNum = \" + (!foundNum));\n\n            if (!foundNum) {\n              same = false;\n            }\n          });\n        });\n      } //console.log(\"same = \" + same);\n\n\n      return same;\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      deliveryView: this.props.match.params.deliveryView || '',\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      originaldds: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: {}\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date || new Date(),\n        suppliers: response.data.suppliers,\n        originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values, actions) {\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId,\n      deliveryDetailEditVMs: values.deliveryDetailEditVMs,\n      deletedDetailsIds: values.deleteddds,\n      targetDate: values.targetDate\n    };\n    console.log(\"in submit delivery item = \" + JSON.stringify(item));\n    DeliveryDataService.save(item).then(response => {\n      let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\n      this.props.history.push(path);\n    }).catch(error => {\n      console.log(\"error\" + JSON.stringify(error.response));\n      let errormsg = Function.getErrorMsg(error); //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\n\n      actions.setFieldValue('EnumErrors', error.response.data.numErrors);\n      actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\n      actions.setFieldValue('ddDeletionErrors', errormsg);\n      actions.setFieldValue('originalSuplierId', values.supplierId);\n      actions.setFieldValue('originalDate', values.date);\n      actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\n      /*this.setState({\r\n          supplierId: values.supplierId,\r\n          date: values.date,\r\n         // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n      })*/\n      //console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors))//if (values.ddDeletionErrors == null )\n    });\n  }\n\n  validate(values) {\n    //console.log(\"validating : values.supplierId = \" + values.supplierId);\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'date required field !!!';\n    }\n\n    if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\n      errors.supplierId = 'required field !!!';\n    }\n\n    if (values.deliveryDetailEditVMs.length < 1) {\n      errors.deliveryDetailEditVMs = 'delivery must have products !!!';\n    } //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\n\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  onChangeQuantity(e, values, setFieldValue) {\n    const productNums = [...values.ddEditVM.productNums];\n    const quantity = e.target.value || 0;\n    const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\n\n    if (previousQuantity < quantity) {\n      for (let i = previousQuantity; i < quantity; i++) {\n        productNums.push({\n          value: '',\n          name: ''\n        });\n      }\n    } else {\n      for (let i = previousQuantity; i >= quantity; i--) {\n        let num = productNums.splice(i, 1);\n\n        if (num[0] !== undefined && values.ddEditVM.id !== '') {\n          if (num[0].value !== '') {\n            let deletedNums = values.ddEditVM.deletedNums || [];\n            deletedNums.push(num[0].value);\n            setFieldValue(\"ddEditVM.deletedNums\", deletedNums);\n          } else {\n            let updatedNums = values.ddEditVM.updatedProductNums || [];\n            let index = updatedNums.findIndex(x => x.value == '-' + i);\n            if (index > -1) updatedNums.splice(index, 1);\n            setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\n          }\n        }\n      }\n    }\n\n    setFieldValue(\"ddEditVM.productNums\", productNums);\n    setFieldValue(\"ddEditVM.quantity\", e.target.value);\n  }\n\n  onUpdateProductNums(e, id, values, setFieldValue) {\n    let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n    let index = updatedProductNums.findIndex(x => x.value == id);\n    if (index < 0) updatedProductNums.push({\n      value: id,\n      name: e.target.value\n    });else updatedProductNums[index].name = e.target.value;\n    setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums);\n  }\n\n  resetddEditVMForm(values, setFieldValue) {\n    let VM = values.ddEditVM;\n    VM = {\n      id: '',\n      productId: 'undefined',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: []\n    };\n    setFieldValue(\"ddEditVM\", VM);\n    setFieldValue(\"index\", '');\n    setFieldValue(\"ddEditVMerror\", {});\n    setFieldValue(\"productNumErrors\", []);\n  }\n\n  render() {\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: '',\n      productNums: [],\n      updatedProductNums: [],\n      deletedNums: []\n    };\n    let deleteddds = [];\n    let productNumErrors = []; // client side validation\n\n    let EnumErrors = null; // from server\n\n    let deletionErrors = null; // from server\n\n    let originaldds = JSON.parse(JSON.stringify(this.state.originaldds));\n    let originalSupplierId = this.state.supplierId;\n    let originalDate = this.state.date;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM,\n          deleteddds,\n          productNumErrors,\n          EnumErrors,\n          deletionErrors,\n          originaldds,\n          originalSupplierId,\n          originalDate\n        },\n        onSubmit: async (values, actions) => {\n          this.onSubmit(values, actions);\n        },\n        validateOnChange: true,\n        validateOnBlur: true,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          dirty,\n          isSubmitting,\n          touched,\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 218,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control inline-2-5\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"d-flex align-items-top\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  maxDate: new Date(),\n                  onChange: date => {\n                    setFieldValue(\"date\", Function.convertDate(date));\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"date\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"required-field\",\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: /*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: values.supplierId,\n                  onChange: value => {\n                    setFieldValue(\"supplierId\", value.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                name: \"supplierId\",\n                component: \"div\",\n                className: \"alert alert-warning mbt-01\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              children: \"add/update products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 260,\n              columnNumber: 51\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"d-flex align-items-top  mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"d-flex align-items-top\",\n                children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    children: \"product :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 264,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                    className: \"d-inline-block inline-2-5\",\n                    items: products,\n                    value: values.ddEditVM.productId,\n                    onChange: selected => {\n                      setFieldValue(\"ddEditVM.productName\", selected.label);\n                      setFieldValue(\"ddEditVM.productId\", selected.value);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 265,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.name && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.name, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.name\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 276,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 263,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"quantity :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.quantity\",\n                    onChange: e => {\n                      this.onChangeQuantity(e, values, setFieldValue);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 282,\n                    columnNumber: 45\n                  }, this), values.ddEditVMerror.quantity && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.quantity, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.quantity\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 289,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 288,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"d-inline px-3\",\n                  children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                    className: \"mb-1\",\n                    children: \"unit price :\\xA0\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 294,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Field, {\n                    className: \"form-control d-inline p-1 inline-100px\",\n                    type: \"number\",\n                    min: \"0\",\n                    name: \"ddEditVM.pricePerOne\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 295,\n                    columnNumber: 41\n                  }, this), values.ddEditVMerror.pricePerOne && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-flex mbt-01\",\n                    children: [values.ddEditVMerror.pricePerOne, /*#__PURE__*/_jsxDEV(\"i\", {\n                      class: \"fa fa-close ml-auto pr-3 pt-1\",\n                      onClick: () => setFieldValue(\"ddEditVMerror.pricePerOne\", null)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 299,\n                      columnNumber: 49\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 298,\n                    columnNumber: 49\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 293,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 35\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn mr-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let iserror = false;\n\n                    if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\n                      setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\n                      iserror = true;\n                    } else {\n                      values.deliveryDetailEditVMs.map((x, y) => {\n                        if (x.productName == values.ddEditVM.productName && (values.index === '' || values.index !== '' && values.index !== y)) {\n                          iserror = true;\n                          let ddErrorName = values.ddEditVMerror.name;\n                          ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                          setFieldValue(\"ddEditVMerror.name\", ddErrorName);\n                        }\n                      });\n                    }\n\n                    if (values.ddEditVM.pricePerOne == '') {\n                      setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity == '') {\n                      setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\n                      iserror = true;\n                    }\n\n                    if (values.ddEditVM.quantity > 0) {\n                      let ddErrorNums = values.productNumErrors;\n\n                      for (let i = 0; i < values.ddEditVM.quantity; i++) {\n                        if (values.ddEditVM.productNums[i].name.length < 1) {\n                          ddErrorNums[i] = 'required field !!!';\n                          iserror = true;\n                        } else if (values.ddEditVM.productNums[i].name.length < 4) {\n                          ddErrorNums[i] = 'too short !!!';\n                          iserror = true;\n                        } else {\n                          let isSame = false;\n\n                          for (let j = 0; j < i; j++) {\n                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\n                              isSame = true;\n                              iserror = true;\n                            }\n                          }\n\n                          ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\n                        }\n                      }\n\n                      setFieldValue(\"productNumErrors\", ddErrorNums);\n                    }\n\n                    if (!iserror) {\n                      if (values.index === '') {\n                        let list = values.deliveryDetailEditVMs;\n                        list.push(values.ddEditVM);\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      } else {\n                        let list = values.deliveryDetailEditVMs;\n                        list[values.index] = values.ddEditVM; // edited;\n\n                        setFieldValue(\"deliveryDetailEditVMs\", list);\n                      }\n\n                      this.resetddEditVMForm(values, setFieldValue);\n                    }\n                  },\n                  children: values.index !== '' ? \"Update\" : \"Add\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete\",\n                  type: \"button\",\n                  onClick: () => {\n                    this.resetddEditVMForm(values, setFieldValue);\n                  },\n                  children: \"reset\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 369,\n                  columnNumber: 41\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 35\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"mb-1\",\n              children: [values.ddEditVM.productNums && values.ddEditVM.productNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ml-3\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  className: \"required-field\",\n                  children: [\"inventory number \", i + 1, \" :\\xA0\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 378,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  name: `ddEditVM.productNums.${i}.name`,\n                  type: \"text\",\n                  className: 'form-control d-inline-block inline-4',\n                  onChange: e => {\n                    if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-' + i, values, setFieldValue);\n                    setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 379,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                  className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                  type: \"button\",\n                  onClick: () => {\n                    let list = values.ddEditVM.productNums;\n                    list.splice(i, 1);\n                    setFieldValue(\"ddEditVM.productNums\", list);\n\n                    if (values.ddEditVM.id !== '') {\n                      let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                      let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\n\n                      if (index > -1) {\n                        updatedProductNums.splice(index, 1);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      if (+num.value > 0) {\n                        let deleted = values.ddEditVM.deletedNums || [];\n                        deleted.push(num);\n                        setFieldValue(\"ddEditVM.deletedNums\", deleted);\n                      }\n                    }\n\n                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1);\n                  },\n                  children: \"Delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 387,\n                  columnNumber: 45\n                }, this), values.EnumErrors && values.EnumErrors instanceof Array && values.index !== '' && values.EnumErrors[values.index] && values.EnumErrors[values.index][i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: values.EnumErrors[values.index][i]\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 411,\n                  columnNumber: 53\n                }, this), values.productNumErrors[i] && /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"alert alert-warning d-inline ml-1\",\n                  children: [values.productNumErrors[i], /*#__PURE__*/_jsxDEV(\"i\", {\n                    class: \"fa fa-close ml-3 pt-1\",\n                    onClick: () => setFieldValue(`productNumErrors.${i}`, null)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 419,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 417,\n                  columnNumber: 53\n                }, this)]\n              }, num.value || i, true, {\n                fileName: _jsxFileName,\n                lineNumber: 377,\n                columnNumber: 45\n              }, this)), values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \" deleting : \"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 430,\n                  columnNumber: 45\n                }, this), values.ddEditVM.deletedNums.map((num, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"ml-3\",\n                  children: [/*#__PURE__*/_jsxDEV(Field, {\n                    name: `ddEditVM.deletedNums.${i}.name`,\n                    type: \"text\",\n                    className: 'form-control d-inline-block inline-4',\n                    onChange: () => {}\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 433,\n                    columnNumber: 53\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete mb-1 ml-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      let list = values.ddEditVM.deletedNums;\n                      list.splice(i, 1);\n                      setFieldValue(\"ddEditVM.deletedNums\", list);\n                      let productNums = values.ddEditVM.productNums;\n                      productNums.push(num);\n                      setFieldValue(\"ddEditVM.productNums\", productNums);\n\n                      if (values.ddEditVM.id !== '') {\n                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\n                        updatedProductNums.push(num);\n                        setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums);\n                      }\n\n                      setFieldValue(\"ddEditVM.quantity\", Number(values.ddEditVM.quantity) + 1);\n                    },\n                    children: \"un Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 438,\n                    columnNumber: 53\n                  }, this), values.deletionErrors && values.deletionErrors instanceof Array && values.index !== '' && values.deletionErrors[values.index] && values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 && /*#__PURE__*/_jsxDEV(\"div\", {\n                    className: \"alert alert-warning d-inline ml-1\",\n                    children: \"item has associated profiles with owings\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 461,\n                    columnNumber: 57\n                  }, this)]\n                }, num.value || i, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 432,\n                  columnNumber: 49\n                }, this))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 374,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"deliveryDetailEditVMs\",\n              component: \"div\",\n              className: \"alert alert-warning mbt-01\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 33\n          }, this), (values.EnumErrors || values.deletionErrors) && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: \"Errors found, save not successful !!!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 478,\n            columnNumber: 33\n          }, this), values.ddDeletionErrors && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning d-flex mbt-01\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: values.ddDeletionErrors\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 482,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              className: \"hoverable\",\n              onClick: () => {\n                console.log(\"clicked\");\n                let ddlist = values.deliveryDetailEditVMs;\n                let todeleteitems = values.todeleteitems;\n                ddlist = ddlist.push(...todeleteitems);\n                console.log(\"todeleteitems = \" + JSON.stringify(todeleteitems));\n                setFieldValue(\"deliveryDetailEditVMs\", ddlist);\n                setFieldValue(\"deleteddds\", []);\n                setFieldValue(\"todeleteitems\", []);\n              },\n              children: \"return deleted items\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 483,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 482,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"mt-3 \",\n            children: [/*#__PURE__*/_jsxDEV(\"h6\", {\n              className: \"required-field\",\n              children: \"products\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 497,\n              columnNumber: 52\n            }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n              className: \"table x-Table\",\n              children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n                children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Product\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 501,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Quantity\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 502,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    children: \"Unit Price\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 503,\n                    columnNumber: 49\n                  }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                    style: {\n                      width: '173px',\n                      padding: '.35rem .5rem'\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 504,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 500,\n                  columnNumber: 45\n                }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: /*#__PURE__*/_jsxDEV(\"tr\", {\n                    className: values.index === index ? \"table-active\" : \"\",\n                    children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.productName\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 510,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: dd.quantity\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 511,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      children: new Intl.NumberFormat(\"en-GB\", {\n                        style: \"currency\",\n                        currency: \"BGN\",\n                        maximumFractionDigits: 2\n                      }).format(dd.pricePerOne)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 512,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '173px',\n                        padding: '.35rem .5rem'\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn mr-1\",\n                        type: \"button\",\n                        onClick: () => {\n                          //console.log(\"index = \" + index);                                                  \n                          setFieldValue(\"index\", index);\n                          setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)));\n                        },\n                        children: \"Update\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 518,\n                        columnNumber: 61\n                      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                        className: \"btn btn-mybtn btn-delete\",\n                        type: \"button\",\n                        onClick: () => {\n                          let list = values.deliveryDetailEditVMs;\n                          list.splice(index, 1);\n                          setFieldValue(\"deliveryDetailEditVMs\", list);\n\n                          if (dd.id > 0) {\n                            let deleted = values.deleteddds;\n                            deleted.push(dd.id);\n                            setFieldValue(\"deleteddds\", deleted);\n                            let todeleteitems = values.todeleteitems || [];\n                            todeleteitems.push(dd);\n                            setFieldValue(\"todeleteitems\", todeleteitems);\n                          }\n\n                          if (values.index == index) {\n                            this.resetddEditVMForm(values, setFieldValue);\n                          }\n                        },\n                        children: \"Delete\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 523,\n                        columnNumber: 53\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 517,\n                      columnNumber: 57\n                    }, this), values.EnumErrors && values.EnumErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 546,\n                          columnNumber: 65\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 545,\n                        columnNumber: 61\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 544,\n                      columnNumber: 61\n                    }, this), values.deletionErrors && values.deletionErrors[index] && /*#__PURE__*/_jsxDEV(\"td\", {\n                      style: {\n                        width: '4%',\n                        padding: '.75rem'\n                      },\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: \"alert alert-warning d-inline p-2\",\n                        children: /*#__PURE__*/_jsxDEV(\"i\", {\n                          class: \"fa fa-bomb \",\n                          onClick: () => {}\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 554,\n                          columnNumber: 69\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 553,\n                        columnNumber: 65\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 552,\n                      columnNumber: 61\n                    }, this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 509,\n                    columnNumber: 45\n                  }, this)\n                }, void 0, false))]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 499,\n                columnNumber: 41\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 498,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"mt-5 ml-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn p-x-5\",\n                disabled: isSubmitting || this.isSame(values),\n                type: \"submit\",\n                children: \"Save\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 572,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n                type: \"button\",\n                onClick: this.cancelForm,\n                children: \"Cancel\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 574,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 567,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 497,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","FieldArray","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","Function","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","isSame","values","same","originalSupplierId","supplierId","originalDate","date","deliveryDetailEditVMs","length","originaldds","map","dd","found","find","x","id","productNums","productId","pricePerOne","num","foundNum","i","name","state","match","params","deliveryView","number","suppliers","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","data","Date","JSON","parse","stringify","actions","item","deletedDetailsIds","deleteddds","targetDate","console","log","save","path","history","push","catch","error","errormsg","getErrorMsg","setFieldValue","numErrors","deletionErrors","errors","window","back","onChangeQuantity","e","ddEditVM","quantity","target","value","previousQuantity","parseInt","splice","undefined","deletedNums","updatedNums","updatedProductNums","findIndex","onUpdateProductNums","resetddEditVMForm","VM","productName","render","productNumErrors","EnumErrors","dirty","isSubmitting","touched","convertDate","selected","label","iserror","y","ddErrorName","ddErrorNums","j","list","deleted","Array","Number","indexOf","ddDeletionErrors","ddlist","todeleteitems","width","padding","Intl","NumberFormat","style","currency","maximumFractionDigits","format"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, FieldArray, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\nimport Function from './Shared/Function'\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n       this.state = {\r\n            id: this.props.match.params.id,\r\n            deliveryView: this.props.match.params.deliveryView || '',\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n           suppliers: [],\r\n            originaldds : [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror: {},           \r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n        DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                 this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date || new Date(),\r\n                     suppliers: response.data.suppliers, \r\n                     originaldds: JSON.parse(JSON.stringify(response.data.deliveryDetailEditVMs)) || [],\r\n                     deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []                    \r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n      \r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number: values.number,\r\n            supplierId: values.supplierId,\r\n            deliveryDetailEditVMs: values.deliveryDetailEditVMs,\r\n            deletedDetailsIds: values.deleteddds,\r\n            targetDate: values.targetDate\r\n        };\r\n        console.log(\"in submit delivery item = \" + JSON.stringify(item));\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n               let path = this.state.deliveryView.length > 0 ? '/deliveries?deliveryView=DeliveryDetailView' : '/deliveries';\r\n               this.props.history.push(path)\r\n            }).catch((error) => {              \r\n                console.log(\"error\" + JSON.stringify(error.response));\r\n                let errormsg = Function.getErrorMsg(error);\r\n                //console.log(\"error.response.data.deletionErrors.indexOf(69) = \" + JSON.stringify(error.response.data.deletionErrors[0].indexOf(69)));\r\n                actions.setFieldValue('EnumErrors', error.response.data.numErrors);\r\n                actions.setFieldValue('deletionErrors', error.response.data.deletionErrors);\r\n                actions.setFieldValue('ddDeletionErrors', errormsg);\r\n\r\n                actions.setFieldValue('originalSuplierId', values.supplierId);\r\n                actions.setFieldValue('originalDate', values.date);\r\n                actions.setFieldValue('originaldds', JSON.parse(JSON.stringify(values.deliveryDetailEditVMs)));\r\n\r\n                /*this.setState({\r\n                    supplierId: values.supplierId,\r\n                    date: values.date,\r\n                   // originaldds: JSON.parse(JSON.stringify(values.deliveryDetailEditVMs))\r\n                })*/\r\n                //console.log(\"values.ddErrors = \" + JSON.stringify(values.ddDeletionErrors))//if (values.ddDeletionErrors == null )\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n        //console.log(\"validating : values.supplierId = \" + values.supplierId);\r\n        let errors = {}  \r\n        if (!values.date) {\r\n            errors.date = 'date required field !!!'\r\n        }\r\n        if (this.state.id < 0 && (!values.supplierId || values.supplierId == 'undefined')) {\r\n            errors.supplierId = 'required field !!!'\r\n        }       \r\n        if (values.deliveryDetailEditVMs.length < 1) {\r\n            errors.deliveryDetailEditVMs = 'delivery must have products !!!'\r\n        }\r\n        //console.log(\"in validate delivery values errors = \" + JSON.stringify(errors));\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    onChangeQuantity(e, values, setFieldValue) {\r\n        const productNums = [...values.ddEditVM.productNums];\r\n        const quantity = e.target.value || 0;\r\n        const previousQuantity = parseInt(values.ddEditVM.quantity || '0');\r\n\r\n     if (previousQuantity < quantity) {\r\n        for (let i = previousQuantity; i < quantity; i++) {\r\n            productNums.push({ value: '', name: '' });\r\n        }\r\n     } else {\r\n        for (let i = previousQuantity; i >= quantity; i--) {\r\n            let num = productNums.splice(i, 1);\r\n            if (num[0] !== undefined && values.ddEditVM.id !== '') {\r\n               if ( num[0].value !== '') {\r\n                    let deletedNums = values.ddEditVM.deletedNums || [];\r\n                    deletedNums.push(num[0].value);\r\n                    setFieldValue(\"ddEditVM.deletedNums\", deletedNums);                   \r\n                } else {\r\n                    let updatedNums = values.ddEditVM.updatedProductNums || [];\r\n                    let index = updatedNums.findIndex(x => x.value == '-' + i);\r\n                    if (index > -1) updatedNums.splice(index, 1);\r\n                    setFieldValue(\"ddEditVM.updatedProductNums\", updatedNums);\r\n                }\r\n            }\r\n        }}\r\n        setFieldValue(\"ddEditVM.productNums\", productNums);\r\n        setFieldValue(\"ddEditVM.quantity\", e.target.value);\r\n    }\r\n\r\n    onUpdateProductNums(e, id, values, setFieldValue) {\r\n        let updatedProductNums = values.ddEditVM.updatedProductNums || [];        \r\n        let index = updatedProductNums.findIndex(x => x.value == id);\r\n         if (index < 0)\r\n            updatedProductNums.push({ value: id, name: e.target.value });\r\n        else\r\n            updatedProductNums[index].name = e.target.value;\r\n\r\n        setFieldValue(`ddEditVM.updatedProductNums`, updatedProductNums)\r\n    }\r\n\r\n    resetddEditVMForm(values, setFieldValue) {\r\n        let VM = values.ddEditVM;\r\n        VM = {\r\n            id: '', productId: 'undefined', productName: '', quantity: '', pricePerOne: '', productNums: []\r\n        };\r\n        setFieldValue(\"ddEditVM\", VM);\r\n        setFieldValue(\"index\", '');\r\n        setFieldValue(\"ddEditVMerror\", {});\r\n        setFieldValue(\"productNumErrors\", []);\r\n    }\r\n\r\n    isSame = (values) => {\r\n        // console.log(\"isSame(values)\");\r\n        //console.log(\"values.originaldate = \" + values.originalDate);\r\n       // console.log(\"values.date = \" + values.date);\r\n        let same = true;\r\n        if (values.originalSupplierId != values.supplierId) return false;\r\n        if (values.originalDate != values.date) return false;\r\n        if (values.deliveryDetailEditVMs.length != values.originaldds.length) return false;\r\n        if (same) {\r\n            values.originaldds.map(dd => {\r\n               // if (!same) return false;\r\n                let found = values.deliveryDetailEditVMs.find(x => x.id == dd.id);\r\n                if (!found) { same = false}\r\n                if (dd.productNums.length != found.productNums.length) { same = false }\r\n                if (dd.productId != found.productId || dd.pricePerOne != found.pricePerOne) { same = false }\r\n                dd.productNums.map(num => {\r\n                    let foundNum = found.productNums.find(i => i.name == num.name);\r\n                   // console.log(\"foundNum = \" + JSON.stringify(foundNum));\r\n                   // console.log(\"foundNum = \" + (foundNum == 'undefined'));\r\n                   // console.log(\"foundNum = \" + (foundNum == undefined));\r\n                   // console.log(\"foundNum = \" + (!foundNum));\r\n                    if (!foundNum) { same = false}\r\n                })\r\n\r\n            })\r\n        }\r\n        //console.log(\"same = \" + same);\r\n        return same;\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '', productNums: [], updatedProductNums: [], deletedNums: []};  \r\n        let deleteddds = [];    \r\n        let productNumErrors = []; // client side validation\r\n        let EnumErrors = null;// from server\r\n        let deletionErrors = null; // from server\r\n        let originaldds = JSON.parse(JSON.stringify(this.state.originaldds));\r\n        let originalSupplierId = this.state.supplierId;\r\n        let originalDate = this.state.date;\r\n       \r\n        return (\r\n            <div className=\"container pt-5\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM, deleteddds\r\n                        , productNumErrors, EnumErrors, deletionErrors, originaldds, originalSupplierId, originalDate\r\n                    }}\r\n                   \r\n                    onSubmit={async (values, actions) => {\r\n                        this.onSubmit(values,actions)                       \r\n                    }}\r\n                    validateOnChange={true}\r\n                    validateOnBlur={true}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ dirty, isSubmitting, touched, setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control inline-2-5\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"d-flex align-items-top\">\r\n                                <fieldset className=\"d-inline-block\">\r\n                                    <label className=\"required-field\">date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                            className=\"form-control inline-2-5\"\r\n                                            dateFormat=\"dd MMMM yyyy\"\r\n                                            locale=\"en-GB\"\r\n                                            selected={(values.date && new Date(values.date))}\r\n                                            maxDate={new Date()}\r\n                                            onChange={date => {\r\n                                                setFieldValue(\"date\", Function.convertDate(date));\r\n                                            }} />                                   \r\n                                        </div>\r\n                                        <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                </fieldset>                                   \r\n                                    <fieldset className=\"d-inline-block px-5\">\r\n                                    <label className=\"required-field\">supplier</label>\r\n                                    <div>                                     \r\n                                    <CustomSelect\r\n                                                id=\"supplierId\"\r\n                                                name=\"supplierId\"\r\n                                                className={\"d-inline-block inline-4\"}\r\n                                                items={suppliers}\r\n                                                value={values.supplierId}\r\n                                                onChange={(value) => {\r\n                                                    setFieldValue(\"supplierId\", value.value);                                                    \r\n                                                }}/>    \r\n                                        </div>  \r\n                                        <ErrorMessage name=\"supplierId\" component=\"div\"\r\n                                            className=\"alert alert-warning mbt-01\" />\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                            {/* ********************************************************  */}\r\n\r\n                            <div className=\"mt-5\"><h6>add/update products</h6>\r\n                            <fieldset className=\"d-flex align-items-top  mb-3\">                               \r\n                                  <div className=\"d-flex align-items-top\">\r\n                                    <div className=\"d-inline px-3\">\r\n                                            <label>product :&nbsp;</label>                                           \r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2-5\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                                setFieldValue(\"ddEditVM.productName\",selected.label);\r\n                                                setFieldValue(\"ddEditVM.productId\",selected.value);\r\n                                            }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.name &&\r\n                                            <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.name}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.name\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>\r\n                                            <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\"\r\n                                                onChange={e => {                                                                                                 \r\n                                                    this.onChangeQuantity(e, values, setFieldValue)\r\n                                                }}/>\r\n                                        {\r\n                                            values.ddEditVMerror.quantity &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.quantity}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.quantity\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">unit price :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                        {\r\n                                            values.ddEditVMerror.pricePerOne &&\r\n                                                <div className=\"alert alert-warning d-flex mbt-01\">{values.ddEditVMerror.pricePerOne}\r\n                                                <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                                    onClick={() => setFieldValue(\"ddEditVMerror.pricePerOne\", null)}></i></div>\r\n                                        }\r\n                                    </div>\r\n                                  </div>                                   \r\n                                  <div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {                                           \r\n                                        let iserror = false;                                       \r\n                                            if (values.ddEditVM.productId == 'undefined' || values.ddEditVM.productId == '') {\r\n                                                setFieldValue(\"ddEditVMerror.name\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            else {\r\n                                            values.deliveryDetailEditVMs.map((x, y) => {\r\n                                                if (x.productName == values.ddEditVM.productName &&\r\n                                                    (values.index === '' || (values.index !== '' && values.index !== y))) {\r\n                                                    iserror = true;                                                   \r\n                                                    let ddErrorName = values.ddEditVMerror.name;\r\n                                                    ddErrorName = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                    setFieldValue(\"ddEditVMerror.name\", ddErrorName);\r\n                                                }\r\n                                            });\r\n                                            }\r\n                                            if (values.ddEditVM.pricePerOne == '') {\r\n                                                setFieldValue(\"ddEditVMerror.pricePerOne\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity == '') {\r\n                                                setFieldValue(\"ddEditVMerror.quantity\", 'required field !!!');\r\n                                                iserror = true\r\n                                            }\r\n                                            if (values.ddEditVM.quantity > 0) {\r\n                                                let ddErrorNums = values.productNumErrors;\r\n                                                for (let i = 0; i < values.ddEditVM.quantity; i++) {\r\n                                                    if (values.ddEditVM.productNums[i].name.length < 1) {                                                        \r\n                                                         ddErrorNums[i] = 'required field !!!';                                                      \r\n                                                        iserror = true;                                                       \r\n                                                    }\r\n                                                    else if (values.ddEditVM.productNums[i].name.length < 4) {\r\n                                                        ddErrorNums[i] = 'too short !!!';\r\n                                                        iserror = true;\r\n                                                    }\r\n                                                    else {\r\n                                                        let isSame = false;\r\n                                                        for (let j = 0; j < i; j++) {\r\n                                                            if (values.ddEditVM.productNums[i].name == values.ddEditVM.productNums[j].name) {\r\n                                                                isSame = true;\r\n                                                                iserror = true;\r\n                                                            }\r\n                                                        }\r\n                                                        ddErrorNums[i] = isSame ? 'same number exists !!!' : '';\r\n                                                    }                                                 \r\n                                                }\r\n                                                setFieldValue(\"productNumErrors\", ddErrorNums);\r\n                                            }\r\n                                        if(!iserror) {\r\n                                            if (values.index === '') {\r\n                                                let list = values.deliveryDetailEditVMs;\r\n                                                list.push(values.ddEditVM);\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list)\r\n                                            }\r\n                                            else {\r\n                                                let list = values.deliveryDetailEditVMs;                                              \r\n                                                list[values.index] = values.ddEditVM; // edited;\r\n                                                setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                            }\r\n                                            this.resetddEditVMForm(values, setFieldValue)\r\n                                        }\r\n\r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                            this.resetddEditVMForm(values, setFieldValue)                                            \r\n                                        }}>reset</button>\r\n                                  </div>\r\n                                </fieldset>                               \r\n                                <fieldset className=\"mb-1\">\r\n                                    {  values.ddEditVM.productNums &&\r\n                                        values.ddEditVM.productNums.map((num, i) => \r\n                                            <div key={num.value || i} className=\"ml-3\">                                               \r\n                                                <label className=\"required-field\">inventory number {i + 1} :&nbsp;</label>\r\n                                                <Field\r\n                                                    name={`ddEditVM.productNums.${i}.name`}\r\n                                                    type=\"text\"\r\n                                                    className={'form-control d-inline-block inline-4'}\r\n                                                    onChange={e => {                                                      \r\n                                                        if (values.ddEditVM.id !== '') this.onUpdateProductNums(e, num.value || '-'+i, values, setFieldValue)\r\n                                                        setFieldValue(`ddEditVM.productNums.${i}.name`, e.target.value);                                                       \r\n                                                }} /> \r\n                                            <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                onClick={() => {\r\n                                                    let list = values.ddEditVM.productNums;\r\n                                                    list.splice(i, 1)\r\n                                                    setFieldValue(\"ddEditVM.productNums\", list)\r\n                                                    if (values.ddEditVM.id !== '') {\r\n                                                        let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                        let index = updatedProductNums.findIndex(x => x.value === num.value || x.value === `-${i}`);\r\n\r\n                                                        if (index > -1) {\r\n                                                            updatedProductNums.splice(index, 1)\r\n                                                            setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n                                                        }\r\n                                                        if (+num.value > 0) {\r\n                                                            let deleted = values.ddEditVM.deletedNums || [];\r\n                                                            deleted.push(num)\r\n                                                            setFieldValue(\"ddEditVM.deletedNums\", deleted)\r\n                                                        }\r\n                                                    }\r\n                                                    setFieldValue(\"ddEditVM.quantity\", values.ddEditVM.quantity - 1)\r\n                                                }}>Delete</button>                                                                                            \r\n                                                { values.EnumErrors && values.EnumErrors instanceof Array\r\n                                                    && values.index !== '' && values.EnumErrors[values.index]\r\n                                                    && values.EnumErrors[values.index][i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                       \r\n                                                        {values.EnumErrors[values.index][i]}\r\n                                                    </div>\r\n                                            }   \r\n                                           \r\n                                                { values.productNumErrors[i] &&\r\n                                                    <div className=\"alert alert-warning d-inline ml-1\">                                                        \r\n                                                        { values.productNumErrors[i] }\r\n                                                        <i class=\"fa fa-close ml-3 pt-1\"\r\n                                                                onClick={() => setFieldValue(`productNumErrors.${i}`, null)}></i>                                                       \r\n                                                    </div>\r\n                                                }                                                  \r\n                                            </div>\r\n                                        )}\r\n\r\n                                    {/************ deleting ***************/}\r\n\r\n                                    {values.ddEditVM.deletedNums && values.ddEditVM.deletedNums.length > 0 &&\r\n                                        <div>\r\n                                            <label> deleting : </label>\r\n                                            {values.ddEditVM.deletedNums.map((num, i) =>\r\n                                                <div key={num.value || i} className=\"ml-3\">\r\n                                                    <Field\r\n                                                        name={`ddEditVM.deletedNums.${i}.name`}\r\n                                                        type=\"text\"\r\n                                                        className={'form-control d-inline-block inline-4'}\r\n                                                        onChange={() => { }} />\r\n                                                    <button className=\"btn btn-mybtn btn-delete mb-1 ml-1\" type=\"button\"\r\n                                                        onClick={() => {\r\n\r\n                                                            let list = values.ddEditVM.deletedNums;\r\n                                                            list.splice(i, 1)\r\n                                                            setFieldValue(\"ddEditVM.deletedNums\", list)\r\n\r\n                                                            let productNums = values.ddEditVM.productNums;\r\n                                                            productNums.push(num);\r\n                                                            setFieldValue(\"ddEditVM.productNums\", productNums);\r\n\r\n                                                            if (values.ddEditVM.id !== '') {\r\n\r\n                                                                let updatedProductNums = values.ddEditVM.updatedProductNums || [];\r\n                                                                updatedProductNums.push(num);\r\n                                                                setFieldValue(\"ddEditVM.updatedProductNums\", updatedProductNums)\r\n\r\n                                                            }\r\n                                                            setFieldValue(\"ddEditVM.quantity\", Number(values.ddEditVM.quantity) + 1)\r\n                                                    }}>un Delete</button>                                              \r\n                                                    {values.deletionErrors && values.deletionErrors instanceof Array\r\n                                                        && values.index !== '' && values.deletionErrors[values.index] &&\r\n                                                        values.deletionErrors[values.index].indexOf(Number(num.value)) != -1 &&\r\n                                                        <div className=\"alert alert-warning d-inline ml-1\">\r\n                                                            item has associated profiles with owings\r\n                                                    </div>\r\n                                                    }\r\n                                                </div>\r\n                                            )}\r\n                                        </div>\r\n                                    }\r\n                                </fieldset>\r\n                            </div>\r\n                                {/*************************************************************************/}\r\n\r\n                                <fieldset>\r\n                                    <ErrorMessage name=\"deliveryDetailEditVMs\" component=\"div\"\r\n                                        className=\"alert alert-warning mbt-01\" />\r\n                            </fieldset>\r\n                            {(values.EnumErrors || values.deletionErrors ) &&\r\n                                <div className=\"alert alert-warning d-flex mbt-01\">Errors found, save not successful !!!</div>\r\n                            }\r\n\r\n                            {(values.ddDeletionErrors) &&\r\n                                <div className=\"alert alert-warning d-flex mbt-01\"><p>{values.ddDeletionErrors}</p>\r\n                                <p className=\"hoverable\" onClick={() => {\r\n                                    console.log(\"clicked\")\r\n                                    let ddlist = values.deliveryDetailEditVMs;\r\n                                    let todeleteitems = values.todeleteitems;\r\n                                                                      \r\n                                    ddlist = ddlist.push(...todeleteitems);\r\n                                    console.log(\"todeleteitems = \" + JSON.stringify(todeleteitems));\r\n                                    setFieldValue(\"deliveryDetailEditVMs\", ddlist);\r\n                                    setFieldValue(\"deleteddds\", []);\r\n                                    setFieldValue(\"todeleteitems\", [])\r\n                                }}>return deleted items</p></div>\r\n                                }\r\n                                \r\n                               \r\n                            <div className=\"mt-3 \"><h6 className=\"required-field\">products</h6>                               \r\n                                    <table className=\"table x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                                <td>Unit Price</td>\r\n                                            <td style={{ width: '173px' , padding: '.35rem .5rem' }}></td>\r\n                                             </tr>\r\n                                    {\r\n                                            deliveryDetailEditVMs.map((dd, index) =>\r\n                                                <>                                                   \r\n                                            <tr key={index} className={values.index === index ? \"table-active\" : \"\"}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                        <td style={{ width: '173px' , padding: '.35rem .5rem' }}>\r\n                                                            <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => { \r\n                                                    //console.log(\"index = \" + index);                                                  \r\n                                                                setFieldValue(\"index\", index);\r\n                                                                setFieldValue(\"ddEditVM\", JSON.parse(JSON.stringify(dd)))\r\n                                                    }}>Update</button>\r\n                                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\"\r\n                                                        onClick={() => {\r\n                                                            let list = values.deliveryDetailEditVMs;                                                            \r\n                                                            list.splice(index, 1)\r\n                                                            setFieldValue(\"deliveryDetailEditVMs\", list)  \r\n                                                            \r\n                                                            if (dd.id > 0) {\r\n                                                                let deleted = values.deleteddds;\r\n                                                                deleted.push(dd.id)\r\n                                                                setFieldValue(\"deleteddds\", deleted)\r\n\r\n                                                                let todeleteitems = values.todeleteitems || [];\r\n                                                                todeleteitems.push(dd);\r\n                                                                setFieldValue(\"todeleteitems\", todeleteitems);\r\n                                                            }\r\n                                                            if (values.index == index) {\r\n                                                                this.resetddEditVMForm(values, setFieldValue)\r\n                                                            }                                                           \r\n                                                        }}>Delete</button>\r\n                                                        </td>\r\n                                                        { values.EnumErrors && values.EnumErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                            <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                <i class=\"fa fa-bomb \"\r\n                                                                    onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                        { values.deletionErrors && values.deletionErrors[index] &&\r\n                                                            <td style={{ width: '4%', padding: '.75rem' }}>\r\n                                                                <div className=\"alert alert-warning d-inline p-2\">\r\n                                                                    <i class=\"fa fa-bomb \"\r\n                                                                        onClick={() => { }}></i>\r\n                                                                </div>\r\n                                                            </td>\r\n                                                        }\r\n                                                </tr>                                                \r\n                                            </>\r\n                                    )}\r\n                                        </tbody>\r\n                                </table>  \r\n\r\n                                \r\n                              \r\n                                <div className=\"mt-5 ml-3\">\r\n                                    {/*console.log(\"JSON.stringify(values.deliveryDetailEditVMs) = \" + JSON.stringify(values.deliveryDetailEditVMs))}\r\n                                    {console.log(\"JSON.stringify(values.originaldds) = \" + JSON.stringify(values.originaldds))}\r\n                                    {console.log(\" JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)) = \" +\r\n                                        (JSON.stringify(values.deliveryDetailEditVMs) === JSON.stringify(values.originaldds)))*/}\r\n                                    <button className=\"btn btn-mybtn p-x-5\" disabled={isSubmitting || this.isSame(values)}\r\n                                        type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>Cancel</button>\r\n                                </div>\r\n                            </div>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}