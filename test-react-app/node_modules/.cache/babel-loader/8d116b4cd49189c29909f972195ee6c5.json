{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React, { Component } from 'react';\nimport { EventSourcePolyfill } from 'event-source-polyfill';\nimport authHeader from '../service/AuthHeader';\n\nclass EventListner extends Component {\n  constructor(props) {\n    super(props); // ... super, state, and columns ...\n    //this.eventSource = new EventSource(, { withCredentials: true });\n  }\n\n  componentDidMount() {//this.eventSource.onmessage = e =>\n    // console.log(\"msg from sse = \" + e.data);\n  }\n\n  render() {\n    let EventSource = EventSourcePolyfill;\n    const eventSource = new EventSource(`http://localhost:8080/api/inventory/manager/subscribe`, {\n      headers: authHeader()\n    });\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n}\n\nexport default EventListner;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/EventListner.jsx"],"names":["React","Component","EventSourcePolyfill","authHeader","EventListner","constructor","props","componentDidMount","render","EventSource","eventSource","headers"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,mBAAT,QAAoC,uBAApC;AACA,OAAOC,UAAP,MAAuB,uBAAvB;;AAEA,MAAMC,YAAN,SAA2BH,SAA3B,CAAqC;AAEjCI,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN,EADe,CAEf;AAEA;AACH;;AAIDC,EAAAA,iBAAiB,GAAG,CAChB;AACG;AACN;;AAEDC,EAAAA,MAAM,GAAG;AACL,QAAIC,WAAW,GAAGP,mBAAlB;AACA,UAAMQ,WAAW,GAAG,IAAID,WAAJ,CAAiB,uDAAjB,EAAyE;AACzFE,MAAAA,OAAO,EAAER,UAAU;AADsE,KAAzE,CAApB;AAIA,wBAEI,qCAFJ;AAKH;;AA3BgC;;AA8BrC,eAAeC,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { EventSourcePolyfill } from 'event-source-polyfill';\r\nimport authHeader from '../service/AuthHeader';\r\n\r\nclass EventListner extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        // ... super, state, and columns ...\r\n\r\n        //this.eventSource = new EventSource(, { withCredentials: true });\r\n    }\r\n\r\n   \r\n\r\n    componentDidMount() {\r\n        //this.eventSource.onmessage = e =>\r\n           // console.log(\"msg from sse = \" + e.data);\r\n    }\r\n\r\n    render() {\r\n        let EventSource = EventSourcePolyfill;\r\n        const eventSource = new EventSource(`http://localhost:8080/api/inventory/manager/subscribe`, {\r\n            headers: authHeader()\r\n        });\r\n\r\n        return (\r\n            \r\n            <>\r\n                </>\r\n            )\r\n    }\r\n}\r\n\r\nexport default EventListner"]},"metadata":{},"sourceType":"module"}