{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\DeliveryComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport DeliveryDataService from '../service/DeliveryDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport DatePicker from \"react-datepicker\";\n\nclass DeliveryComponent extends Component {\n  constructor(props) {\n    super(props);\n\n    this.togglemsgbox = () => {\n      this.setState({\n        ddEditVMerror: null\n      });\n    };\n\n    this.state = {\n      id: this.props.match.params.id,\n      number: '',\n      date: '',\n      supplierId: '',\n      suppliers: [],\n      deliveryDetailEditVMs: [],\n      products: [],\n      index: '',\n      ddEditVMerror: null\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    DeliveryDataService.retrieve(this.state.id).then(response => {\n      console.log('got response in component did mount id = ' + this.state.id);\n      /* if (this.state.id > 0) {\r\n           this.setState({\r\n               supplierId: response.data.supplierId,                                            \r\n           })\r\n       }*/\n\n      this.setState({\n        supplierId: response.data.supplierId || '',\n        number: response.data.number,\n        date: response.data.date,\n        suppliers: response.data.suppliers,\n        deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\n        products: response.data.products || []\n      });\n    });\n  }\n\n  onSubmit(values) {\n    let item = {\n      id: this.state.id,\n      date: values.date,\n      number: values.number,\n      supplierId: values.supplierId.length > 1 ? values.supplierId : null,\n      targetDate: values.targetDate\n    };\n    console.log('delivery = ' + JSON.stringify(item));\n    DeliveryDataService.save(item).then(response => {\n      console.log('response = ' + JSON.stringify(response.data));\n      this.props.history.push('/deliveries');\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.date) {\n      errors.date = 'required field !!!';\n    }\n    /* if (!values.supplierId) {\r\n         errors.supplierId = 'required field !!!'\r\n     }*/\n\n\n    return errors;\n  }\n\n  cancelForm() {\n    this.props.history.push('/deliveries');\n  }\n\n  render() {\n    console.log('rendering');\n    let {\n      id,\n      number,\n      date,\n      supplierId,\n      suppliers,\n      deliveryDetailEditVMs,\n      products,\n      index,\n      ddEditVMerror\n    } = this.state;\n    let ddEditVM = {\n      id: '',\n      productId: '',\n      productName: '',\n      quantity: '',\n      pricePerOne: ''\n    }; //let ddEditVMerror = '';\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Delivery\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Delivery \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 83\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          number,\n          date,\n          supplierId,\n          suppliers,\n          deliveryDetailEditVMs,\n          products,\n          index,\n          ddEditVMerror,\n          ddEditVM\n        },\n        onSubmit: this.onSubmit,\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-25\",\n              type: \"text\",\n              name: \"number\",\n              disabled: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group d-inline-block\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                  className: \"form-control inline-2-5\",\n                  dateFormat: \"dd MMMM yyyy\",\n                  locale: \"en-GB\",\n                  selected: values.date && new Date(values.date),\n                  onChange: date => setFieldValue(\"date\", date)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"date\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              className: \"form-group d-inline-block px-5\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"supplier\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(CustomSelect, {\n                  id: \"supplierId\",\n                  name: \"supplierId\",\n                  className: \"d-inline-block inline-4\",\n                  items: suppliers,\n                  value: supplierId,\n                  onChange: value => setFieldValue(\"supplierId\", value.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \" selectedCategoryId\",\n                  component: \"div\",\n                  className: \"alert alert-warning\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                children: \"product :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n                className: \"d-inline-block inline-2\",\n                items: products,\n                value: values.ddEditVM.productId,\n                onChange: selected => {\n                  let ddVM = values.ddEditVM;\n                  ddVM.productId = selected.value;\n                  ddVM.productName = selected.label;\n                  setFieldValue(\"ddEditVM\", ddVM);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline px-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"quantity :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control d-inline p-1 inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                name: \"ddEditVM.quantity\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"d-inline px-3\",\n              children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"mb-1\",\n                children: \"pricePerOne :\\xA0\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(Field, {\n                className: \"form-control d-inline p-1 inline-100px\",\n                type: \"number\",\n                min: \"0\",\n                name: \"ddEditVM.pricePerOne\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn mr-1\",\n              type: \"button\",\n              onClick: () => {\n                console.log('values.ddEditVM = ' + JSON.stringify(values.ddEditVM));\n                console.log('index = ' + index);\n                console.log('values.index = ' + values.index);\n                console.log(\" (values.index === '') = \" + (values.index === ''));\n                console.log(\"(values.ddEditVM.id === '') = \" + (values.ddEditVM.id === ''));\n\n                if (values.index === '') {\n                  // deliveryDetailEditVMs.push(ddEditVM);\n                  let equals = false;\n                  values.deliveryDetailEditVMs.map(x => {\n                    console.log('x.productName = ' + x.productName);\n                    console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\n                    console.log(\"(x.productName == values.ddEditVM.productName) = \" + (x.productName == values.ddEditVM.productName));\n                    if (x.productName == values.ddEditVM.productName) equals = true; // console.log('no equals (x.productName) =' + x.productName);\n                  });\n                  console.log('equals = ' + equals);\n                  if (!equals) setFieldValue(\"deliveryDetailEditVMs\", deliveryDetailEditVMs.push(values.ddEditVM));else {\n                    let ddError = values.ddEditVMerror;\n                    ddError = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\n                    console.log('error str = ' + ddError); // errors.ddEditVM = ;//+values.ddEditVM.productName + \" already exist's in the list !!!\"\n\n                    setFieldValue(\"ddEditVMerror\", 'error');\n                    /*this.setState({\r\n                        ddEditVMerror: ddError\r\n                    });*/\n                    // values.ddEditVMerror = ddError;\n                    // ddEditVMerror = ddError;\n\n                    console.log('ddEditVMerror = ' + ddEditVMerror);\n                    console.log('values.ddEditVMerror = ' + values.ddEditVMerror);\n                    console.log(\"values.ddEditVMerror !== '' = \" + (values.ddEditVMerror !== ''));\n                  }\n                } else {\n                  let list = values.deliveryDetailEditVMs;\n                  list[values.index] = values.ddEditVM;\n                  setFieldValue(\"deliveryDetailEditVMs\", list);\n                } // setFieldValue(\"index\", '');                                       \n\n              },\n              children: values.index !== '' ? \"Update\" : \"Add\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete\",\n              type: \"button\",\n              onClick: () => {\n                let ddVM = {\n                  id: '',\n                  productId: '',\n                  productName: '',\n                  quantity: '',\n                  pricePerOne: ''\n                };\n                setFieldValue(\"ddEditVM\", ddVM);\n                setFieldValue(\"index\", '');\n                setFieldValue(\"ddEditVMerror\", null), console.log('ddEditVM = ' + JSON.stringify(values.ddEditVM));\n              },\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 37\n            }, this), values.ddEditVMerror && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"alert alert-warning d-flex\",\n              children: [this.state.ddEditVMerror, /*#__PURE__*/_jsxDEV(\"i\", {\n                class: \"fa fa-close ml-auto pr-3 pt-1\",\n                onClick: () => setFieldValue(\"ddEditVMerror\", null)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 45\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n            className: \"table border x-Table\",\n            children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n              children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Product\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 235,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Quantity\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 49\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: \"Unit Price\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  style: {\n                    width: '140px'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 45\n              }, this), deliveryDetailEditVMs.map((dd, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n                children: [/*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.productName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 243,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: dd.quantity\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: new Intl.NumberFormat(\"en-GB\", {\n                    style: \"currency\",\n                    currency: \"BGN\",\n                    maximumFractionDigits: 2\n                  }).format(dd.pricePerOne)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 245,\n                  columnNumber: 53\n                }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n                  children: [/*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn mr-1\",\n                    type: \"button\",\n                    onClick: () => {\n                      console.log('index = ' + index);\n                      setFieldValue(\"index\", index);\n                      setFieldValue(\"ddEditVM\", dd);\n                    },\n                    children: \"Update\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 57\n                  }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                    className: \"btn btn-mybtn btn-delete\",\n                    type: \"button\",\n                    onClick: () => deliveryDetailEditVMs.splice(index, 1),\n                    children: \"Delete\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 57\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 53\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 49\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 233,\n              columnNumber: 41\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn px-5\",\n            type: \"submit\",\n            children: \"Save\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n            type: \"button\",\n            onClick: this.cancelForm,\n            children: \"cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default DeliveryComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/DeliveryComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","DeliveryDataService","CustomSelect","DatePicker","DeliveryComponent","constructor","props","togglemsgbox","setState","ddEditVMerror","state","id","match","params","number","date","supplierId","suppliers","deliveryDetailEditVMs","products","index","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","console","log","data","values","item","length","targetDate","JSON","stringify","save","history","push","errors","render","ddEditVM","productId","productName","quantity","pricePerOne","setFieldValue","Date","value","selected","ddVM","label","equals","map","x","ddError","list","width","dd","Intl","NumberFormat","style","currency","maximumFractionDigits","format","splice"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport DeliveryDataService from '../service/DeliveryDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport DatePicker from \"react-datepicker\";\r\n\r\nclass DeliveryComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            number: '',\r\n            date: '',\r\n            supplierId: '',\r\n            suppliers: [],\r\n            deliveryDetailEditVMs: [],\r\n            products: [],\r\n            index: '',\r\n            ddEditVMerror:null\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n       DeliveryDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                console.log('got response in component did mount id = '+this.state.id);\r\n               /* if (this.state.id > 0) {\r\n                    this.setState({\r\n                        supplierId: response.data.supplierId,                                            \r\n                    })\r\n                }*/\r\n                this.setState({\r\n                    supplierId: response.data.supplierId || '',  \r\n                    number: response.data.number, \r\n                    date: response.data.date,\r\n                    suppliers: response.data.suppliers,  \r\n                    deliveryDetailEditVMs: response.data.deliveryDetailEditVMs || [],\r\n                    products: response.data.products || []\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values) {\r\n        let item = {\r\n            id: this.state.id,\r\n            date: values.date,\r\n            number:values.number,\r\n            supplierId: (values.supplierId.length > 1 ? values.supplierId : null),\r\n            targetDate: values.targetDate\r\n        }\r\n        console.log('delivery = ' + JSON.stringify(item));\r\n        DeliveryDataService.save(item)\r\n            .then((response) => {\r\n                console.log('response = ' + JSON.stringify(response.data));\r\n                this.props.history.push('/deliveries')\r\n    })\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.date) {\r\n            errors.date = 'required field !!!'\r\n        }\r\n       /* if (!values.supplierId) {\r\n            errors.supplierId = 'required field !!!'\r\n        }*/\r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        this.props.history.push('/deliveries')\r\n    }\r\n\r\n    togglemsgbox = () => {\r\n        this.setState({ ddEditVMerror: null })\r\n    }\r\n\r\n    render() {\r\n        console.log('rendering');\r\n        let { id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror} = this.state ;\r\n        let ddEditVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '' };\r\n        //let ddEditVMerror = '';\r\n        return (\r\n            <div className=\"container\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Delivery</h3> : <h3 className=\"mb-3\"> Add New Delivery </h3>}\r\n                <Formik\r\n                    initialValues={{\r\n                        id, number, date, supplierId, suppliers, deliveryDetailEditVMs, products, index, ddEditVMerror, ddEditVM\r\n                    }}\r\n                    onSubmit={this.onSubmit}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {\r\n                        ({ setFieldValue, values }) => (\r\n                            <Form>\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>number</label>\r\n                                    <Field className=\"form-control w-25\" type=\"text\" name=\"number\" disabled\r\n                                    />                                   \r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                <fieldset className=\"form-group d-inline-block\">\r\n                                    <label>date</label>\r\n                                    <div>\r\n                                    <DatePicker\r\n                                                className=\"form-control inline-2-5\"\r\n                                        dateFormat=\"dd MMMM yyyy\"\r\n                                        locale=\"en-GB\"                                       \r\n                                        selected={values.date && new Date(values.date)}\r\n                                        onChange={date => setFieldValue(\"date\", date)} />\r\n                                    <ErrorMessage name=\"date\" component=\"div\"\r\n                                            className=\"alert alert-warning\" />\r\n                                    </div>\r\n                                </fieldset>\r\n                                   \r\n                                    <fieldset className=\"form-group d-inline-block px-5\">\r\n                                        <label>supplier</label>\r\n                                        <div>\r\n                                    <CustomSelect\r\n                                        id=\"supplierId\"\r\n                                        name=\"supplierId\"\r\n                                            className={\"d-inline-block inline-4\"}\r\n                                        items={suppliers}\r\n                                        value={supplierId}\r\n                                        onChange={(value) => setFieldValue(\"supplierId\", value.value)}\r\n                                    />\r\n                                    <ErrorMessage name=\" selectedCategoryId\" component=\"div\"\r\n                                                className=\"alert alert-warning\" />\r\n                                        </div>\r\n                                    </fieldset>\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <div className=\"d-inline\">\r\n                                        <label>product :&nbsp;</label>\r\n                                        <CustomSelect\r\n                                            className={\"d-inline-block inline-2\"}\r\n                                            items={products}\r\n                                            value={values.ddEditVM.productId}\r\n                                            onChange={(selected) => {\r\n                                                let ddVM = values.ddEditVM;\r\n                                                ddVM.productId = selected.value;\r\n                                                ddVM.productName = selected.label;\r\n                                                setFieldValue(\"ddEditVM\", ddVM);                                               \r\n                                            }\r\n                                            }\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">quantity :&nbsp;</label>                                       \r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.quantity\" />                                        \r\n                                    </div>\r\n                                    <div className=\"d-inline px-3\">\r\n                                        <label className=\"mb-1\">pricePerOne :&nbsp;</label>\r\n                                        <Field className=\"form-control d-inline p-1 inline-100px\" type=\"number\" min=\"0\" name=\"ddEditVM.pricePerOne\" />\r\n                                    </div>\r\n                                    <button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                                        console.log('values.ddEditVM = ' + JSON.stringify(values.ddEditVM));\r\n                                        console.log('index = ' + index);\r\n                                        console.log('values.index = ' + values.index); \r\n                                        console.log(\" (values.index === '') = \" + (values.index === ''));\r\n                                        console.log(\"(values.ddEditVM.id === '') = \" + (values.ddEditVM.id === ''));\r\n                                        if (values.index === '') {\r\n                                            // deliveryDetailEditVMs.push(ddEditVM);\r\n                                            let equals = false;\r\n                                            values.deliveryDetailEditVMs.map((x) => {\r\n\r\n                                                console.log('x.productName = ' + x.productName);\r\n                                                console.log(\"values.ddEditVM.productName = \" + values.ddEditVM.productName);\r\n                                                console.log(\"(x.productName == values.ddEditVM.productName) = \" + (x.productName == values.ddEditVM.productName));\r\n                                                if (x.productName == values.ddEditVM.productName)\r\n                                                    equals = true\r\n                                                   // console.log('no equals (x.productName) =' + x.productName);\r\n\r\n                                            });\r\n                                        \r\n                                            console.log('equals = ' + equals);\r\n                                            if (!equals) setFieldValue(\"deliveryDetailEditVMs\", deliveryDetailEditVMs.push(values.ddEditVM))\r\n                                            else {\r\n\r\n                                                let ddError = values.ddEditVMerror;\r\n                                                ddError = values.ddEditVM.productName + ' already exist\\'s in the list!!!';\r\n                                                console.log('error str = ' + ddError);\r\n                                                // errors.ddEditVM = ;//+values.ddEditVM.productName + \" already exist's in the list !!!\"\r\n                                                setFieldValue(\"ddEditVMerror\", 'error');\r\n                                                /*this.setState({\r\n                                                    ddEditVMerror: ddError\r\n                                                });*/\r\n                                               // values.ddEditVMerror = ddError;\r\n                                               // ddEditVMerror = ddError;\r\n                                                console.log('ddEditVMerror = ' + ddEditVMerror);\r\n                                                console.log('values.ddEditVMerror = ' + values.ddEditVMerror);\r\n                                                console.log(\"values.ddEditVMerror !== '' = \" + (values.ddEditVMerror !== ''));\r\n                                            }\r\n\r\n                                        }\r\n                                        else {\r\n                                            let list = values.deliveryDetailEditVMs;\r\n                                            list[values.index] = values.ddEditVM;\r\n                                            setFieldValue(\"deliveryDetailEditVMs\", list);\r\n                                        } \r\n                                       // setFieldValue(\"index\", '');                                       \r\n                                        \r\n                                    }}>{values.index !== '' ? \"Update\" : \"Add\"}</button>\r\n\r\n                                    <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => {\r\n                                        let ddVM = { id: '', productId: '', productName: '', quantity: '', pricePerOne: '' }\r\n                                        setFieldValue(\"ddEditVM\", ddVM);\r\n                                        setFieldValue(\"index\", '');\r\n                                        setFieldValue(\"ddEditVMerror\",null),\r\n                                        console.log('ddEditVM = ' + JSON.stringify(values.ddEditVM));\r\n                                    }\r\n                                    }>reset</button>\r\n\r\n                                    \r\n                                    {values.ddEditVMerror &&\r\n                                        <div className=\"alert alert-warning d-flex\">{this.state.ddEditVMerror}\r\n                                            <i class=\"fa fa-close ml-auto pr-3 pt-1\"\r\n                                            onClick={() => setFieldValue(\"ddEditVMerror\", null)}></i></div>}\r\n                   \r\n                    \r\n                                </fieldset>\r\n                               \r\n                                    <table className=\"table border x-Table\">\r\n                                        <tbody>\r\n                                            <tr>\r\n                                                <td>Product</td>\r\n                                                <td>Quantity</td>\r\n                                            <td>Unit Price</td>\r\n                                            <td style={{ width: '140px' }}></td>\r\n                                        </tr>\r\n                                        {\r\n                                    deliveryDetailEditVMs.map((dd,index) =>\r\n                                                <tr key={index}>\r\n                                                    <td>{dd.productName}</td>\r\n                                                    <td>{dd.quantity}</td>\r\n                                                    <td>{new Intl.NumberFormat(\"en-GB\", {\r\n                                                        style: \"currency\",\r\n                                                        currency: \"BGN\",\r\n                                                        maximumFractionDigits: 2\r\n                                                    }).format(dd.pricePerOne)}</td>\r\n                                                    <td><button className=\"btn btn-mybtn mr-1\" type=\"button\" onClick={() => {\r\n                                                        console.log('index = ' + index);\r\n                                                        setFieldValue(\"index\", index);\r\n                                                        setFieldValue(\"ddEditVM\", dd)\r\n                                                    }}>Update</button>\r\n                                                        <button className=\"btn btn-mybtn btn-delete\" type=\"button\" onClick={() => deliveryDetailEditVMs.splice(index,1)}>Delete</button></td>\r\n                                                </tr>\r\n                                    )\r\n                                        }\r\n                                    </tbody>\r\n                                </table>\r\n                                                    \r\n\r\n                                <button className=\"btn btn-mybtn px-5\" type=\"submit\">Save</button>\r\n                                <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                            </Form>\r\n                        )\r\n                    }\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default DeliveryComponent"]},"metadata":{},"sourceType":"module"}