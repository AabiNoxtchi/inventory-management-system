{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\Filters\\\\CityFilter.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport CustomSelect from './CustomSelect';\nimport './Filter.css';\nimport Functions from './Functions';\n\nclass CityFilter extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      countries: props.countries,\n      countryId: props.countryId,\n      cities: props.cities,\n      filteredcities: this.filter([], props.cities, props.countryId),\n      cityId: props.cityId,\n      zones: props.zones,\n      timeZone: props.timeZone,\n      currencies: props.currencies,\n      currency: props.currency,\n      prefix: props.prefix\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.resetForm = this.resetForm.bind(this);\n  }\n\n  onSubmit(values) {\n    let path = window.location.pathname;\n    let search = window.location.search;\n    Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch);\n  }\n\n  resetForm() {\n    this.props.onNewSearch ? this.props.onNewSearch('') : window.location.href = window.location.pathname;\n  }\n\n  filter(subs, names, value) {\n    subs = [];\n    if (value == null || value == 'undefined') subs = names;else {\n      for (let i = 0; i < names.length; i++) {\n        if (names[i].filterBy == value || !names[i].value || names[i].value == 'undefined') {\n          subs.push(names[i]);\n        }\n      }\n    }\n    return subs;\n  }\n\n  render() {\n    let {\n      countries,\n      countryId,\n      cities,\n      cityId,\n      zones,\n      timeZone,\n      currencies,\n      currency,\n      filteredcities\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(Formik, {\n      initialValues: {\n        countries,\n        countryId,\n        cities,\n        cityId,\n        zones,\n        timeZone,\n        currencies,\n        currency,\n        filteredcities\n      },\n      onSubmit: this.onSubmit,\n      enableReinitialize: true,\n      children: ({\n        props,\n        setFieldValue,\n        values\n      }) => /*#__PURE__*/_jsxDEV(Form, {\n        className: \"filter-form\",\n        children: /*#__PURE__*/_jsxDEV(\"fieldset\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"country\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: countries,\n              value: values.countryId,\n              onChange: selected => {\n                setFieldValue(\"countryId\", selected.value);\n                let subs = this.filter([], values.cities, selected.value);\n                setFieldValue(\"filteredcities\", subs);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"cities\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: values.filteredcities || filteredcities || cities,\n              value: values.cityId || '',\n              onChange: selected => setFieldValue(\"cityId\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"time zone\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: values.zones,\n              value: values.timeZone || '',\n              onChange: selected => setFieldValue(\"timeZone\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"currency\\xA0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              className: \"inline inline-4\",\n              items: values.currencies,\n              value: values.currency || '',\n              onChange: selected => setFieldValue(\"currency\", selected.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"inline\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button px-5\",\n              type: \"submit\",\n              children: \"Search\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"button btn-delete\",\n              type: \"button\",\n              onClick: this.resetForm,\n              children: \"reset\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default CityFilter;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/Filters/CityFilter.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","CustomSelect","Functions","CityFilter","constructor","props","state","countries","countryId","cities","filteredcities","filter","cityId","zones","timeZone","currencies","currency","prefix","onSubmit","bind","resetForm","values","path","window","location","pathname","search","getSubmitPath","onNewSearch","href","subs","names","value","i","length","filterBy","push","render","setFieldValue","selected"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport CustomSelect from './CustomSelect';\r\nimport './Filter.css';\r\nimport Functions from './Functions';\r\n\r\nclass CityFilter extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            countries: props.countries,\r\n            countryId: props.countryId,\r\n            cities: props.cities,\r\n            filteredcities: this.filter([], props.cities, props.countryId),\r\n            cityId: props.cityId,\r\n            zones: props.zones,\r\n            timeZone: props.timeZone,\r\n            currencies: props.currencies,\r\n            currency: props.currency,\r\n            prefix: props.prefix,\r\n        }      \r\n\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.resetForm = this.resetForm.bind(this)\r\n    }\r\n\r\n    onSubmit(values) {\r\n      \r\n        let path = window.location.pathname;\r\n        let search = window.location.search;\r\n        Functions.getSubmitPath(path, search, this.state.prefix, values, this.props.onNewSearch)\r\n        }\r\n\r\n    resetForm() {\r\n\r\n        this.props.onNewSearch ?\r\n            this.props.onNewSearch('') :\r\n            window.location.href = window.location.pathname;\r\n      \r\n    }\r\n\r\n    filter(subs, names, value) {\r\n        subs = [];\r\n        if (value == null || value == 'undefined') subs = names;\r\n        else {\r\n            for (let i = 0; i < names.length; i++) {\r\n\r\n                if (names[i].filterBy == value || !names[i].value || names[i].value == 'undefined') {\r\n                    subs.push(names[i])\r\n                }\r\n            }\r\n        }\r\n        return subs\r\n    }\r\n\r\n    render() {\r\n       \r\n        let { countries, countryId, cities, cityId, zones, timeZone, currencies, currency, filteredcities} = this.state\r\n        return (\r\n\r\n            <Formik\r\n                initialValues={{ countries, countryId, cities, cityId, zones, timeZone, currencies, currency, filteredcities }}\r\n                onSubmit={this.onSubmit}\r\n                enableReinitialize={true}\r\n            >\r\n                {({ props, setFieldValue, values }) => (\r\n                    <Form className=\"filter-form\">\r\n                        <fieldset >\r\n                           \r\n                            <div className=\"inline\">\r\n                                <label >country&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={countries}\r\n                                    value={values.countryId}\r\n                                    onChange={(selected) => {\r\n                                        setFieldValue(\"countryId\", selected.value);\r\n                                        let subs = this.filter([], values.cities, selected.value);                                      \r\n                                        setFieldValue(\"filteredcities\", subs);\r\n                                    }}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >cities&nbsp;</label>\r\n                                <CustomSelect                                  \r\n                                    className={\"inline inline-4\"}\r\n                                    items={values.filteredcities || filteredcities || cities}\r\n                                    value={values.cityId || ''}\r\n                                    onChange={(selected) => setFieldValue(\"cityId\", selected.value)}                                \r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >time zone&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={values.zones}\r\n                                    value={values.timeZone || ''}\r\n                                    onChange={(selected) => setFieldValue(\"timeZone\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <label >currency&nbsp;</label>\r\n                                <CustomSelect\r\n                                    className={\"inline inline-4\"}\r\n                                    items={values.currencies}\r\n                                    value={values.currency || ''}\r\n                                    onChange={(selected) => setFieldValue(\"currency\", selected.value)}\r\n                                />\r\n                            </div>\r\n                            <div className=\"inline\">\r\n                                <button className=\"button px-5\" type=\"submit\">Search</button>\r\n                                <button className=\"button btn-delete\" type=\"button\" onClick={this.resetForm}>reset</button>\r\n                            </div>\r\n                        </fieldset>\r\n                    </Form>\r\n                )\r\n                }\r\n            </Formik>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CityFilter"]},"metadata":{},"sourceType":"module"}