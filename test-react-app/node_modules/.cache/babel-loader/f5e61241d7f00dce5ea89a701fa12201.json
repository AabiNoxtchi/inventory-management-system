{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Uni-2020\\\\Java\\\\imy-project\\\\inventory-management-system\\\\test-react-app\\\\src\\\\component\\\\ProductComponent.jsx\";\nimport React, { Component } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport ProductDataService from '../service/ProductDataService';\nimport '../myStyles/Style.css';\nimport CustomSelect from './Filters/CustomSelect';\nimport Function from './Shared/Function';\n\nclass ProductComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      id: this.props.match.params.id,\n      name: '',\n      description: '',\n      productType: '',\n      productTypes: [],\n      userCategoryId: '',\n      userCategories: [],\n      filteredUserCategories: [],\n      amortizationPercent: ''\n    };\n    this.onSubmit = this.onSubmit.bind(this);\n    this.validate = this.validate.bind(this);\n    this.cancelForm = this.cancelForm.bind(this);\n  }\n\n  componentDidMount() {\n    ProductDataService.retrieve(this.state.id).then(response => {\n      if (this.state.id > 0) {\n        this.setState({\n          name: response.data.name || '',\n          description: response.data.description || '',\n          productType: response.data.productType || '',\n          userCategoryId: response.data.userCategoryId || '',\n          //response.data.productType == 'DMA' ? response.data.subCategory : '',\n          amortizationPercent: response.data.amortizationPercent || ''\n        });\n      }\n\n      this.setState({\n        productTypes: response.data.productTypes || [],\n        userCategories: response.data.userCategories || [],\n        filteredUserCategories: response.data.userCategories || []\n      });\n    });\n  }\n\n  onSubmit(values, actions) {\n    let item = {\n      id: this.state.id,\n      name: values.name,\n      description: values.description,\n      userCategoryId:\n      /*values.productType == 'DMA' ?*/\n      values.userCategoryId,\n      //: null,\n      targetDate: values.targetDate\n    };\n    ProductDataService.save(item).then(() => this.props.history.push('/products')).catch(error => {\n      let msg = Function.getErrorMsg(error);\n      actions.setErrors({\n        phoneNumber: msg\n      });\n      if (msg.indexOf(\"name\") > -1) actions.setErrors({\n        name: msg\n      });\n      this.setState({\n        errormsg: msg\n      });\n    });\n  }\n\n  validate(values) {\n    let errors = {};\n\n    if (!values.name) {\n      errors.name = 'required field !!!';\n    } else if (values.name.length < 5) {\n      errors.name = 'Enter atleast 5 Characters';\n    }\n\n    if (!values.userCategoryId) {\n      errors.userCategoryId = 'required field !!!';\n    }\n\n    return errors;\n  }\n\n  cancelForm() {\n    window.history.back();\n  }\n\n  render() {\n    const precent = \"%\";\n    let {\n      id,\n      name,\n      description,\n      userCategoryId\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container pt-5\",\n      children: [this.state.id > 0 ? /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Update Product\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 38\n      }, this) : /*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"mb-3\",\n        children: \" Add New Product \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 82\n      }, this), /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          id,\n          name,\n          description,\n          userCategoryId\n        },\n        onSubmit: (values, actions) => this.onSubmit(values, actions),\n        validateOnChange: false,\n        validateOnBlur: false,\n        validate: this.validate,\n        enableReinitialize: true,\n        children: ({\n          setFieldValue,\n          values,\n          dirty\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          children: [this.state.errormsg && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"alert alert-warning\",\n            children: this.state.errormsg\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 57\n          }, this), /*#__PURE__*/_jsxDEV(Field, {\n            className: \"form-control\",\n            type: \"text\",\n            name: \"id\",\n            hidden: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required-field\",\n              children: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              type: \"text\",\n              name: \"name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"name\",\n              component: \"div\",\n              className: \"alert alert-warning  w-25\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"product type\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 37\n            }, this), this.state.productTypes.map(type => /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"mx-3\",\n              children: [/*#__PURE__*/_jsxDEV(Field, {\n                className: \"mx-1\",\n                type: \"radio\",\n                name: \"productType\",\n                value: type.value,\n                checked: this.state.productType == type.value,\n                onChange: value => {\n                  this.setState({\n                    productType: value.target.value\n                  });\n                  let subs = [];\n\n                  for (let i = 0; i < this.state.userCategories.length; i++) {\n                    if (this.state.userCategories[i].category.productType == value.target.value) {\n                      subs.push(this.state.userCategories[i]);\n                    }\n                  }\n\n                  this.setState({\n                    filteredUserCategories: subs\n                  });\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 49\n              }, this), type.name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 45\n            }, this)), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"productType\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"required-field\",\n              children: \"category\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(CustomSelect, {\n              name: \"category\",\n              className: \"w-50\",\n              items: this.state.filteredUserCategories,\n              value: values.userCategoryId,\n              onChange: value => {\n                let sub = this.state.filteredUserCategories.find(s => s.id == value.value);\n                setFieldValue(\"userCategoryId\", value.value);\n                console.log(\"sub = \" + JSON.stringify(sub));\n                this.setState({\n                  amortizationPercent: sub.amortizationPercent\n                });\n                if (this.state.productType == '') this.setState({\n                  productType: sub.category.productType\n                });\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 41\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"userCategoryId\",\n              component: \"div\",\n              className: \"alert alert-warning w-50\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"amortization percent\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 49\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 84\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control ws inline pt-2 pb-2\",\n              readOnly: true,\n              type: \"number\",\n              value: this.state.amortizationPercent\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 33\n            }, this), \"\\xA0%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 45\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              className: \"form-control w-50\",\n              as: \"textarea\",\n              type: \"textarea\",\n              name: \"description\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"description\",\n              component: \"div\",\n              className: \"alert alert-warning\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            className: \"form-group mt-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn p-x-5\",\n              disabled: !dirty,\n              type: \"submit\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-mybtn btn-delete px-5 ml-5\",\n              type: \"button\",\n              onClick: this.cancelForm,\n              children: \"cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 33\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 29\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ProductComponent;","map":{"version":3,"sources":["D:/Uni-2020/Java/imy-project/inventory-management-system/test-react-app/src/component/ProductComponent.jsx"],"names":["React","Component","Formik","Form","Field","ErrorMessage","ProductDataService","CustomSelect","Function","ProductComponent","constructor","props","state","id","match","params","name","description","productType","productTypes","userCategoryId","userCategories","filteredUserCategories","amortizationPercent","onSubmit","bind","validate","cancelForm","componentDidMount","retrieve","then","response","setState","data","values","actions","item","targetDate","save","history","push","catch","error","msg","getErrorMsg","setErrors","phoneNumber","indexOf","errormsg","errors","length","window","back","render","precent","setFieldValue","dirty","map","type","value","target","subs","i","category","sub","find","s","console","log","JSON","stringify"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport ProductDataService from '../service/ProductDataService';\r\nimport '../myStyles/Style.css';\r\nimport CustomSelect from './Filters/CustomSelect';\r\nimport Function from './Shared/Function'\r\n\r\n\r\nclass ProductComponent extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            id: this.props.match.params.id,\r\n            name: '',\r\n            description: '',\r\n            productType: '',\r\n            productTypes: [],           \r\n            userCategoryId: '',          \r\n            userCategories: [],\r\n            filteredUserCategories:[],\r\n            amortizationPercent: '',\r\n        }\r\n        this.onSubmit = this.onSubmit.bind(this)\r\n        this.validate = this.validate.bind(this)\r\n        this.cancelForm = this.cancelForm.bind(this)\r\n    }\r\n\r\n    componentDidMount() {       \r\n        ProductDataService.retrieve(this.state.id)\r\n            .then(response => {\r\n                if (this.state.id > 0) {\r\n                    this.setState({\r\n                        name: response.data.name||'',\r\n                        description: response.data.description||'',\r\n                        productType: response.data.productType||'',\r\n                        userCategoryId: response.data.userCategoryId||'',//response.data.productType == 'DMA' ? response.data.subCategory : '',\r\n                        amortizationPercent: response.data.amortizationPercent||''\r\n                    })\r\n                }\r\n                this.setState({\r\n                    productTypes: response.data.productTypes||[],\r\n                    userCategories: response.data.userCategories||[],\r\n                    filteredUserCategories: response.data.userCategories||[],\r\n                });\r\n            })\r\n    }\r\n\r\n    onSubmit(values, actions) {\r\n        let item = {\r\n            id: this.state.id,\r\n            name: values.name,\r\n            description: values.description,\r\n            userCategoryId: /*values.productType == 'DMA' ?*/ values.userCategoryId,//: null,\r\n            targetDate: values.targetDate\r\n        }\r\n        ProductDataService.save(item)\r\n            .then(() => this.props.history.push('/products'))\r\n            .catch(error =>{              \r\n                let msg = Function.getErrorMsg(error);\r\n                actions.setErrors({ phoneNumber: msg })\r\n                if (msg.indexOf(\"name\") > -1)\r\n                    actions.setErrors({ name: msg }) \r\n                this.setState({\r\n                    errormsg: msg\r\n                })\r\n            })\r\n    }\r\n\r\n    validate(values) {\r\n        let errors = {}\r\n        if (!values.name) {\r\n            errors.name = 'required field !!!'\r\n        } else if (values.name.length < 5) {\r\n            errors.name = 'Enter atleast 5 Characters'\r\n        }\r\n        if (!values.userCategoryId) {\r\n            errors.userCategoryId = 'required field !!!'\r\n        }                      \r\n        return errors\r\n    }\r\n\r\n    cancelForm() {\r\n        window.history.back();\r\n    }\r\n\r\n    render() {\r\n        const precent = \"%\";\r\n        let { id, name, description,  userCategoryId} = this.state\r\n        return (\r\n            <div className=\"container pt-5\">\r\n                {this.state.id > 0 ? <h3 className=\"mb-3\"> Update Product</h3> : <h3 className=\"mb-3\"> Add New Product </h3>}\r\n                <Formik\r\n                    initialValues={{ id, name, description, userCategoryId}}\r\n                    onSubmit={(values, actions) => this.onSubmit(values, actions)}\r\n                    validateOnChange={false}\r\n                    validateOnBlur={false}\r\n                    validate={this.validate}\r\n                    enableReinitialize={true}\r\n                >\r\n                    {({ setFieldValue, values, dirty}) => (\r\n                            <Form>\r\n                                {this.state.errormsg && <div className=\"alert alert-warning\">{this.state.errormsg}</div>}\r\n                                <Field className=\"form-control\" type=\"text\" name=\"id\" hidden />\r\n                                <fieldset className=\"form-group\">\r\n                                    <label className=\"required-field\">name</label>\r\n                                    <Field className=\"form-control w-50\" type=\"text\" name=\"name\"\r\n                                   />\r\n                                    <ErrorMessage name=\"name\" component=\"div\"\r\n                                        className=\"alert alert-warning  w-25\" />\r\n                                </fieldset>\r\n                                \r\n                                <fieldset className=\"form-group\">\r\n                                    <label>product type</label>\r\n                                    {this.state.productTypes.map((type) =>\r\n                                            <label className=\"mx-3\">\r\n                                                <Field\r\n                                                    className=\"mx-1\"\r\n                                                    type=\"radio\" name=\"productType\" value={type.value}\r\n                                                    checked={this.state.productType == type.value}\r\n                                                    onChange={(value) => {                                                        \r\n                                                        this.setState({ productType: value.target.value });                                                       \r\n                                                        let subs = [];\r\n                                                        for (let i = 0; i < this.state.userCategories.length; i++) {\r\n                                                            if (this.state.userCategories[i].category.productType == value.target.value) {\r\n                                                                subs.push(this.state.userCategories[i])\r\n                                                            }\r\n                                                        }\r\n                                                        this.setState({ filteredUserCategories: subs })\r\n                                                    }}/>\r\n                                                {type.name}\r\n                                    </label>)}                                   \r\n                                    <ErrorMessage name=\"productType\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>                                        \r\n                                        <fieldset className=\"form-group\">\r\n                                        <label className=\"required-field\">category</label>\r\n                                        <CustomSelect\r\n                                                    name=\"category\"\r\n                                                    className={\"w-50\"}\r\n                                                    items={this.state.filteredUserCategories}\r\n                                                    value={values.userCategoryId}\r\n                                                    onChange={(value) => {\r\n                                                        let sub = this.state.filteredUserCategories.find(s => s.id == value.value);\r\n                                                        setFieldValue(\"userCategoryId\", value.value);\r\n                                                        console.log(\"sub = \" + JSON.stringify(sub));\r\n                                                        this.setState({\r\n                                                            amortizationPercent: sub.amortizationPercent,                                                           \r\n                                                        })\r\n                                                       if (this.state.productType == '')\r\n                                                            this.setState({                                                              \r\n                                                                productType: sub.category.productType\r\n                                                            })\r\n                                                    }}\r\n                                        />\r\n                                        <ErrorMessage name=\"userCategoryId\" component=\"div\"\r\n                                            className=\"alert alert-warning w-50\" />\r\n                                            </fieldset>\r\n                                            <fieldset className=\"form-group\">\r\n                                                <label>amortization percent</label><br/>\r\n                                <Field className=\"form-control ws inline pt-2 pb-2\"\r\n                                    readOnly type=\"number\" value={this.state.amortizationPercent} />&nbsp;%                                            \r\n                                            </fieldset>\r\n                                <fieldset className=\"form-group\">\r\n                                    <label>description</label>\r\n                                    <Field className=\"form-control w-50\" as=\"textarea\" type=\"textarea\" name=\"description\" />\r\n                                    <ErrorMessage name=\"description\" component=\"div\"\r\n                                        className=\"alert alert-warning\" />\r\n                                </fieldset>\r\n                                <fieldset className=\"form-group mt-5\">    \r\n                                <button className=\"btn btn-mybtn p-x-5\" disabled={!dirty} type=\"submit\">Save</button>\r\n                                    <button className=\"btn btn-mybtn btn-delete px-5 ml-5\" type=\"button\" onClick={this.cancelForm}>cancel</button>\r\n                                </fieldset>\r\n                            </Form>\r\n                        )}\r\n                </Formik>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProductComponent"]},"metadata":{},"sourceType":"module"}